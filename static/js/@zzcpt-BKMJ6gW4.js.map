{"version":3,"file":"@zzcpt-BKMJ6gW4.js","sources":["../../../node_modules/@zzcpt/zztool/lib/utils/arrayTrim.js","../../../node_modules/@zzcpt/zztool/lib/utils/chunkArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/chunkArrayItem.js","../../../node_modules/@zzcpt/zztool/lib/utils/public.js","../../../node_modules/@zzcpt/zztool/lib/utils/getFirstChar.js","../../../node_modules/@zzcpt/zztool/lib/utils/toString.js","../../../node_modules/@zzcpt/zztool/lib/utils/toArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataChangeIndex.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataEmpty.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataEqual.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataFind.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataMerge.js","../../../node_modules/@zzcpt/zztool/lib/utils/debounce.js","../../../node_modules/@zzcpt/zztool/lib/utils/deepClone.js","../../../node_modules/@zzcpt/zztool/lib/utils/replaceAll.js","../../../node_modules/@zzcpt/zztool/lib/utils/regIsHas.js","../../../node_modules/@zzcpt/zztool/lib/utils/getDateInfo.js","../../../node_modules/@zzcpt/zztool/lib/utils/getDateType.js","../../../node_modules/@zzcpt/zztool/lib/utils/getDate.js","../../../node_modules/@zzcpt/zztool/lib/utils/getTimeStamp.js","../../../node_modules/@zzcpt/zztool/lib/utils/getBetweenDate.js","../../../node_modules/@zzcpt/zztool/lib/utils/getChar.js","../../../node_modules/@zzcpt/zztool/lib/utils/getLastChar.js","../../../node_modules/@zzcpt/zztool/lib/utils/getMonthDays.js","../../../node_modules/@zzcpt/zztool/lib/utils/getPercentage.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandom.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomColor.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomRGBA.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomRGBColor.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRecentDate.js","../../../node_modules/@zzcpt/zztool/lib/utils/getSameIndexValue.js","../../../node_modules/@zzcpt/zztool/lib/utils/getTimeStep.js","../../../node_modules/@zzcpt/zztool/lib/utils/getType.js","../../../node_modules/@zzcpt/zztool/lib/utils/getUrlParam.js","../../../node_modules/@zzcpt/zztool/lib/utils/getValue.js","../../../node_modules/@zzcpt/zztool/lib/utils/getWeekDay.js","../../../node_modules/@zzcpt/zztool/lib/utils/getWeekTime.js","../../../node_modules/@zzcpt/zztool/lib/utils/getYearWeeks.js","../../../node_modules/@zzcpt/zztool/lib/utils/groupBy.js","../../../node_modules/@zzcpt/zztool/lib/utils/moneyFormat.js","../../../node_modules/@zzcpt/zztool/lib/utils/paramformat.js","../../../node_modules/@zzcpt/zztool/lib/utils/regEmail.js","../../../node_modules/@zzcpt/zztool/lib/utils/regIdcard.js","../../../node_modules/@zzcpt/zztool/lib/utils/regPhone.js","../../../node_modules/@zzcpt/zztool/lib/utils/shuffleArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/sleep.js","../../../node_modules/@zzcpt/zztool/lib/utils/strReplace.js","../../../node_modules/@zzcpt/zztool/lib/utils/throttle.js","../../../node_modules/@zzcpt/zztool/lib/utils/toTree.js","../../../node_modules/@zzcpt/zztool/lib/utils/uniqueArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/weekInMonthCount.js","../../../node_modules/@zzcpt/zztool/lib/index.js"],"sourcesContent":["/**\n * 数组去空\n * @param data 数组\n */\nexport function arrayTrim(data) {\n    return data.filter((item) => item);\n}\n","/**\n * 数组分块\n * 将数组分成size块\n * @param data 数组\n * @param size 大小\n */\nexport function chunkArray(data, size) {\n    if (size <= 1) {\n        return [data];\n    }\n    const result = [];\n    const lng = Math.ceil(data.length / size);\n    for (let i = 0; i < size; i++) {\n        result.push(data.slice(i * lng, (i + 1) * lng));\n    }\n    return result;\n}\n","/**\n * 数组分块\n * 将数组分成每块为size大小\n * @param arr 数组\n * @param size 大小\n */\nexport function chunkArrayItem(arr, size) {\n    const result = [];\n    for (let i = 0; i < arr.length; i += size) {\n        result.push(arr.slice(i, i + size));\n    }\n    return result;\n}\n","/**\n * 抛出错误\n * @param msg 错误信息\n */\nexport function error(msg) {\n    throw new Error(msg);\n}\n/**\n * 判断是否为字符串\n * @param str 字符串\n */\nexport function isString(str) {\n    if (typeof str !== \"string\") {\n        error(\"参数类型错误，必须为字符串\");\n    }\n}\n","import { isString } from './public';\n/**\n * 获取第一个字符\n * @param str 字符串\n * @returns 第一个字符\n */\nexport function getFirstChar(str) {\n    isString(str);\n    return str.charAt(0);\n}\n","import { getFirstChar } from './getFirstChar';\nimport { error } from './public';\n/**\n * 转字符串\n * @param obj 数据\n * @returns 字符串\n */\nexport function toString(obj) {\n    if (!obj)\n        error(\"该变量没有值\");\n    const chars = JSON.stringify(obj);\n    if (getFirstChar(chars) === \"\\\\\") {\n        return chars.replace(/\\\\/g, \"\");\n    }\n    return chars;\n}\n","import { error } from \"./public\";\nimport { getFirstChar } from \"./getFirstChar\";\nimport { toString } from \"./toString\";\n/**\n * 转数组\n * @param obj 数据\n * @param index 分隔符\n * @returns 数组\n */\nexport function toArray(obj, index = \"\") {\n    if (!obj)\n        error(\"该变量没有值\");\n    if (Array.isArray(obj))\n        return [...obj];\n    const chars = typeof obj === \"string\" ? obj : toString(obj);\n    const firstChar = getFirstChar(chars);\n    try {\n        if (firstChar === \"{\" || firstChar === \"[\")\n            return JSON.parse(chars);\n        if (chars.includes(\",\"))\n            return chars.split(\",\");\n        if (chars.includes(\" \"))\n            return chars.split(\" \");\n        return chars.split(index);\n    }\n    catch (e) {\n        return chars;\n    }\n}\n","import { error } from \"./public\";\nimport { toArray } from \"./toArray\";\n/**\n * 修改对象中的下标\n * index和newIndex必须是字符串，多个下标用逗号分隔\n * @param {*} data\n * @param {*} index\n * @param {*} newIndex\n * @returns {object}\n */\nexport function dataChangeIndex(data, index, newIndex) {\n    if (typeof data !== \"object\" || data === null)\n        return data;\n    const indexArr = toArray(index, \",\");\n    const newIndexArr = toArray(newIndex, \",\");\n    if (indexArr.length !== newIndexArr.length) {\n        error(\"下表必须和新下标长度一致\");\n    }\n    indexArr.forEach((_item, i) => hfn(data, indexArr[i], newIndexArr[i]));\n    function hfn(data, index, newIndex) {\n        if (typeof data !== \"object\" || data === null)\n            return;\n        Object.keys(data).forEach((key) => {\n            if (key === index)\n                data[newIndex] = data[key];\n            if (typeof data[key] === \"object\")\n                hfn(data[key], index, newIndex);\n        });\n        if (data.hasOwnProperty(index))\n            delete data[index];\n    }\n    return data;\n}\n","/**\n * 判断对象中是否有空值\n * @param {*} obj\n * @param {boolean} returnKeys 是否返回空值的索引\n * @param {string} parentKey 父级key\n * @returns\n */\nexport function dataEmpty(obj, returnKeys = false, parentKey = \"\") {\n    const emptyKeys = [];\n    function checkEmpty(value) {\n        return (value === \"\" ||\n            value === null ||\n            value === undefined ||\n            (typeof value === \"object\" &&\n                value !== null &&\n                (Array.isArray(value)\n                    ? value.length === 0\n                    : Object.keys(value).length === 0)));\n    }\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const fullKey = parentKey ? `${parentKey}.${key}` : key;\n            const value = obj[key];\n            if (typeof value === \"object\" && value !== null && !checkEmpty(value)) {\n                const nestedResult = dataEmpty(value, true, fullKey);\n                if (Array.isArray(nestedResult)) {\n                    emptyKeys.push(...nestedResult);\n                }\n            }\n            else if (checkEmpty(value)) {\n                emptyKeys.push(fullKey);\n            }\n        }\n    }\n    if (returnKeys) {\n        return emptyKeys;\n    }\n    return emptyKeys.length > 0;\n}\n","/**\n * 数据对比\n * @param obj1 对象1\n * @param obj2 对象2\n * @param options 配置\n * @param {Boolean} options.returnKeys 是否返回不一致的key\n * @param {Boolean} options.arrayDiff  是否返回数组差异\n * @returns boolean | Array<string>\n */\nexport function dataEqual(obj1, obj2, options = {}) {\n    const defaultOptions = { returnKeys: false, arrayDiff: true };\n    const { returnKeys } = Object.assign(defaultOptions, options);\n    const differingKeys = [];\n    function isObject(value) {\n        return value && typeof value === \"object\" && !Array.isArray(value);\n    }\n    const deepCompare = (value1, value2, key) => {\n        if (isObject(value1) && isObject(value2)) {\n            const data = dataEqual(value1, value2, options);\n            if (Array.isArray(data)) {\n                data.forEach((k) => differingKeys.push(`${key}.${k}`));\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            // 深对比\n            value1.forEach((v, i) => {\n                if (typeof v == \"object\" && typeof value2[i] == \"object\") {\n                    const data = dataEqual(v, value2[i], options);\n                    if (Array.isArray(data)) {\n                        data.forEach((k) => differingKeys.push(`${key}.${i}.${k}`));\n                    }\n                }\n                else if (v !== value2[i]) {\n                    differingKeys.push(`${key}.${i}`);\n                }\n            });\n        }\n        else if (value1 !== value2) {\n            differingKeys.push(key);\n        }\n    };\n    for (let key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            deepCompare(obj1[key], obj2[key], key);\n        }\n    }\n    return returnKeys ? differingKeys : differingKeys.length > 0;\n}\n","/**\n * 根据某个字段找对应的数组或对象，如果有两个相同的数据会优先返回第一个\n * @param {*} data\n * @param {*} key\n * @param {*} value\n */\nexport function dataFind(data, key, value) {\n    const find = (data) => {\n        for (const itemkey in data) {\n            if (itemkey === key && data[itemkey] === value) {\n                return data;\n            }\n            else if (Array.isArray(data[itemkey]) ||\n                typeof data[itemkey] === \"object\") {\n                const result = find(data[itemkey]);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return { message: \"Not Found\" };\n    };\n    return find(data);\n}\n","/**\n * 合并数据，取交集/并集/差集/补集\n * @param {*} data1\n * @param {*} data2\n * @param {*} type 1：并集，2：交集，3：差集，4：补集\n * 并集：合并去重\n * 交集：两个数组都有的值\n * 差集：data1中有，data2中没有的值\n * 补集：两个数组中各自没有的值\n */\nexport function dataMerge(data1, data2, type = 1) {\n    if (type === 1) {\n        return [...new Set([...data1, ...data2])];\n    }\n    if (type === 2) {\n        return data1.filter((v) => data2.includes(v));\n    }\n    if (type === 3) {\n        return data1.filter((v) => !data2.includes(v));\n    }\n    if (type === 4) {\n        return [\n            ...data1.filter((v) => !data2.includes(v)),\n            ...data2.filter((v) => !data1.includes(v)),\n        ];\n    }\n    return [];\n}\n","/**\n * 防抖\n * @param callback 回调函数\n * @param wait 等待时间\n */\nexport const debounce = (function () {\n    let timer = null;\n    return (callback, wait = 800) => {\n        timer && clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n})();\n","import { error } from \"./public\";\n/**\n * 深克隆\n * @param {*} obj\n * @returns\n */\nexport function deepClone(obj) {\n    if (obj === null || obj === undefined)\n        return obj;\n    if (typeof obj !== \"object\")\n        return obj;\n    if (obj instanceof Date)\n        return new Date(obj.getTime());\n    if (Array.isArray(obj)) {\n        const arrCopy = [];\n        obj.forEach((item, index) => {\n            arrCopy[index] = deepClone(item);\n        });\n        return arrCopy;\n    }\n    if (obj instanceof Object) {\n        const objCopy = {};\n        Object.keys(obj).forEach((key) => {\n            objCopy[key] = deepClone(obj[key]);\n        });\n        return objCopy;\n    }\n    error(\"Unsupported data type\");\n}\n","export function replaceAll(str, target, replacement) {\n    return str.replace(new RegExp(target, \"g\"), replacement);\n}\n","/**\n * 判断是否包含某字符\n * @param str 字符串\n * @param char 字符\n * @returns 是否包含\n */\nexport function regIsHas(str, char) {\n    return new RegExp(char).test(str);\n}\n","import { replaceAll } from \"./replaceAll\";\nimport { regIsHas } from \"./regIsHas\";\n/**\n * 获取日期信息\n * @param date\n * @returns {year,month,day,hour,minute,second}\n */\nexport function getDateInfo(str) {\n    let strs = str;\n    // 兼容ios\n    if (typeof str === \"string\" && regIsHas(str, \"-\")) {\n        strs = replaceAll(str, \"-\", \"/\");\n    }\n    const date = strs ? new Date(strs) : new Date();\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const hour = date.getHours().toString().padStart(2, \"0\");\n    const minute = date.getMinutes().toString().padStart(2, \"0\");\n    const second = date.getSeconds().toString().padStart(2, \"0\");\n    return { year, month, day, hour, minute, second };\n}\n","import { getDateInfo } from \"./getDateInfo\";\n/**\n * 获取日期类型\n * @param date\n * @param type\n * @returns\n */\nexport function getDateType(date, type = \"Y/M/D h:m:s\") {\n    if (typeof date == \"object\") {\n        var { year, month, day, hour, minute, second } = date;\n    }\n    else {\n        var { year, month, day, hour, minute, second } = getDateInfo(date);\n    }\n    return type\n        .replace(\"Y\", year)\n        .replace(\"M\", month)\n        .replace(\"D\", day)\n        .replace(\"h\", hour)\n        .replace(\"m\", minute)\n        .replace(\"s\", second);\n}\n","import { getDateInfo } from \"./getDateInfo\";\nimport { getDateType } from \"./getDateType\";\n/**\n * 获取日期\n * 如果只有一个参数，str会被当为type传递\n * @param str\n * @param type\n * @returns\n */\nexport function getDate(str = \"\", type = \"Y/M/D h:m:s\") {\n    if (arguments.length === 0) {\n        return getDateType(getDateInfo(new Date()), \"Y/M/D h:m:s\");\n    }\n    if (arguments.length === 1) {\n        return getDateType(getDateInfo(new Date()), str);\n    }\n    return getDateType(getDateInfo(str), type);\n}\n","/**\n * 获取时间戳\n * @param {*} date\n * @param {*} mill 是否返回毫秒级时间戳\n * @returns\n */\nexport function getTimeStamp(date = new Date(), mill = true) {\n    return mill\n        ? new Date(date).getTime()\n        : Math.floor(new Date(date).getTime() / 1000);\n}\n","import { getDate } from \"./getDate\";\nimport { getTimeStamp } from \"./getTimeStamp\";\n/**\n * 获取两个日期之间的日期\n * @param {*} date\n * @param {*} date1\n * @param {*} days\n * @returns {Array}\n */\nexport function getBetweenDate(date, date1, days = false) {\n    const oneDay = 24 * 60 * 60 * 1000;\n    const dateTime = getTimeStamp(date);\n    const dateTime1 = getTimeStamp(date1);\n    if (days) {\n        return Math.abs(dateTime - dateTime1) / oneDay;\n    }\n    return Array.from({ length: Math.abs(dateTime - dateTime1) / oneDay }).map((_, i) => {\n        const time = dateTime > dateTime1 ? dateTime1 - i * oneDay : dateTime + i * oneDay;\n        return getDate(new Date(time), \"Y-M-D\");\n    });\n}\n","import { isString } from './public';\n/**\n * 获取字符\n * @param str 字符串\n * @param start 开始位置\n * @param end 结束位置\n * @returns 字符\n */\nexport function getChar(str, start, end) {\n    isString(str);\n    const char = str.substring(start, end);\n    return char ? char : \"\";\n}\n","import { isString } from './public';\n/**\n * 获取最后一个字符\n * @param str 字符串\n * @returns 最后一个字符\n */\nexport function getLastChar(str) {\n    isString(str);\n    return str.substring(str.length - 1, str.length);\n}\n","/**\n * 获取月份天数\n * @param {*} date\n * @returns\n */\nexport function getMonthDays(year = new Date().getFullYear(), month = new Date().getMonth() + 1) {\n    return new Date(year, month, 0).getDate();\n}\n","/**\n * 计算百分比\n * @param {*} part\n * @param {*} total\n * @param {*} decimalPlaces\n * @returns\n */\nexport function getPercentage(part, total, decimalPlaces = 2) {\n    return ((part / total) * 100).toFixed(decimalPlaces);\n}\n","import { error } from \"./public\";\n/**\n * 获取随机数\n * @param min 最小值\n * @param max 最大值\n */\nexport function getRandom(min, max) {\n    if (typeof min !== \"number\" || typeof max !== \"number\") {\n        error(\"参数类型错误，必须为数字\");\n    }\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import { getRandom } from './getRandom';\n/**\n * 获取随机数组\n * @param length 长度\n * @param min 最小值\n * @param max 最大值\n */\nexport function getRandomArray(length, min, max) {\n    const arr = [];\n    for (let i = 0; i < length; i++) {\n        arr.push(getRandom(min, max));\n    }\n    return arr;\n}\n","/**\n * 获取随机颜色\n */\nexport function getRandomColor() {\n    return `#${Math.floor(Math.random() * 0xffffff).toString(16)}`;\n}\n","import { getRandom } from \"./getRandom\";\n/**\n * 获取随机rgba颜色\n */\nexport function getRandomRGBA() {\n    return `rgba(${getRandom(0, 255)},${getRandom(0, 255)},${getRandom(0, 255)},${getRandom(0, 100) / 100})`;\n}\n","import { getRandom } from './getRandom';\n/**\n * 获取随机rgb颜色\n */\nexport function getRandomRGBColor() {\n    return `rgb(${getRandom(0, 255)},${getRandom(0, 255)},${getRandom(0, 255)})`;\n}\n","import { getDateType } from \"./getDateType\";\nimport { getDateInfo } from \"./getDateInfo\";\nimport { getBetweenDate } from \"./getBetweenDate\";\n/**\n * 获取某日期的近期天数\n * @param {*} date 日期\n * @param {*} type （三天，周，月，年）\n * @param {*} hasNow 生成的日期是否包含今日\n * @param {*} step 生成距离date的step天\n * @returns\n * step优先级大于type\n */\nexport function getRecentDate(date = new Date(), type = 1, hasNow = true, step = 0) {\n    if (!date)\n        return [];\n    const format = \"Y-M-D\";\n    const oneDay = 24 * 60 * 60 * 1000;\n    let now = new Date(date).getTime();\n    if (!hasNow) {\n        now -= oneDay;\n    }\n    // helper function\n    function getPrevMonth(date) {\n        const month = date.getMonth();\n        return {\n            year: month === 0 ? date.getFullYear() - 1 : date.getFullYear(),\n            month: month === 0 ? 12 : month,\n        };\n    }\n    const generateDateList = (count) => Array.from({ length: count }, (_, i) => {\n        const time = now - (count - i - 1) * oneDay;\n        return getDateType(getDateInfo(new Date(time)), format);\n    });\n    // start\n    const { year, month, day } = getDateInfo(date);\n    if (type && !step) {\n        switch (type) {\n            case 1: {\n                return generateDateList(3);\n            }\n            case 2: {\n                return generateDateList(7);\n            }\n            case 3: {\n                const { year: prevYear, month: prevMonth } = getPrevMonth(new Date(now));\n                return getBetweenDate(`${prevYear}-${prevMonth}-${day}`, now);\n            }\n            case 4: {\n                return getBetweenDate(`${year - 1}/${month}/${day}`, `${year}/${month}/${day}`);\n            }\n        }\n    }\n    else if (step) {\n        return generateDateList(step);\n    }\n    return [];\n}\n","/**\n * 获取对应索引的value\n * @param obj 对象\n * @param index 索引\n * @param parentKey 父级key\n * @returns\n */\nexport function getSameIndexValue(obj, index, parentKey = \"\") {\n    const arr = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const fullKey = parentKey ? `${parentKey}.${key}` : key;\n            const value = obj[key];\n            if (typeof value === \"object\") {\n                arr.push(...getSameIndexValue(value, index, fullKey));\n            }\n            else if (key == index) {\n                arr.push({\n                    key: fullKey,\n                    value,\n                });\n            }\n        }\n    }\n    return arr;\n}\n","/**\n * 获取时间段\n * @param {*} start 开始时间\n * @param {*} end 结束时间\n * @param {*} step 步长\n * @param {*} type hh:mm:ss hh:mm\n * @returns\n */\nexport function getTimeStep(start, end, step = \"01:00\", type = \"hh:mm\") {\n    const toSeconds = (time) => time\n        .split(\":\")\n        .map(Number)\n        .reduce((a, v, i) => a + v * [3600, 60, 1][i], 0);\n    const format = (time) => [Math.floor(time / 3600), Math.floor((time % 3600) / 60), time % 60]\n        .map((v) => String(v).padStart(2, \"0\"))\n        .join(\":\");\n    const startTime = toSeconds(start);\n    const endTime = toSeconds(end);\n    const stepTime = toSeconds(step);\n    const result = [];\n    for (let time = startTime; time <= endTime; time += stepTime) {\n        result.push(type === \"hh:mm:ss\" ? format(time) : format(time).slice(0, 5));\n    }\n    return result;\n}\n","/**\n * 获取类型\n * @param data\n * @returns 类型\n */\nexport function getType(data) {\n    return Object.prototype.toString.call(data).slice(8, -1).toLowerCase();\n}\n","/**\n * 获取url参数\n * @param url url\n * @returns 参数\n */\nexport function getUrlParam(url = \"\") {\n    if (!url) {\n        url = window.location.href;\n    }\n    return (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce((a, v) => ((a[v.slice(0, v.indexOf(\"=\"))] = v.slice(v.indexOf(\"=\") + 1)), a), {});\n}\n","import { regIsHas } from \"./regIsHas\";\n/**\n * 获取索引值\n * 仅适用于 对象嵌套\n * 'xxx.xxx.xxx' 形式\n * [xxx,xxx,xxx] 形式\n * @param obj\n * @param path\n * @returns\n */\nexport function getValue(obj, path) {\n    if (typeof path === \"string\" && regIsHas(path, \".\")) {\n        path = path.split(\".\");\n    }\n    if (!Array.isArray(path) || !path) {\n        return \"\";\n    }\n    return path.reduce((acc, key) => acc && acc[key], obj);\n}\n","/**\n * 获取日期是星期几\n * @param {*} date\n * @returns\n */\nexport function getWeekDay(date = new Date()) {\n    const weekDays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n    return weekDays[new Date(date).getDay()];\n}\n","/**\n * date不为空时获取date的周日期\n * @param {*} date\n * @returns\n */\nexport function getWeekTime(date = new Date()) {\n    const now = new Date(date);\n    const dayOfWeek = now.getDay();\n    const startOfWeek = new Date(now);\n    startOfWeek.setDate(now.getDate() - dayOfWeek + 1);\n    return Array.from({ length: 7 }, (_, i) => {\n        const date = new Date(startOfWeek);\n        date.setDate(startOfWeek.getDate() + i);\n        return date.toLocaleDateString();\n    });\n}\n","/**\n * 获取某年中有几周\n * @param {*} year\n * @returns\n */\nexport function getYearWeeks(year = new Date().getFullYear()) {\n    let first = new Date(year, 0, 1).getDay();\n    if (first == 1) {\n        first = 0;\n    }\n    else if (first == 0) {\n        first = 1;\n    }\n    else {\n        first = 8 - first;\n    }\n    if ((year % 4 == 0 && year % 100 != 0) ||\n        (year % 100 == 0 && year % 400 == 0)) {\n        var allyears = 366;\n    }\n    else {\n        var allyears = 365;\n    }\n    let week = Math.ceil((allyears - first) / 7) + (first !== 0 ? 1 : 0);\n    return week;\n}\n","/**\n * 数据分组\n * @param {*} data\n * @param {*} key\n */\nexport function groupBy(data, key) {\n    return data.reduce((acc, item) => {\n        (acc[item[key]] = acc[item[key]] || []).push(item);\n        return acc;\n    }, {});\n}\n","/**\n * 金额格式化\n * @param money 金额\n * @param char 分隔符\n * @param first 首字符\n */\nexport function moneyFormat(money, char = \",\", first = \"\") {\n    let str = money.toString();\n    let index = str.indexOf(\".\");\n    if (index === -1) {\n        index = str.length;\n    }\n    while (index > 3) {\n        index -= 3;\n        str = str.slice(0, index) + char + str.slice(index);\n    }\n    return first ? first + str : str;\n}\n","/**\n * 参数格式化\n * @param obj 参数\n * @param type 类型\n * @returns 格式化后的参数\n */\nexport function paramformat(obj, type = \"url\") {\n    if (type === \"url\") {\n        return Object.keys(obj)\n            .map((key) => `${key}=${obj[key]}`)\n            .join(\"&\");\n    }\n    if (type === \"json\") {\n        return JSON.stringify(obj);\n    }\n    if (type === \"formData\") {\n        const formData = new FormData();\n        for (const key in obj) {\n            formData.append(key, obj[key]);\n        }\n        return formData;\n    }\n}\n","/**\n * 判断是否为邮箱\n * @param str 字符串\n * @returns 是否为邮箱\n */\nexport function regEmail(str) {\n    return /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/.test(str);\n}\n","/**\n * 判断是否为身份证\n * @param str 字符串\n * @returns 是否为身份证\n */\nexport function regIdcard(str) {\n    if (!/^\\d{17}(\\d|X)$/i.test(str))\n        return false;\n    const provinceCodes = {\n        11: \"北京\",\n        12: \"天津\",\n        13: \"河北\",\n        14: \"山西\",\n        15: \"内蒙古\",\n        21: \"辽宁\",\n        22: \"吉林\",\n        23: \"黑龙江\",\n        31: \"上海\",\n        32: \"江苏\",\n        33: \"浙江\",\n        34: \"安徽\",\n        35: \"福建\",\n        36: \"江西\",\n        37: \"山东\",\n        41: \"河南\",\n        42: \"湖北\",\n        43: \"湖南\",\n        44: \"广东\",\n        45: \"广西\",\n        46: \"海南\",\n        50: \"重庆\",\n        51: \"四川\",\n        52: \"贵州\",\n        53: \"云南\",\n        54: \"西藏\",\n        61: \"陕西\",\n        62: \"甘肃\",\n        63: \"青海\",\n        64: \"宁夏\",\n        65: \"新疆\",\n        71: \"台湾\",\n        81: \"香港\",\n        82: \"澳门\",\n        91: \"国外\",\n    };\n    if (!provinceCodes[str.substring(0, 2)])\n        return false;\n    const birthday = str.substring(6, 14);\n    const year = birthday.substring(0, 4);\n    const month = birthday.substring(4, 6);\n    const day = birthday.substring(6, 14);\n    const birthDate = new Date(year + \"/\" + month + \"/\" + day);\n    if (birthDate.getFullYear() !== parseInt(year) ||\n        birthDate.getMonth() + 1 !== parseInt(month) ||\n        birthDate.getDate() !== parseInt(day)) {\n        return false;\n    }\n    const weights = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n    const checkCodes = [\"1\", \"0\", \"X\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"];\n    let sum = 0;\n    for (let i = 0; i < 17; i++) {\n        sum += Number(str[i]) * weights[i];\n    }\n    const calculatedCheckCode = checkCodes[sum % 11];\n    if (str[17].toUpperCase() !== calculatedCheckCode) {\n        return false;\n    }\n    return true;\n}\n","/**\n * 判断是否为手机号\n * @param str 字符串\n * @returns 是否为手机号\n */\nexport function regPhone(str) {\n    return /^1[3456789]\\d{9}$/.test(str);\n}\n","/**\n * 随机打乱数组\n * @param array 数组\n */\nexport function shuffleArray(array) {\n    if (!Array.isArray(array))\n        return array;\n    let arr = array.slice();\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n","/**\n * 延迟函数\n */\nexport function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/**\n * 字符串替换\n * @param str 字符串\n * @param start 开始位置\n * @param end 结束位置\n * @param icon 替换字符\n * @returns 替换后的字符串\n */\nexport function strReplace(str, start, end, icon = '*') {\n    let len = str.length;\n    let s = str.substring(0, start);\n    let e = str.substring(end, len);\n    let star = '';\n    for (let i = 0; i < end - start; i++) {\n        star += icon;\n    }\n    return s + star + e;\n}\n","/**\n * 节流\n * @param callback 回调函数\n * @param wait 等待时间\n */\nexport const throttle = (function () {\n    let last = 0;\n    return (callback, wait = 800) => {\n        let now = +new Date();\n        if (now - last > wait) {\n            callback();\n            last = now;\n        }\n    };\n})();\n","/**\n * 转树形结构\n * @param {*} data\n * @param {*} pid   父级id\n */\nexport function toTree(data, pid) {\n    let tree = [];\n    let lookup = {};\n    data.forEach((item) => {\n        lookup[item.id] = Object.assign(Object.assign({}, item), { children: [] });\n    });\n    data.forEach((item) => {\n        if (item[pid] === null) {\n            tree.push(lookup[item.id]);\n        }\n        else {\n            lookup[item[pid]].children.push(lookup[item.id]);\n        }\n    });\n    return tree;\n}\n","/**\n * 数组去重\n * @param data 数组\n */\nexport function uniqueArray(data) {\n    return [...new Set(data)];\n}\n","/**\n * 获取本月有几周\n * @returns\n */\nexport function weekInMonthCount() {\n    //设置时间为本月的1号\n    let date = new Date(new Date().setDate(1) || new Date().setDate(1));\n    let firstWeekDate;\n    if (date.getDay() === 0) {\n        firstWeekDate = 6;\n    }\n    else {\n        firstWeekDate = date.getDay() - 1;\n    }\n    date.setMonth(date.getMonth() + 1);\n    date.setDate(0);\n    let monthHasDays = date.getDate() + firstWeekDate;\n    return Math.ceil(monthHasDays / 7);\n}\n","/**\n * ZZTOOL工具类\n */\n\"use strict\";\nconst version = \"2.0.0\";\nconsole.log(\"%czztool%c\" + `V${version}`, \"background: #000000; color: #FFD700; border-radius: 3px 0 0 3px;padding:2px 5px\", \"background: #FFD700; color: #000000; border-radius: 0 3px 3px 0;padding:2px 5px\");\nexport { arrayTrim } from \"./utils/arrayTrim\";\nexport { chunkArray } from \"./utils/chunkArray\";\nexport { chunkArrayItem } from \"./utils/chunkArrayItem\";\nexport { dataChangeIndex } from \"./utils/dataChangeIndex\";\nexport { dataEmpty } from \"./utils/dataEmpty\";\nexport { dataEqual } from \"./utils/dataEqual\";\nexport { dataFind } from \"./utils/dataFind\";\nexport { dataMerge } from \"./utils/dataMerge\";\nexport { debounce } from \"./utils/debounce\";\nexport { deepClone } from \"./utils/deepClone\";\nexport { getBetweenDate } from \"./utils/getBetweenDate\";\nexport { getChar } from \"./utils/getChar\";\nexport { getDate } from \"./utils/getDate\";\nexport { getDateInfo } from \"./utils/getDateInfo\";\nexport { getDateType } from \"./utils/getDateType\";\nexport { getFirstChar } from \"./utils/getFirstChar\";\nexport { getLastChar } from \"./utils/getLastChar\";\nexport { getMonthDays } from \"./utils/getMonthDays\";\nexport { getPercentage } from \"./utils/getPercentage\";\nexport { getRandom } from \"./utils/getRandom\";\nexport { getRandomArray } from \"./utils/getRandomArray\";\nexport { getRandomColor } from \"./utils/getRandomColor\";\nexport { getRandomRGBA } from \"./utils/getRandomRGBA\";\nexport { getRandomRGBColor } from \"./utils/getRandomRGBColor\";\nexport { getRecentDate } from \"./utils/getRecentDate\";\nexport { getSameIndexValue } from \"./utils/getSameIndexValue\";\nexport { getTimeStamp } from \"./utils/getTimeStamp\";\nexport { getTimeStep } from \"./utils/getTimeStep\";\nexport { getType } from \"./utils/getType\";\nexport { getUrlParam } from \"./utils/getUrlParam\";\nexport { getValue } from \"./utils/getValue\";\nexport { getWeekDay } from \"./utils/getWeekDay\";\nexport { getWeekTime } from \"./utils/getWeekTime\";\nexport { getYearWeeks } from \"./utils/getYearWeeks\";\nexport { groupBy } from \"./utils/groupBy\";\nexport { moneyFormat } from \"./utils/moneyFormat\";\nexport { paramformat } from \"./utils/paramformat\";\nexport { regEmail } from \"./utils/regEmail\";\nexport { regIdcard } from \"./utils/regIdcard\";\nexport { regIsHas } from \"./utils/regIsHas\";\nexport { regPhone } from \"./utils/regPhone\";\nexport { replaceAll } from \"./utils/replaceAll\";\nexport { shuffleArray } from \"./utils/shuffleArray\";\nexport { sleep } from \"./utils/sleep\";\nexport { strReplace } from \"./utils/strReplace\";\nexport { throttle } from \"./utils/throttle\";\nexport { toArray } from \"./utils/toArray\";\nexport { toString } from \"./utils/toString\";\nexport { toTree } from \"./utils/toTree\";\nexport { uniqueArray } from \"./utils/uniqueArray\";\nexport { weekInMonthCount } from \"./utils/weekInMonthCount\";\n"],"names":["arrayTrim","data","item","chunkArray","size","result","lng","i","chunkArrayItem","arr","error","msg","isString","str","getFirstChar","toString","obj","chars","toArray","index","firstChar","dataChangeIndex","newIndex","indexArr","newIndexArr","_item","hfn","key","dataEmpty","returnKeys","parentKey","emptyKeys","checkEmpty","value","fullKey","nestedResult","dataEqual","obj1","obj2","options","defaultOptions","differingKeys","isObject","deepCompare","value1","value2","k","v","dataFind","find","itemkey","dataMerge","data1","data2","type","debounce","timer","callback","wait","deepClone","arrCopy","objCopy","replaceAll","target","replacement","regIsHas","char","getDateInfo","strs","date","year","month","day","hour","minute","second","getDateType","getDate","getTimeStamp","mill","getBetweenDate","date1","days","dateTime","dateTime1","_","time","getChar","start","end","getLastChar","getMonthDays","getPercentage","part","total","decimalPlaces","getRandom","min","max","getRandomArray","length","getRandomColor","getRandomRGBA","getRandomRGBColor","getRecentDate","hasNow","step","format","oneDay","now","getPrevMonth","generateDateList","count","prevYear","prevMonth","getSameIndexValue","getTimeStep","toSeconds","a","startTime","endTime","stepTime","getType","getUrlParam","url","getValue","path","acc","getWeekDay","getWeekTime","dayOfWeek","startOfWeek","getYearWeeks","first","allyears","groupBy","moneyFormat","money","paramformat","formData","regEmail","regIdcard","birthday","birthDate","weights","checkCodes","sum","calculatedCheckCode","regPhone","shuffleArray","array","j","sleep","ms","resolve","strReplace","icon","len","s","e","star","throttle","last","toTree","pid","tree","lookup","uniqueArray","weekInMonthCount","firstWeekDate","monthHasDays","version"],"mappings":"AAIO,SAASA,EAAUC,EAAM,CAC5B,OAAOA,EAAK,OAAQC,GAASA,CAAI,CACrC,CCAO,SAASC,EAAWF,EAAMG,EAAM,CACnC,GAAIA,GAAQ,EACR,MAAO,CAACH,CAAI,EAEhB,MAAMI,EAAS,CAAE,EACXC,EAAM,KAAK,KAAKL,EAAK,OAASG,CAAI,EACxC,QAASG,EAAI,EAAGA,EAAIH,EAAMG,IACtBF,EAAO,KAAKJ,EAAK,MAAMM,EAAID,GAAMC,EAAI,GAAKD,CAAG,CAAC,EAElD,OAAOD,CACX,CCVO,SAASG,EAAeC,EAAKL,EAAM,CACtC,MAAMC,EAAS,CAAE,EACjB,QAASE,EAAI,EAAGA,EAAIE,EAAI,OAAQF,GAAKH,EACjCC,EAAO,KAAKI,EAAI,MAAMF,EAAGA,EAAIH,CAAI,CAAC,EAEtC,OAAOC,CACX,CCRO,SAASK,EAAMC,EAAK,CACvB,MAAM,IAAI,MAAMA,CAAG,CACvB,CAKO,SAASC,EAASC,EAAK,CACtB,OAAOA,GAAQ,UACfH,EAAM,eAAe,CAE7B,CCTO,SAASI,EAAaD,EAAK,CAC9B,OAAAD,EAASC,CAAG,EACLA,EAAI,OAAO,CAAC,CACvB,CCFO,SAASE,EAASC,EAAK,CACrBA,GACDN,EAAM,QAAQ,EAClB,MAAMO,EAAQ,KAAK,UAAUD,CAAG,EAChC,OAAIF,EAAaG,CAAK,IAAM,KACjBA,EAAM,QAAQ,MAAO,EAAE,EAE3BA,CACX,CCNO,SAASC,EAAQF,EAAKG,EAAQ,GAAI,CAGrC,GAFKH,GACDN,EAAM,QAAQ,EACd,MAAM,QAAQM,CAAG,EACjB,MAAO,CAAC,GAAGA,CAAG,EAClB,MAAMC,EAAQ,OAAOD,GAAQ,SAAWA,EAAMD,EAASC,CAAG,EACpDI,EAAYN,EAAaG,CAAK,EACpC,GAAI,CACA,OAAIG,IAAc,KAAOA,IAAc,IAC5B,KAAK,MAAMH,CAAK,EACvBA,EAAM,SAAS,GAAG,EACXA,EAAM,MAAM,GAAG,EACtBA,EAAM,SAAS,GAAG,EACXA,EAAM,MAAM,GAAG,EACnBA,EAAM,MAAME,CAAK,CAChC,MACc,CACN,OAAOF,CACf,CACA,CClBO,SAASI,EAAgBpB,EAAMkB,EAAOG,EAAU,CACnD,GAAI,OAAOrB,GAAS,UAAYA,IAAS,KACrC,OAAOA,EACX,MAAMsB,EAAWL,EAAQC,EAAO,GAAG,EAC7BK,EAAcN,EAAQI,EAAU,GAAG,EACrCC,EAAS,SAAWC,EAAY,QAChCd,EAAM,cAAc,EAExBa,EAAS,QAAQ,CAACE,EAAOlB,IAAMmB,EAAIzB,EAAMsB,EAAShB,CAAC,EAAGiB,EAAYjB,CAAC,CAAC,CAAC,EACrE,SAASmB,EAAIzB,EAAMkB,EAAOG,EAAU,CAC5B,OAAOrB,GAAS,UAAYA,IAAS,OAEzC,OAAO,KAAKA,CAAI,EAAE,QAAS0B,GAAQ,CAC3BA,IAAQR,IACRlB,EAAKqB,CAAQ,EAAIrB,EAAK0B,CAAG,GACzB,OAAO1B,EAAK0B,CAAG,GAAM,UACrBD,EAAIzB,EAAK0B,CAAG,EAAGR,EAAOG,CAAQ,CAC9C,CAAS,EACGrB,EAAK,eAAekB,CAAK,GACzB,OAAOlB,EAAKkB,CAAK,EAC7B,CACI,OAAOlB,CACX,CCzBO,SAAS2B,EAAUZ,EAAKa,EAAa,GAAOC,EAAY,GAAI,CAC/D,MAAMC,EAAY,CAAE,EACpB,SAASC,EAAWC,EAAO,CACvB,OAAQA,IAAU,IACdA,IAAU,MACVA,IAAU,QACT,OAAOA,GAAU,UACdA,IAAU,OACT,MAAM,QAAQA,CAAK,EACdA,EAAM,SAAW,EACjB,OAAO,KAAKA,CAAK,EAAE,SAAW,EACpD,CACI,QAASN,KAAOX,EACZ,GAAIA,EAAI,eAAeW,CAAG,EAAG,CACzB,MAAMO,EAAUJ,EAAY,GAAGA,CAAS,IAAIH,CAAG,GAAKA,EAC9CM,EAAQjB,EAAIW,CAAG,EACrB,GAAI,OAAOM,GAAU,UAAYA,IAAU,MAAQ,CAACD,EAAWC,CAAK,EAAG,CACnE,MAAME,EAAeP,EAAUK,EAAO,GAAMC,CAAO,EAC/C,MAAM,QAAQC,CAAY,GAC1BJ,EAAU,KAAK,GAAGI,CAAY,CAElD,MACqBH,EAAWC,CAAK,GACrBF,EAAU,KAAKG,CAAO,CAEtC,CAEI,OAAIL,EACOE,EAEJA,EAAU,OAAS,CAC9B,CC7BO,SAASK,EAAUC,EAAMC,EAAMC,EAAU,CAAA,EAAI,CAChD,MAAMC,EAAiB,CAAE,WAAY,GAAO,UAAW,EAAM,EACvD,CAAE,WAAAX,CAAU,EAAK,OAAO,OAAOW,EAAgBD,CAAO,EACtDE,EAAgB,CAAE,EACxB,SAASC,EAAST,EAAO,CACrB,OAAOA,GAAS,OAAOA,GAAU,UAAY,CAAC,MAAM,QAAQA,CAAK,CACzE,CACI,MAAMU,EAAc,CAACC,EAAQC,EAAQlB,IAAQ,CACzC,GAAIe,EAASE,CAAM,GAAKF,EAASG,CAAM,EAAG,CACtC,MAAM5C,EAAOmC,EAAUQ,EAAQC,EAAQN,CAAO,EAC1C,MAAM,QAAQtC,CAAI,GAClBA,EAAK,QAAS6C,GAAML,EAAc,KAAK,GAAGd,CAAG,IAAImB,CAAC,EAAE,CAAC,CAErE,MACiB,MAAM,QAAQF,CAAM,GAAK,MAAM,QAAQC,CAAM,EAElDD,EAAO,QAAQ,CAACG,EAAGxC,IAAM,CACrB,GAAI,OAAOwC,GAAK,UAAY,OAAOF,EAAOtC,CAAC,GAAK,SAAU,CACtD,MAAMN,EAAOmC,EAAUW,EAAGF,EAAOtC,CAAC,EAAGgC,CAAO,EACxC,MAAM,QAAQtC,CAAI,GAClBA,EAAK,QAAS6C,GAAML,EAAc,KAAK,GAAGd,CAAG,IAAIpB,CAAC,IAAIuC,CAAC,EAAE,CAAC,CAElF,MACyBC,IAAMF,EAAOtC,CAAC,GACnBkC,EAAc,KAAK,GAAGd,CAAG,IAAIpB,CAAC,EAAE,CAEpD,CAAa,EAEIqC,IAAWC,GAChBJ,EAAc,KAAKd,CAAG,CAE7B,EACD,QAASA,KAAOU,EACRA,EAAK,eAAeV,CAAG,GACvBgB,EAAYN,EAAKV,CAAG,EAAGW,EAAKX,CAAG,EAAGA,CAAG,EAG7C,OAAOE,EAAaY,EAAgBA,EAAc,OAAS,CAC/D,CCzCO,SAASO,EAAS/C,EAAM0B,EAAKM,EAAO,CACvC,MAAMgB,EAAQhD,GAAS,CACnB,UAAWiD,KAAWjD,EAAM,CACxB,GAAIiD,IAAYvB,GAAO1B,EAAKiD,CAAO,IAAMjB,EACrC,OAAOhC,EAEN,GAAI,MAAM,QAAQA,EAAKiD,CAAO,CAAC,GAChC,OAAOjD,EAAKiD,CAAO,GAAM,SAAU,CACnC,MAAM7C,EAAS4C,EAAKhD,EAAKiD,CAAO,CAAC,EACjC,GAAI7C,EACA,OAAOA,CAE3B,CACA,CACQ,MAAO,CAAE,QAAS,WAAa,CAClC,EACD,OAAO4C,EAAKhD,CAAI,CACpB,CCbO,SAASkD,EAAUC,EAAOC,EAAOC,EAAO,EAAG,CAC9C,OAAIA,IAAS,EACF,CAAC,GAAG,IAAI,IAAI,CAAC,GAAGF,EAAO,GAAGC,CAAK,CAAC,CAAC,EAExCC,IAAS,EACFF,EAAM,OAAQL,GAAMM,EAAM,SAASN,CAAC,CAAC,EAE5CO,IAAS,EACFF,EAAM,OAAQL,GAAM,CAACM,EAAM,SAASN,CAAC,CAAC,EAE7CO,IAAS,EACF,CACH,GAAGF,EAAM,OAAQL,GAAM,CAACM,EAAM,SAASN,CAAC,CAAC,EACzC,GAAGM,EAAM,OAAQN,GAAM,CAACK,EAAM,SAASL,CAAC,CAAC,CAC5C,EAEE,CAAE,CACb,CCtBO,MAAMQ,EAAY,UAAY,CACjC,IAAIC,EAAQ,KACZ,MAAO,CAACC,EAAUC,EAAO,MAAQ,CAC7BF,GAAS,aAAaA,CAAK,EAC3BA,EAAQ,WAAWC,EAAUC,CAAI,CACpC,CACL,EAAI,ECLG,SAASC,EAAU3C,EAAK,CAG3B,GAFIA,GAAQ,MAER,OAAOA,GAAQ,SACf,OAAOA,EACX,GAAIA,aAAe,KACf,OAAO,IAAI,KAAKA,EAAI,SAAS,EACjC,GAAI,MAAM,QAAQA,CAAG,EAAG,CACpB,MAAM4C,EAAU,CAAE,EAClB,OAAA5C,EAAI,QAAQ,CAACd,EAAMiB,IAAU,CACzByC,EAAQzC,CAAK,EAAIwC,EAAUzD,CAAI,CAC3C,CAAS,EACM0D,CACf,CACI,GAAI5C,aAAe,OAAQ,CACvB,MAAM6C,EAAU,CAAE,EAClB,cAAO,KAAK7C,CAAG,EAAE,QAASW,GAAQ,CAC9BkC,EAAQlC,CAAG,EAAIgC,EAAU3C,EAAIW,CAAG,CAAC,CAC7C,CAAS,EACMkC,CACf,CACInD,EAAM,uBAAuB,CACjC,CC5BO,SAASoD,EAAWjD,EAAKkD,EAAQC,EAAa,CACjD,OAAOnD,EAAI,QAAQ,IAAI,OAAOkD,EAAQ,GAAG,EAAGC,CAAW,CAC3D,CCIO,SAASC,EAASpD,EAAKqD,EAAM,CAChC,OAAO,IAAI,OAAOA,CAAI,EAAE,KAAKrD,CAAG,CACpC,CCDO,SAASsD,EAAYtD,EAAK,CAC7B,IAAIuD,EAAOvD,EAEP,OAAOA,GAAQ,UAAYoD,EAASpD,EAAK,GAAG,IAC5CuD,EAAON,EAAWjD,EAAK,IAAK,GAAG,GAEnC,MAAMwD,EAAOD,EAAO,IAAI,KAAKA,CAAI,EAAI,IAAI,KACnCE,EAAOD,EAAK,YAAa,EACzBE,GAASF,EAAK,SAAU,EAAG,GAAG,WAAW,SAAS,EAAG,GAAG,EACxDG,EAAMH,EAAK,QAAS,EAAC,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC/CI,EAAOJ,EAAK,SAAU,EAAC,SAAQ,EAAG,SAAS,EAAG,GAAG,EACjDK,EAASL,EAAK,WAAY,EAAC,SAAQ,EAAG,SAAS,EAAG,GAAG,EACrDM,EAASN,EAAK,WAAY,EAAC,SAAQ,EAAG,SAAS,EAAG,GAAG,EAC3D,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,IAAAC,EAAK,KAAAC,EAAM,OAAAC,EAAQ,OAAAC,CAAQ,CACrD,CCdO,SAASC,EAAYP,EAAMf,EAAO,cAAe,CACpD,GAAI,OAAOe,GAAQ,SACf,GAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,IAAAC,EAAK,KAAAC,EAAM,OAAAC,EAAQ,OAAAC,CAAM,EAAKN,MAGjD,IAAI,CAAE,KAAAC,EAAM,MAAAC,EAAO,IAAAC,EAAK,KAAAC,EAAM,OAAAC,EAAQ,OAAAC,CAAM,EAAKR,EAAYE,CAAI,EAErE,OAAOf,EACF,QAAQ,IAAKgB,CAAI,EACjB,QAAQ,IAAKC,CAAK,EAClB,QAAQ,IAAKC,CAAG,EAChB,QAAQ,IAAKC,CAAI,EACjB,QAAQ,IAAKC,CAAM,EACnB,QAAQ,IAAKC,CAAM,CAC5B,CCZO,SAASE,EAAQhE,EAAM,GAAIyC,EAAO,cAAe,CACpD,OAAI,UAAU,SAAW,EACdsB,EAAYT,EAAY,IAAI,IAAM,EAAG,aAAa,EAEzD,UAAU,SAAW,EACdS,EAAYT,EAAY,IAAI,IAAM,EAAGtD,CAAG,EAE5C+D,EAAYT,EAAYtD,CAAG,EAAGyC,CAAI,CAC7C,CCXO,SAASwB,EAAaT,EAAO,IAAI,KAAQU,EAAO,GAAM,CACzD,OAAOA,EACD,IAAI,KAAKV,CAAI,EAAE,QAAO,EACtB,KAAK,MAAM,IAAI,KAAKA,CAAI,EAAE,QAAS,EAAG,GAAI,CACpD,CCDO,SAASW,EAAeX,EAAMY,EAAOC,EAAO,GAAO,CAEtD,MAAMC,EAAWL,EAAaT,CAAI,EAC5Be,EAAYN,EAAaG,CAAK,EACpC,OAAIC,EACO,KAAK,IAAIC,EAAWC,CAAS,EAAI,MAErC,MAAM,KAAK,CAAE,OAAQ,KAAK,IAAID,EAAWC,CAAS,EAAI,KAAM,CAAE,EAAE,IAAI,CAACC,EAAG9E,IAAM,CACjF,MAAM+E,EAAOH,EAAWC,EAAYA,EAAY7E,EAAI,MAAS4E,EAAW5E,EAAI,MAC5E,OAAOsE,EAAQ,IAAI,KAAKS,CAAI,EAAG,OAAO,CAC9C,CAAK,CACL,CCZO,SAASC,EAAQ1E,EAAK2E,EAAOC,EAAK,CACrC7E,EAASC,CAAG,EACZ,MAAMqD,EAAOrD,EAAI,UAAU2E,EAAOC,CAAG,EACrC,OAAOvB,GAAc,EACzB,CCNO,SAASwB,EAAY7E,EAAK,CAC7B,OAAAD,EAASC,CAAG,EACLA,EAAI,UAAUA,EAAI,OAAS,EAAGA,EAAI,MAAM,CACnD,CCJO,SAAS8E,EAAarB,EAAO,IAAI,KAAI,EAAG,YAAW,EAAIC,EAAQ,IAAI,KAAI,EAAG,SAAQ,EAAK,EAAG,CAC7F,OAAO,IAAI,KAAKD,EAAMC,EAAO,CAAC,EAAE,QAAS,CAC7C,CCAO,SAASqB,EAAcC,EAAMC,EAAOC,EAAgB,EAAG,CAC1D,OAASF,EAAOC,EAAS,KAAK,QAAQC,CAAa,CACvD,CCHO,SAASC,EAAUC,EAAKC,EAAK,CAChC,OAAI,OAAOD,GAAQ,UAAY,OAAOC,GAAQ,WAC1CxF,EAAM,cAAc,EAEjB,KAAK,MAAM,KAAK,OAAM,GAAMwF,EAAMD,EAAM,GAAKA,CAAG,CAC3D,CCJO,SAASE,EAAeC,EAAQH,EAAKC,EAAK,CAC7C,MAAMzF,EAAM,CAAE,EACd,QAASF,EAAI,EAAGA,EAAI6F,EAAQ7F,IACxBE,EAAI,KAAKuF,EAAUC,EAAKC,CAAG,CAAC,EAEhC,OAAOzF,CACX,CCVO,SAAS4F,GAAiB,CAC7B,MAAO,IAAI,KAAK,MAAM,KAAK,OAAQ,EAAG,QAAQ,EAAE,SAAS,EAAE,CAAC,EAChE,CCDO,SAASC,GAAgB,CAC5B,MAAO,QAAQN,EAAU,EAAG,GAAG,CAAC,IAAIA,EAAU,EAAG,GAAG,CAAC,IAAIA,EAAU,EAAG,GAAG,CAAC,IAAIA,EAAU,EAAG,GAAG,EAAI,GAAG,GACzG,CCFO,SAASO,GAAoB,CAChC,MAAO,OAAOP,EAAU,EAAG,GAAG,CAAC,IAAIA,EAAU,EAAG,GAAG,CAAC,IAAIA,EAAU,EAAG,GAAG,CAAC,GAC7E,CCMO,SAASQ,EAAcnC,EAAO,IAAI,KAAQf,EAAO,EAAGmD,EAAS,GAAMC,EAAO,EAAG,CAChF,GAAI,CAACrC,EACD,MAAO,CAAE,EACb,MAAMsC,EAAS,QACTC,EAAS,GAAK,GAAK,GAAK,IAC9B,IAAIC,EAAM,IAAI,KAAKxC,CAAI,EAAE,QAAS,EAC7BoC,IACDI,GAAOD,GAGX,SAASE,EAAazC,EAAM,CACxB,MAAME,EAAQF,EAAK,SAAU,EAC7B,MAAO,CACH,KAAME,IAAU,EAAIF,EAAK,YAAW,EAAK,EAAIA,EAAK,YAAa,EAC/D,MAAOE,IAAU,EAAI,GAAKA,CAC7B,CACT,CACI,MAAMwC,EAAoBC,GAAU,MAAM,KAAK,CAAE,OAAQA,CAAO,EAAE,CAAC3B,EAAG9E,IAAM,CACxE,MAAM+E,EAAOuB,GAAOG,EAAQzG,EAAI,GAAKqG,EACrC,OAAOhC,EAAYT,EAAY,IAAI,KAAKmB,CAAI,CAAC,EAAGqB,CAAM,CAC9D,CAAK,EAEK,CAAE,KAAArC,EAAM,MAAAC,EAAO,IAAAC,CAAG,EAAKL,EAAYE,CAAI,EAC7C,GAAIf,GAAQ,CAACoD,EACT,OAAQpD,EAAI,CACR,IAAK,GACD,OAAOyD,EAAiB,CAAC,EAE7B,IAAK,GACD,OAAOA,EAAiB,CAAC,EAE7B,IAAK,GAAG,CACJ,KAAM,CAAE,KAAME,EAAU,MAAOC,CAAW,EAAGJ,EAAa,IAAI,KAAKD,CAAG,CAAC,EACvE,OAAO7B,EAAe,GAAGiC,CAAQ,IAAIC,CAAS,IAAI1C,CAAG,GAAIqC,CAAG,CAC5E,CACY,IAAK,GACD,OAAO7B,EAAe,GAAGV,EAAO,CAAC,IAAIC,CAAK,IAAIC,CAAG,GAAI,GAAGF,CAAI,IAAIC,CAAK,IAAIC,CAAG,EAAE,CAE9F,SAEakC,EACL,OAAOK,EAAiBL,CAAI,EAEhC,MAAO,CAAE,CACb,CCjDO,SAASS,EAAkBnG,EAAKG,EAAOW,EAAY,GAAI,CAC1D,MAAMrB,EAAM,CAAE,EACd,QAASkB,KAAOX,EACZ,GAAIA,EAAI,eAAeW,CAAG,EAAG,CACzB,MAAMO,EAAUJ,EAAY,GAAGA,CAAS,IAAIH,CAAG,GAAKA,EAC9CM,EAAQjB,EAAIW,CAAG,EACjB,OAAOM,GAAU,SACjBxB,EAAI,KAAK,GAAG0G,EAAkBlF,EAAOd,EAAOe,CAAO,CAAC,EAE/CP,GAAOR,GACZV,EAAI,KAAK,CACL,IAAKyB,EACL,MAAAD,CACpB,CAAiB,CAEjB,CAEI,OAAOxB,CACX,CCjBO,SAAS2G,EAAY5B,EAAOC,EAAKiB,EAAO,QAASpD,EAAO,QAAS,CACpE,MAAM+D,EAAa/B,GAASA,EACvB,MAAM,GAAG,EACT,IAAI,MAAM,EACV,OAAO,CAACgC,EAAGvE,EAAGxC,IAAM+G,EAAIvE,EAAI,CAAC,KAAM,GAAI,CAAC,EAAExC,CAAC,EAAG,CAAC,EAC9CoG,EAAUrB,GAAS,CAAC,KAAK,MAAMA,EAAO,IAAI,EAAG,KAAK,MAAOA,EAAO,KAAQ,EAAE,EAAGA,EAAO,EAAE,EACvF,IAAKvC,GAAM,OAAOA,CAAC,EAAE,SAAS,EAAG,GAAG,CAAC,EACrC,KAAK,GAAG,EACPwE,EAAYF,EAAU7B,CAAK,EAC3BgC,EAAUH,EAAU5B,CAAG,EACvBgC,EAAWJ,EAAUX,CAAI,EACzBrG,EAAS,CAAE,EACjB,QAASiF,EAAOiC,EAAWjC,GAAQkC,EAASlC,GAAQmC,EAChDpH,EAAO,KAAKiD,IAAS,WAAaqD,EAAOrB,CAAI,EAAIqB,EAAOrB,CAAI,EAAE,MAAM,EAAG,CAAC,CAAC,EAE7E,OAAOjF,CACX,CCnBO,SAASqH,EAAQzH,EAAM,CAC1B,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAI,EAAE,MAAM,EAAG,EAAE,EAAE,YAAa,CAC1E,CCFO,SAAS0H,EAAYC,EAAM,GAAI,CAClC,OAAKA,IACDA,EAAM,OAAO,SAAS,OAElBA,EAAI,MAAM,sBAAsB,GAAK,CAAA,GAAI,OAAO,CAACN,EAAGvE,KAAQuE,EAAEvE,EAAE,MAAM,EAAGA,EAAE,QAAQ,GAAG,CAAC,CAAC,EAAIA,EAAE,MAAMA,EAAE,QAAQ,GAAG,EAAI,CAAC,EAAIuE,GAAI,CAAA,CAAE,CAC5I,CCAO,SAASO,EAAS7G,EAAK8G,EAAM,CAIhC,OAHI,OAAOA,GAAS,UAAY7D,EAAS6D,EAAM,GAAG,IAC9CA,EAAOA,EAAK,MAAM,GAAG,GAErB,CAAC,MAAM,QAAQA,CAAI,GAAK,CAACA,EAClB,GAEJA,EAAK,OAAO,CAACC,EAAKpG,IAAQoG,GAAOA,EAAIpG,CAAG,EAAGX,CAAG,CACzD,CCbO,SAASgH,EAAW3D,EAAO,IAAI,KAAQ,CAE1C,MADiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EACnC,IAAI,KAAKA,CAAI,EAAE,OAAM,CAAE,CAC3C,CCHO,SAAS4D,GAAY5D,EAAO,IAAI,KAAQ,CAC3C,MAAMwC,EAAM,IAAI,KAAKxC,CAAI,EACnB6D,EAAYrB,EAAI,OAAQ,EACxBsB,EAAc,IAAI,KAAKtB,CAAG,EAChC,OAAAsB,EAAY,QAAQtB,EAAI,QAAO,EAAKqB,EAAY,CAAC,EAC1C,MAAM,KAAK,CAAE,OAAQ,GAAK,CAAC7C,EAAG,IAAM,CACvC,MAAMhB,EAAO,IAAI,KAAK8D,CAAW,EACjC,OAAA9D,EAAK,QAAQ8D,EAAY,QAAO,EAAK,CAAC,EAC/B9D,EAAK,mBAAoB,CACxC,CAAK,CACL,CCVO,SAAS+D,GAAa9D,EAAO,IAAI,KAAM,EAAC,YAAW,EAAI,CAC1D,IAAI+D,EAAQ,IAAI,KAAK/D,EAAM,EAAG,CAAC,EAAE,OAAQ,EAUzC,GATI+D,GAAS,EACTA,EAAQ,EAEHA,GAAS,EACdA,EAAQ,EAGRA,EAAQ,EAAIA,EAEX/D,EAAO,GAAK,GAAKA,EAAO,KAAO,GAC/BA,EAAO,KAAO,GAAKA,EAAO,KAAO,EAClC,IAAIgE,EAAW,QAGf,KAAIA,EAAW,IAGnB,OADW,KAAK,MAAMA,EAAWD,GAAS,CAAC,GAAKA,IAAU,EAAI,EAAI,EAEtE,CCpBO,SAASE,GAAQtI,EAAM0B,EAAK,CAC/B,OAAO1B,EAAK,OAAO,CAAC8H,EAAK7H,MACpB6H,EAAI7H,EAAKyB,CAAG,CAAC,EAAIoG,EAAI7H,EAAKyB,CAAG,CAAC,GAAK,IAAI,KAAKzB,CAAI,EAC1C6H,GACR,EAAE,CACT,CCJO,SAASS,GAAYC,EAAOvE,EAAO,IAAKmE,EAAQ,GAAI,CACvD,IAAIxH,EAAM4H,EAAM,SAAU,EACtBtH,EAAQN,EAAI,QAAQ,GAAG,EAI3B,IAHIM,IAAU,KACVA,EAAQN,EAAI,QAETM,EAAQ,GACXA,GAAS,EACTN,EAAMA,EAAI,MAAM,EAAGM,CAAK,EAAI+C,EAAOrD,EAAI,MAAMM,CAAK,EAEtD,OAAOkH,EAAQA,EAAQxH,EAAMA,CACjC,CCXO,SAAS6H,GAAY1H,EAAKsC,EAAO,MAAO,CAC3C,GAAIA,IAAS,MACT,OAAO,OAAO,KAAKtC,CAAG,EACjB,IAAKW,GAAQ,GAAGA,CAAG,IAAIX,EAAIW,CAAG,CAAC,EAAE,EACjC,KAAK,GAAG,EAEjB,GAAI2B,IAAS,OACT,OAAO,KAAK,UAAUtC,CAAG,EAE7B,GAAIsC,IAAS,WAAY,CACrB,MAAMqF,EAAW,IAAI,SACrB,UAAWhH,KAAOX,EACd2H,EAAS,OAAOhH,EAAKX,EAAIW,CAAG,CAAC,EAEjC,OAAOgH,CACf,CACA,CCjBO,SAASC,GAAS/H,EAAK,CAC1B,MAAO,qDAAqD,KAAKA,CAAG,CACxE,CCFO,SAASgI,GAAUhI,EAAK,CAwC3B,GAvCI,CAAC,kBAAkB,KAAKA,CAAG,GAuC3B,CArCkB,CAClB,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,MACJ,GAAI,KACJ,GAAI,KACJ,GAAI,MACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,IACP,EACkBA,EAAI,UAAU,EAAG,CAAC,CAAC,EAClC,MAAO,GACX,MAAMiI,EAAWjI,EAAI,UAAU,EAAG,EAAE,EAC9ByD,EAAOwE,EAAS,UAAU,EAAG,CAAC,EAC9BvE,EAAQuE,EAAS,UAAU,EAAG,CAAC,EAC/BtE,EAAMsE,EAAS,UAAU,EAAG,EAAE,EAC9BC,EAAY,IAAI,KAAKzE,EAAO,IAAMC,EAAQ,IAAMC,CAAG,EACzD,GAAIuE,EAAU,gBAAkB,SAASzE,CAAI,GACzCyE,EAAU,SAAU,EAAG,IAAM,SAASxE,CAAK,GAC3CwE,EAAU,QAAO,IAAO,SAASvE,CAAG,EACpC,MAAO,GAEX,MAAMwE,EAAU,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,CAAC,EAC9DC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EACzE,IAAIC,EAAM,EACV,QAAS3I,EAAI,EAAGA,EAAI,GAAIA,IACpB2I,GAAO,OAAOrI,EAAIN,CAAC,CAAC,EAAIyI,EAAQzI,CAAC,EAErC,MAAM4I,EAAsBF,EAAWC,EAAM,EAAE,EAC/C,OAAIrI,EAAI,EAAE,EAAE,YAAW,IAAOsI,CAIlC,CC/DO,SAASC,GAASvI,EAAK,CAC1B,MAAO,oBAAoB,KAAKA,CAAG,CACvC,CCHO,SAASwI,GAAaC,EAAO,CAChC,GAAI,CAAC,MAAM,QAAQA,CAAK,EACpB,OAAOA,EACX,IAAI7I,EAAM6I,EAAM,MAAO,EACvB,QAAS/I,EAAIE,EAAI,OAAS,EAAGF,EAAI,EAAGA,IAAK,CACrC,MAAMgJ,EAAI,KAAK,MAAM,KAAK,UAAYhJ,EAAI,EAAE,EAC5C,CAACE,EAAIF,CAAC,EAAGE,EAAI8I,CAAC,CAAC,EAAI,CAAC9I,EAAI8I,CAAC,EAAG9I,EAAIF,CAAC,CAAC,CAC1C,CACI,OAAOE,CACX,CCVO,SAAS+I,GAAMC,EAAI,CACtB,OAAO,IAAI,QAASC,GAAY,WAAWA,EAASD,CAAE,CAAC,CAC3D,CCGO,SAASE,GAAW9I,EAAK2E,EAAOC,EAAKmE,EAAO,IAAK,CACpD,IAAIC,EAAMhJ,EAAI,OACViJ,EAAIjJ,EAAI,UAAU,EAAG2E,CAAK,EAC1BuE,EAAIlJ,EAAI,UAAU4E,EAAKoE,CAAG,EAC1BG,EAAO,GACX,QAASzJ,EAAI,EAAGA,EAAIkF,EAAMD,EAAOjF,IAC7ByJ,GAAQJ,EAEZ,OAAOE,EAAIE,EAAOD,CACtB,CCZY,MAACE,GAAY,UAAY,CACjC,IAAIC,EAAO,EACX,MAAO,CAACzG,EAAUC,EAAO,MAAQ,CAC7B,IAAImD,EAAM,CAAC,IAAI,KACXA,EAAMqD,EAAOxG,IACbD,EAAU,EACVyG,EAAOrD,EAEd,CACL,EAAC,ECTM,SAASsD,GAAOlK,EAAMmK,EAAK,CAC9B,IAAIC,EAAO,CAAE,EACTC,EAAS,CAAE,EACf,OAAArK,EAAK,QAASC,GAAS,CACnBoK,EAAOpK,EAAK,EAAE,EAAI,OAAO,OAAO,OAAO,OAAO,CAAE,EAAEA,CAAI,EAAG,CAAE,SAAU,CAAE,CAAA,CAAE,CACjF,CAAK,EACDD,EAAK,QAASC,GAAS,CACfA,EAAKkK,CAAG,IAAM,KACdC,EAAK,KAAKC,EAAOpK,EAAK,EAAE,CAAC,EAGzBoK,EAAOpK,EAAKkK,CAAG,CAAC,EAAE,SAAS,KAAKE,EAAOpK,EAAK,EAAE,CAAC,CAE3D,CAAK,EACMmK,CACX,CChBO,SAASE,GAAYtK,EAAM,CAC9B,MAAO,CAAC,GAAG,IAAI,IAAIA,CAAI,CAAC,CAC5B,CCFO,SAASuK,IAAmB,CAE/B,IAAInG,EAAO,IAAI,KAAK,IAAI,KAAI,EAAG,QAAQ,CAAC,GAAK,IAAI,KAAI,EAAG,QAAQ,CAAC,CAAC,EAC9DoG,EACApG,EAAK,OAAQ,IAAK,EAClBoG,EAAgB,EAGhBA,EAAgBpG,EAAK,OAAM,EAAK,EAEpCA,EAAK,SAASA,EAAK,SAAQ,EAAK,CAAC,EACjCA,EAAK,QAAQ,CAAC,EACd,IAAIqG,EAAerG,EAAK,QAAO,EAAKoG,EACpC,OAAO,KAAK,KAAKC,EAAe,CAAC,CACrC,CCdA,MAAMC,GAAU,QAChB,QAAQ,IAAI,cAAmBA,EAAO,GAAI,kFAAmF,iFAAiF","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52]}