{"version":3,"file":"@intlify-DCvRJ7Og.js","sources":["../../../node_modules/@intlify/shared/dist/shared.mjs","../../../node_modules/@intlify/message-compiler/dist/message-compiler.mjs","../../../node_modules/@intlify/core-base/dist/core-base.mjs"],"sourcesContent":["/*!\n  * shared v11.0.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\n/**\n * Original Utilities\n * written by kazuya kawaguchi\n */\nconst inBrowser = typeof window !== 'undefined';\nlet mark;\nlet measure;\nif ((process.env.NODE_ENV !== 'production')) {\n    const perf = inBrowser && window.performance;\n    if (perf &&\n        perf.mark &&\n        perf.measure &&\n        perf.clearMarks &&\n        // @ts-ignore browser compat\n        perf.clearMeasures) {\n        mark = (tag) => {\n            perf.mark(tag);\n        };\n        measure = (name, startTag, endTag) => {\n            perf.measure(name, startTag, endTag);\n            perf.clearMarks(startTag);\n            perf.clearMarks(endTag);\n        };\n    }\n}\nconst RE_ARGS = /\\{([0-9a-zA-Z]+)\\}/g;\n/* eslint-disable */\nfunction format(message, ...args) {\n    if (args.length === 1 && isObject(args[0])) {\n        args = args[0];\n    }\n    if (!args || !args.hasOwnProperty) {\n        args = {};\n    }\n    return message.replace(RE_ARGS, (match, identifier) => {\n        return args.hasOwnProperty(identifier) ? args[identifier] : '';\n    });\n}\nconst makeSymbol = (name, shareable = false) => !shareable ? Symbol(name) : Symbol.for(name);\nconst generateFormatCacheKey = (locale, key, source) => friendlyJSONstringify({ l: locale, k: key, s: source });\nconst friendlyJSONstringify = (json) => JSON.stringify(json)\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n    .replace(/\\u0027/g, '\\\\u0027');\nconst isNumber = (val) => typeof val === 'number' && isFinite(val);\nconst isDate = (val) => toTypeString(val) === '[object Date]';\nconst isRegExp = (val) => toTypeString(val) === '[object RegExp]';\nconst isEmptyObject = (val) => isPlainObject(val) && Object.keys(val).length === 0;\nconst assign = Object.assign;\nconst _create = Object.create;\nconst create = (obj = null) => _create(obj);\nlet _globalThis;\nconst getGlobalThis = () => {\n    // prettier-ignore\n    return (_globalThis ||\n        (_globalThis =\n            typeof globalThis !== 'undefined'\n                ? globalThis\n                : typeof self !== 'undefined'\n                    ? self\n                    : typeof window !== 'undefined'\n                        ? window\n                        : typeof global !== 'undefined'\n                            ? global\n                            : create()));\n};\nfunction escapeHtml(rawText) {\n    return rawText\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n}\n/* eslint-enable */\n/**\n * Useful Utilities By Evan you\n * Modified by kazuya kawaguchi\n * MIT License\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/index.ts\n * https://github.com/vuejs/vue-next/blob/master/packages/shared/src/codeframe.ts\n */\nconst isArray = Array.isArray;\nconst isFunction = (val) => typeof val === 'function';\nconst isString = (val) => typeof val === 'string';\nconst isBoolean = (val) => typeof val === 'boolean';\nconst isSymbol = (val) => typeof val === 'symbol';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (val) => val !== null && typeof val === 'object';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPromise = (val) => {\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n};\nconst objectToString = Object.prototype.toString;\nconst toTypeString = (value) => objectToString.call(value);\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\n// for converting list and named values to displayed strings.\nconst toDisplayString = (val) => {\n    return val == null\n        ? ''\n        : isArray(val) || (isPlainObject(val) && val.toString === objectToString)\n            ? JSON.stringify(val, null, 2)\n            : String(val);\n};\nfunction join(items, separator = '') {\n    return items.reduce((str, item, index) => (index === 0 ? str + item : str + separator + item), '');\n}\nconst RANGE = 2;\nfunction generateCodeFrame(source, start = 0, end = source.length) {\n    const lines = source.split(/\\r?\\n/);\n    let count = 0;\n    const res = [];\n    for (let i = 0; i < lines.length; i++) {\n        count += lines[i].length + 1;\n        if (count >= start) {\n            for (let j = i - RANGE; j <= i + RANGE || end > count; j++) {\n                if (j < 0 || j >= lines.length)\n                    continue;\n                const line = j + 1;\n                res.push(`${line}${' '.repeat(3 - String(line).length)}|  ${lines[j]}`);\n                const lineLength = lines[j].length;\n                if (j === i) {\n                    // push underline\n                    const pad = start - (count - lineLength) + 1;\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n                }\n                else if (j > i) {\n                    if (end > count) {\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\n                        res.push(`   |  ` + '^'.repeat(length));\n                    }\n                    count += lineLength + 1;\n                }\n            }\n            break;\n        }\n    }\n    return res.join('\\n');\n}\n\nfunction warn(msg, err) {\n    if (typeof console !== 'undefined') {\n        console.warn(`[intlify] ` + msg);\n        /* istanbul ignore if */\n        if (err) {\n            console.warn(err.stack);\n        }\n    }\n}\nconst hasWarned = {};\nfunction warnOnce(msg) {\n    if (!hasWarned[msg]) {\n        hasWarned[msg] = true;\n        warn(msg);\n    }\n}\n\n/**\n * Event emitter, forked from the below:\n * - original repository url: https://github.com/developit/mitt\n * - code url: https://github.com/developit/mitt/blob/master/src/index.ts\n * - author: Jason Miller (https://github.com/developit)\n * - license: MIT\n */\n/**\n * Create a event emitter\n *\n * @returns An event emitter\n */\nfunction createEmitter() {\n    const events = new Map();\n    const emitter = {\n        events,\n        on(event, handler) {\n            const handlers = events.get(event);\n            const added = handlers && handlers.push(handler);\n            if (!added) {\n                events.set(event, [handler]);\n            }\n        },\n        off(event, handler) {\n            const handlers = events.get(event);\n            if (handlers) {\n                handlers.splice(handlers.indexOf(handler) >>> 0, 1);\n            }\n        },\n        emit(event, payload) {\n            (events.get(event) || [])\n                .slice()\n                .map(handler => handler(payload));\n            (events.get('*') || [])\n                .slice()\n                .map(handler => handler(event, payload));\n        }\n    };\n    return emitter;\n}\n\nconst isNotObjectOrIsArray = (val) => !isObject(val) || isArray(val);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deepCopy(src, des) {\n    // src and des should both be objects, and none of them can be a array\n    if (isNotObjectOrIsArray(src) || isNotObjectOrIsArray(des)) {\n        throw new Error('Invalid value');\n    }\n    const stack = [{ src, des }];\n    while (stack.length) {\n        const { src, des } = stack.pop();\n        // using `Object.keys` which skips prototype properties\n        Object.keys(src).forEach(key => {\n            if (key === '__proto__') {\n                return;\n            }\n            // if src[key] is an object/array, set des[key]\n            // to empty object/array to prevent setting by reference\n            if (isObject(src[key]) && !isObject(des[key])) {\n                des[key] = Array.isArray(src[key]) ? [] : create();\n            }\n            if (isNotObjectOrIsArray(des[key]) || isNotObjectOrIsArray(src[key])) {\n                // replace with src[key] when:\n                // src[key] or des[key] is not an object, or\n                // src[key] or des[key] is an array\n                des[key] = src[key];\n            }\n            else {\n                // src[key] and des[key] are both objects, merge them\n                stack.push({ src: src[key], des: des[key] });\n            }\n        });\n    }\n}\n\nexport { assign, create, createEmitter, deepCopy, escapeHtml, format, friendlyJSONstringify, generateCodeFrame, generateFormatCacheKey, getGlobalThis, hasOwn, inBrowser, isArray, isBoolean, isDate, isEmptyObject, isFunction, isNumber, isObject, isPlainObject, isPromise, isRegExp, isString, isSymbol, join, makeSymbol, mark, measure, objectToString, toDisplayString, toTypeString, warn, warnOnce };\n","/*!\n  * message-compiler v11.0.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { format, assign, join, isString } from '@intlify/shared';\n\nconst LOCATION_STUB = {\n    start: { line: 1, column: 1, offset: 0 },\n    end: { line: 1, column: 1, offset: 0 }\n};\nfunction createPosition(line, column, offset) {\n    return { line, column, offset };\n}\nfunction createLocation(start, end, source) {\n    const loc = { start, end };\n    if (source != null) {\n        loc.source = source;\n    }\n    return loc;\n}\n\nconst CompileErrorCodes = {\n    // tokenizer error codes\n    EXPECTED_TOKEN: 1,\n    INVALID_TOKEN_IN_PLACEHOLDER: 2,\n    UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,\n    UNKNOWN_ESCAPE_SEQUENCE: 4,\n    INVALID_UNICODE_ESCAPE_SEQUENCE: 5,\n    UNBALANCED_CLOSING_BRACE: 6,\n    UNTERMINATED_CLOSING_BRACE: 7,\n    EMPTY_PLACEHOLDER: 8,\n    NOT_ALLOW_NEST_PLACEHOLDER: 9,\n    INVALID_LINKED_FORMAT: 10,\n    // parser error codes\n    MUST_HAVE_MESSAGES_IN_PLURAL: 11,\n    UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,\n    UNEXPECTED_EMPTY_LINKED_KEY: 13,\n    UNEXPECTED_LEXICAL_ANALYSIS: 14,\n    // generator error codes\n    UNHANDLED_CODEGEN_NODE_TYPE: 15,\n    // minifier error codes\n    UNHANDLED_MINIFIER_NODE_TYPE: 16\n};\n// Special value for higher-order compilers to pick up the last code\n// to avoid collision of error codes.\n// This should always be kept as the last item.\nconst COMPILE_ERROR_CODES_EXTEND_POINT = 17;\n/** @internal */\nconst errorMessages = {\n    // tokenizer error messages\n    [CompileErrorCodes.EXPECTED_TOKEN]: `Expected token: '{0}'`,\n    [CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER]: `Invalid token in placeholder: '{0}'`,\n    [CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER]: `Unterminated single quote in placeholder`,\n    [CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE]: `Unknown escape sequence: \\\\{0}`,\n    [CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE]: `Invalid unicode escape sequence: {0}`,\n    [CompileErrorCodes.UNBALANCED_CLOSING_BRACE]: `Unbalanced closing brace`,\n    [CompileErrorCodes.UNTERMINATED_CLOSING_BRACE]: `Unterminated closing brace`,\n    [CompileErrorCodes.EMPTY_PLACEHOLDER]: `Empty placeholder`,\n    [CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER]: `Not allowed nest placeholder`,\n    [CompileErrorCodes.INVALID_LINKED_FORMAT]: `Invalid linked format`,\n    // parser error messages\n    [CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL]: `Plural must have messages`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER]: `Unexpected empty linked modifier`,\n    [CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY]: `Unexpected empty linked key`,\n    [CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS]: `Unexpected lexical analysis in token: '{0}'`,\n    // generator error messages\n    [CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE]: `unhandled codegen node type: '{0}'`,\n    // minimizer error messages\n    [CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE]: `unhandled mimifier node type: '{0}'`\n};\nfunction createCompileError(code, loc, options = {}) {\n    const { domain, messages, args } = options;\n    const msg = (process.env.NODE_ENV !== 'production')\n        ? format((messages || errorMessages)[code] || '', ...(args || []))\n        : code;\n    const error = new SyntaxError(String(msg));\n    error.code = code;\n    if (loc) {\n        error.location = loc;\n    }\n    error.domain = domain;\n    return error;\n}\n/** @internal */\nfunction defaultOnError(error) {\n    throw error;\n}\n\n// eslint-disable-next-line no-useless-escape\nconst RE_HTML_TAG = /<\\/?[\\w\\s=\"/.':;#-\\/]+>/;\nconst detectHtmlTag = (source) => RE_HTML_TAG.test(source);\n\nconst CHAR_SP = ' ';\nconst CHAR_CR = '\\r';\nconst CHAR_LF = '\\n';\nconst CHAR_LS = String.fromCharCode(0x2028);\nconst CHAR_PS = String.fromCharCode(0x2029);\nfunction createScanner(str) {\n    const _buf = str;\n    let _index = 0;\n    let _line = 1;\n    let _column = 1;\n    let _peekOffset = 0;\n    const isCRLF = (index) => _buf[index] === CHAR_CR && _buf[index + 1] === CHAR_LF;\n    const isLF = (index) => _buf[index] === CHAR_LF;\n    const isPS = (index) => _buf[index] === CHAR_PS;\n    const isLS = (index) => _buf[index] === CHAR_LS;\n    const isLineEnd = (index) => isCRLF(index) || isLF(index) || isPS(index) || isLS(index);\n    const index = () => _index;\n    const line = () => _line;\n    const column = () => _column;\n    const peekOffset = () => _peekOffset;\n    const charAt = (offset) => isCRLF(offset) || isPS(offset) || isLS(offset) ? CHAR_LF : _buf[offset];\n    const currentChar = () => charAt(_index);\n    const currentPeek = () => charAt(_index + _peekOffset);\n    function next() {\n        _peekOffset = 0;\n        if (isLineEnd(_index)) {\n            _line++;\n            _column = 0;\n        }\n        if (isCRLF(_index)) {\n            _index++;\n        }\n        _index++;\n        _column++;\n        return _buf[_index];\n    }\n    function peek() {\n        if (isCRLF(_index + _peekOffset)) {\n            _peekOffset++;\n        }\n        _peekOffset++;\n        return _buf[_index + _peekOffset];\n    }\n    function reset() {\n        _index = 0;\n        _line = 1;\n        _column = 1;\n        _peekOffset = 0;\n    }\n    function resetPeek(offset = 0) {\n        _peekOffset = offset;\n    }\n    function skipToPeek() {\n        const target = _index + _peekOffset;\n        while (target !== _index) {\n            next();\n        }\n        _peekOffset = 0;\n    }\n    return {\n        index,\n        line,\n        column,\n        peekOffset,\n        charAt,\n        currentChar,\n        currentPeek,\n        next,\n        peek,\n        reset,\n        resetPeek,\n        skipToPeek\n    };\n}\n\nconst EOF = undefined;\nconst DOT = '.';\nconst LITERAL_DELIMITER = \"'\";\nconst ERROR_DOMAIN$3 = 'tokenizer';\nfunction createTokenizer(source, options = {}) {\n    const location = options.location !== false;\n    const _scnr = createScanner(source);\n    const currentOffset = () => _scnr.index();\n    const currentPosition = () => createPosition(_scnr.line(), _scnr.column(), _scnr.index());\n    const _initLoc = currentPosition();\n    const _initOffset = currentOffset();\n    const _context = {\n        currentType: 13 /* TokenTypes.EOF */,\n        offset: _initOffset,\n        startLoc: _initLoc,\n        endLoc: _initLoc,\n        lastType: 13 /* TokenTypes.EOF */,\n        lastOffset: _initOffset,\n        lastStartLoc: _initLoc,\n        lastEndLoc: _initLoc,\n        braceNest: 0,\n        inLinked: false,\n        text: ''\n    };\n    const context = () => _context;\n    const { onError } = options;\n    function emitError(code, pos, offset, ...args) {\n        const ctx = context();\n        pos.column += offset;\n        pos.offset += offset;\n        if (onError) {\n            const loc = location ? createLocation(ctx.startLoc, pos) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$3,\n                args\n            });\n            onError(err);\n        }\n    }\n    function getToken(context, type, value) {\n        context.endLoc = currentPosition();\n        context.currentType = type;\n        const token = { type };\n        if (location) {\n            token.loc = createLocation(context.startLoc, context.endLoc);\n        }\n        if (value != null) {\n            token.value = value;\n        }\n        return token;\n    }\n    const getEndToken = (context) => getToken(context, 13 /* TokenTypes.EOF */);\n    function eat(scnr, ch) {\n        if (scnr.currentChar() === ch) {\n            scnr.next();\n            return ch;\n        }\n        else {\n            emitError(CompileErrorCodes.EXPECTED_TOKEN, currentPosition(), 0, ch);\n            return '';\n        }\n    }\n    function peekSpaces(scnr) {\n        let buf = '';\n        while (scnr.currentPeek() === CHAR_SP || scnr.currentPeek() === CHAR_LF) {\n            buf += scnr.currentPeek();\n            scnr.peek();\n        }\n        return buf;\n    }\n    function skipSpaces(scnr) {\n        const buf = peekSpaces(scnr);\n        scnr.skipToPeek();\n        return buf;\n    }\n    function isIdentifierStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            cc === 95 // _\n        );\n    }\n    function isNumberStart(ch) {\n        if (ch === EOF) {\n            return false;\n        }\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function isNamedIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isListIdentifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ch = scnr.currentPeek() === '-' ? scnr.peek() : scnr.currentPeek();\n        const ret = isNumberStart(ch);\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLiteralStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 2 /* TokenTypes.BraceLeft */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === LITERAL_DELIMITER;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDotStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 7 /* TokenTypes.LinkedAlias */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \".\" /* TokenChars.LinkedDot */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedModifierStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 8 /* TokenTypes.LinkedDot */) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = isIdentifierStart(scnr.currentPeek());\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedDelimiterStart(scnr, context) {\n        const { currentType } = context;\n        if (!(currentType === 7 /* TokenTypes.LinkedAlias */ ||\n            currentType === 11 /* TokenTypes.LinkedModifier */)) {\n            return false;\n        }\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \":\" /* TokenChars.LinkedDelimiter */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isLinkedReferStart(scnr, context) {\n        const { currentType } = context;\n        if (currentType !== 9 /* TokenTypes.LinkedDelimiter */) {\n            return false;\n        }\n        const fn = () => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return isIdentifierStart(scnr.peek());\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \":\" /* TokenChars.LinkedDelimiter */ ||\n                ch === \".\" /* TokenChars.LinkedDot */ ||\n                ch === CHAR_SP ||\n                !ch) {\n                return false;\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn();\n            }\n            else {\n                // other characters\n                return isTextStart(scnr, false);\n            }\n        };\n        const ret = fn();\n        scnr.resetPeek();\n        return ret;\n    }\n    function isPluralStart(scnr) {\n        peekSpaces(scnr);\n        const ret = scnr.currentPeek() === \"|\" /* TokenChars.Pipe */;\n        scnr.resetPeek();\n        return ret;\n    }\n    function isTextStart(scnr, reset = true) {\n        const fn = (hasSpace = false, prev = '') => {\n            const ch = scnr.currentPeek();\n            if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                return hasSpace;\n            }\n            else if (ch === \"@\" /* TokenChars.LinkedAlias */ || !ch) {\n                return hasSpace;\n            }\n            else if (ch === \"|\" /* TokenChars.Pipe */) {\n                return !(prev === CHAR_SP || prev === CHAR_LF);\n            }\n            else if (ch === CHAR_SP) {\n                scnr.peek();\n                return fn(true, CHAR_SP);\n            }\n            else if (ch === CHAR_LF) {\n                scnr.peek();\n                return fn(true, CHAR_LF);\n            }\n            else {\n                return true;\n            }\n        };\n        const ret = fn();\n        reset && scnr.resetPeek();\n        return ret;\n    }\n    function takeChar(scnr, fn) {\n        const ch = scnr.currentChar();\n        if (ch === EOF) {\n            return EOF;\n        }\n        if (fn(ch)) {\n            scnr.next();\n            return ch;\n        }\n        return null;\n    }\n    function isIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 // $\n        );\n    }\n    function takeIdentifierChar(scnr) {\n        return takeChar(scnr, isIdentifier);\n    }\n    function isNamedIdentifier(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 97 && cc <= 122) || // a-z\n            (cc >= 65 && cc <= 90) || // A-Z\n            (cc >= 48 && cc <= 57) || // 0-9\n            cc === 95 || // _\n            cc === 36 || // $\n            cc === 45 // -\n        );\n    }\n    function takeNamedIdentifierChar(scnr) {\n        return takeChar(scnr, isNamedIdentifier);\n    }\n    function isDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n    }\n    function takeDigit(scnr) {\n        return takeChar(scnr, isDigit);\n    }\n    function isHexDigit(ch) {\n        const cc = ch.charCodeAt(0);\n        return ((cc >= 48 && cc <= 57) || // 0-9\n            (cc >= 65 && cc <= 70) || // A-F\n            (cc >= 97 && cc <= 102)); // a-f\n    }\n    function takeHexDigit(scnr) {\n        return takeChar(scnr, isHexDigit);\n    }\n    function getDigits(scnr) {\n        let ch = '';\n        let num = '';\n        while ((ch = takeDigit(scnr))) {\n            num += ch;\n        }\n        return num;\n    }\n    function readText(scnr) {\n        let buf = '';\n        while (true) {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"}\" /* TokenChars.BraceRight */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                !ch) {\n                break;\n            }\n            else if (ch === CHAR_SP || ch === CHAR_LF) {\n                if (isTextStart(scnr)) {\n                    buf += ch;\n                    scnr.next();\n                }\n                else if (isPluralStart(scnr)) {\n                    break;\n                }\n                else {\n                    buf += ch;\n                    scnr.next();\n                }\n            }\n            else {\n                buf += ch;\n                scnr.next();\n            }\n        }\n        return buf;\n    }\n    function readNamedIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let name = '';\n        while ((ch = takeNamedIdentifierChar(scnr))) {\n            name += ch;\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return name;\n    }\n    function readListIdentifier(scnr) {\n        skipSpaces(scnr);\n        let value = '';\n        if (scnr.currentChar() === '-') {\n            scnr.next();\n            value += `-${getDigits(scnr)}`;\n        }\n        else {\n            value += getDigits(scnr);\n        }\n        if (scnr.currentChar() === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n        }\n        return value;\n    }\n    function isLiteral(ch) {\n        return ch !== LITERAL_DELIMITER && ch !== CHAR_LF;\n    }\n    function readLiteral(scnr) {\n        skipSpaces(scnr);\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        let ch = '';\n        let literal = '';\n        while ((ch = takeChar(scnr, isLiteral))) {\n            if (ch === '\\\\') {\n                literal += readEscapeSequence(scnr);\n            }\n            else {\n                literal += ch;\n            }\n        }\n        const current = scnr.currentChar();\n        if (current === CHAR_LF || current === EOF) {\n            emitError(CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, currentPosition(), 0);\n            // TODO: Is it correct really?\n            if (current === CHAR_LF) {\n                scnr.next();\n                // eslint-disable-next-line no-useless-escape\n                eat(scnr, `\\'`);\n            }\n            return literal;\n        }\n        // eslint-disable-next-line no-useless-escape\n        eat(scnr, `\\'`);\n        return literal;\n    }\n    function readEscapeSequence(scnr) {\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case '\\\\':\n            case `\\'`: // eslint-disable-line no-useless-escape\n                scnr.next();\n                return `\\\\${ch}`;\n            case 'u':\n                return readUnicodeEscapeSequence(scnr, ch, 4);\n            case 'U':\n                return readUnicodeEscapeSequence(scnr, ch, 6);\n            default:\n                emitError(CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE, currentPosition(), 0, ch);\n                return '';\n        }\n    }\n    function readUnicodeEscapeSequence(scnr, unicode, digits) {\n        eat(scnr, unicode);\n        let sequence = '';\n        for (let i = 0; i < digits; i++) {\n            const ch = takeHexDigit(scnr);\n            if (!ch) {\n                emitError(CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE, currentPosition(), 0, `\\\\${unicode}${sequence}${scnr.currentChar()}`);\n                break;\n            }\n            sequence += ch;\n        }\n        return `\\\\${unicode}${sequence}`;\n    }\n    function isInvalidIdentifier(ch) {\n        return (ch !== \"{\" /* TokenChars.BraceLeft */ &&\n            ch !== \"}\" /* TokenChars.BraceRight */ &&\n            ch !== CHAR_SP &&\n            ch !== CHAR_LF);\n    }\n    function readInvalidIdentifier(scnr) {\n        skipSpaces(scnr);\n        let ch = '';\n        let identifiers = '';\n        while ((ch = takeChar(scnr, isInvalidIdentifier))) {\n            identifiers += ch;\n        }\n        return identifiers;\n    }\n    function readLinkedModifier(scnr) {\n        let ch = '';\n        let name = '';\n        while ((ch = takeIdentifierChar(scnr))) {\n            name += ch;\n        }\n        return name;\n    }\n    function readLinkedRefer(scnr) {\n        const fn = (buf) => {\n            const ch = scnr.currentChar();\n            if (ch === \"{\" /* TokenChars.BraceLeft */ ||\n                ch === \"@\" /* TokenChars.LinkedAlias */ ||\n                ch === \"|\" /* TokenChars.Pipe */ ||\n                ch === \"(\" /* TokenChars.ParenLeft */ ||\n                ch === \")\" /* TokenChars.ParenRight */ ||\n                !ch) {\n                return buf;\n            }\n            else if (ch === CHAR_SP) {\n                return buf;\n            }\n            else if (ch === CHAR_LF || ch === DOT) {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n            else {\n                buf += ch;\n                scnr.next();\n                return fn(buf);\n            }\n        };\n        return fn('');\n    }\n    function readPlural(scnr) {\n        skipSpaces(scnr);\n        const plural = eat(scnr, \"|\" /* TokenChars.Pipe */);\n        skipSpaces(scnr);\n        return plural;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInPlaceholder(scnr, context) {\n        let token = null;\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                if (context.braceNest >= 1) {\n                    emitError(CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 2 /* TokenTypes.BraceLeft */, \"{\" /* TokenChars.BraceLeft */);\n                skipSpaces(scnr);\n                context.braceNest++;\n                return token;\n            case \"}\" /* TokenChars.BraceRight */:\n                if (context.braceNest > 0 &&\n                    context.currentType === 2 /* TokenTypes.BraceLeft */) {\n                    emitError(CompileErrorCodes.EMPTY_PLACEHOLDER, currentPosition(), 0);\n                }\n                scnr.next();\n                token = getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n                context.braceNest--;\n                context.braceNest > 0 && skipSpaces(scnr);\n                if (context.inLinked && context.braceNest === 0) {\n                    context.inLinked = false;\n                }\n                return token;\n            case \"@\" /* TokenChars.LinkedAlias */:\n                if (context.braceNest > 0) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                }\n                token = readTokenInLinked(scnr, context) || getEndToken(context);\n                context.braceNest = 0;\n                return token;\n            default: {\n                let validNamedIdentifier = true;\n                let validListIdentifier = true;\n                let validLiteral = true;\n                if (isPluralStart(scnr)) {\n                    if (context.braceNest > 0) {\n                        emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    }\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (context.braceNest > 0 &&\n                    (context.currentType === 4 /* TokenTypes.Named */ ||\n                        context.currentType === 5 /* TokenTypes.List */ ||\n                        context.currentType === 6 /* TokenTypes.Literal */)) {\n                    emitError(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, currentPosition(), 0);\n                    context.braceNest = 0;\n                    return readToken(scnr, context);\n                }\n                if ((validNamedIdentifier = isNamedIdentifierStart(scnr, context))) {\n                    token = getToken(context, 4 /* TokenTypes.Named */, readNamedIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validListIdentifier = isListIdentifierStart(scnr, context))) {\n                    token = getToken(context, 5 /* TokenTypes.List */, readListIdentifier(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if ((validLiteral = isLiteralStart(scnr, context))) {\n                    token = getToken(context, 6 /* TokenTypes.Literal */, readLiteral(scnr));\n                    skipSpaces(scnr);\n                    return token;\n                }\n                if (!validNamedIdentifier && !validListIdentifier && !validLiteral) {\n                    // TODO: we should be re-designed invalid cases, when we will extend message syntax near the future ...\n                    token = getToken(context, 12 /* TokenTypes.InvalidPlace */, readInvalidIdentifier(scnr));\n                    emitError(CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER, currentPosition(), 0, token.value);\n                    skipSpaces(scnr);\n                    return token;\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readTokenInLinked(scnr, context) {\n        const { currentType } = context;\n        let token = null;\n        const ch = scnr.currentChar();\n        if ((currentType === 7 /* TokenTypes.LinkedAlias */ ||\n            currentType === 8 /* TokenTypes.LinkedDot */ ||\n            currentType === 11 /* TokenTypes.LinkedModifier */ ||\n            currentType === 9 /* TokenTypes.LinkedDelimiter */) &&\n            (ch === CHAR_LF || ch === CHAR_SP)) {\n            emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n        }\n        switch (ch) {\n            case \"@\" /* TokenChars.LinkedAlias */:\n                scnr.next();\n                token = getToken(context, 7 /* TokenTypes.LinkedAlias */, \"@\" /* TokenChars.LinkedAlias */);\n                context.inLinked = true;\n                return token;\n            case \".\" /* TokenChars.LinkedDot */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 8 /* TokenTypes.LinkedDot */, \".\" /* TokenChars.LinkedDot */);\n            case \":\" /* TokenChars.LinkedDelimiter */:\n                skipSpaces(scnr);\n                scnr.next();\n                return getToken(context, 9 /* TokenTypes.LinkedDelimiter */, \":\" /* TokenChars.LinkedDelimiter */);\n            default:\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isLinkedDotStart(scnr, context) ||\n                    isLinkedDelimiterStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return readTokenInLinked(scnr, context);\n                }\n                if (isLinkedModifierStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    return getToken(context, 11 /* TokenTypes.LinkedModifier */, readLinkedModifier(scnr));\n                }\n                if (isLinkedReferStart(scnr, context)) {\n                    skipSpaces(scnr);\n                    if (ch === \"{\" /* TokenChars.BraceLeft */) {\n                        // scan the placeholder\n                        return readTokenInPlaceholder(scnr, context) || token;\n                    }\n                    else {\n                        return getToken(context, 10 /* TokenTypes.LinkedKey */, readLinkedRefer(scnr));\n                    }\n                }\n                if (currentType === 7 /* TokenTypes.LinkedAlias */) {\n                    emitError(CompileErrorCodes.INVALID_LINKED_FORMAT, currentPosition(), 0);\n                }\n                context.braceNest = 0;\n                context.inLinked = false;\n                return readToken(scnr, context);\n        }\n    }\n    // TODO: We need refactoring of token parsing ...\n    function readToken(scnr, context) {\n        let token = { type: 13 /* TokenTypes.EOF */ };\n        if (context.braceNest > 0) {\n            return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n        }\n        if (context.inLinked) {\n            return readTokenInLinked(scnr, context) || getEndToken(context);\n        }\n        const ch = scnr.currentChar();\n        switch (ch) {\n            case \"{\" /* TokenChars.BraceLeft */:\n                return readTokenInPlaceholder(scnr, context) || getEndToken(context);\n            case \"}\" /* TokenChars.BraceRight */:\n                emitError(CompileErrorCodes.UNBALANCED_CLOSING_BRACE, currentPosition(), 0);\n                scnr.next();\n                return getToken(context, 3 /* TokenTypes.BraceRight */, \"}\" /* TokenChars.BraceRight */);\n            case \"@\" /* TokenChars.LinkedAlias */:\n                return readTokenInLinked(scnr, context) || getEndToken(context);\n            default: {\n                if (isPluralStart(scnr)) {\n                    token = getToken(context, 1 /* TokenTypes.Pipe */, readPlural(scnr));\n                    // reset\n                    context.braceNest = 0;\n                    context.inLinked = false;\n                    return token;\n                }\n                if (isTextStart(scnr)) {\n                    return getToken(context, 0 /* TokenTypes.Text */, readText(scnr));\n                }\n                break;\n            }\n        }\n        return token;\n    }\n    function nextToken() {\n        const { currentType, offset, startLoc, endLoc } = _context;\n        _context.lastType = currentType;\n        _context.lastOffset = offset;\n        _context.lastStartLoc = startLoc;\n        _context.lastEndLoc = endLoc;\n        _context.offset = currentOffset();\n        _context.startLoc = currentPosition();\n        if (_scnr.currentChar() === EOF) {\n            return getToken(_context, 13 /* TokenTypes.EOF */);\n        }\n        return readToken(_scnr, _context);\n    }\n    return {\n        nextToken,\n        currentOffset,\n        currentPosition,\n        context\n    };\n}\n\nconst ERROR_DOMAIN$2 = 'parser';\n// Backslash backslash, backslash quote, uHHHH, UHHHHHH.\nconst KNOWN_ESCAPES = /(?:\\\\\\\\|\\\\'|\\\\u([0-9a-fA-F]{4})|\\\\U([0-9a-fA-F]{6}))/g;\nfunction fromEscapeSequence(match, codePoint4, codePoint6) {\n    switch (match) {\n        case `\\\\\\\\`:\n            return `\\\\`;\n        // eslint-disable-next-line no-useless-escape\n        case `\\\\\\'`:\n            // eslint-disable-next-line no-useless-escape\n            return `\\'`;\n        default: {\n            const codePoint = parseInt(codePoint4 || codePoint6, 16);\n            if (codePoint <= 0xd7ff || codePoint >= 0xe000) {\n                return String.fromCodePoint(codePoint);\n            }\n            // invalid ...\n            // Replace them with U+FFFD REPLACEMENT CHARACTER.\n            return '�';\n        }\n    }\n}\nfunction createParser(options = {}) {\n    const location = options.location !== false;\n    const { onError } = options;\n    function emitError(tokenzer, code, start, offset, ...args) {\n        const end = tokenzer.currentPosition();\n        end.offset += offset;\n        end.column += offset;\n        if (onError) {\n            const loc = location ? createLocation(start, end) : null;\n            const err = createCompileError(code, loc, {\n                domain: ERROR_DOMAIN$2,\n                args\n            });\n            onError(err);\n        }\n    }\n    function startNode(type, offset, loc) {\n        const node = { type };\n        if (location) {\n            node.start = offset;\n            node.end = offset;\n            node.loc = { start: loc, end: loc };\n        }\n        return node;\n    }\n    function endNode(node, offset, pos, type) {\n        if (location) {\n            node.end = offset;\n            if (node.loc) {\n                node.loc.end = pos;\n            }\n        }\n    }\n    function parseText(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(3 /* NodeTypes.Text */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseList(tokenizer, index) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(5 /* NodeTypes.List */, offset, loc);\n        node.index = parseInt(index, 10);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseNamed(tokenizer, key) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(4 /* NodeTypes.Named */, offset, loc);\n        node.key = key;\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLiteral(tokenizer, value) {\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get brace left loc\n        const node = startNode(9 /* NodeTypes.Literal */, offset, loc);\n        node.value = value.replace(KNOWN_ESCAPES, fromEscapeSequence);\n        tokenizer.nextToken(); // skip brach right\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinkedModifier(tokenizer) {\n        const token = tokenizer.nextToken();\n        const context = tokenizer.context();\n        const { lastOffset: offset, lastStartLoc: loc } = context; // get linked dot loc\n        const node = startNode(8 /* NodeTypes.LinkedModifier */, offset, loc);\n        if (token.type !== 11 /* TokenTypes.LinkedModifier */) {\n            // empty modifier\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER, context.lastStartLoc, 0);\n            node.value = '';\n            endNode(node, offset, loc);\n            return {\n                nextConsumeToken: token,\n                node\n            };\n        }\n        // check token\n        if (token.value == null) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        node.value = token.value || '';\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node\n        };\n    }\n    function parseLinkedKey(tokenizer, value) {\n        const context = tokenizer.context();\n        const node = startNode(7 /* NodeTypes.LinkedKey */, context.offset, context.startLoc);\n        node.value = value;\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseLinked(tokenizer) {\n        const context = tokenizer.context();\n        const linkedNode = startNode(6 /* NodeTypes.Linked */, context.offset, context.startLoc);\n        let token = tokenizer.nextToken();\n        if (token.type === 8 /* TokenTypes.LinkedDot */) {\n            const parsed = parseLinkedModifier(tokenizer);\n            linkedNode.modifier = parsed.node;\n            token = parsed.nextConsumeToken || tokenizer.nextToken();\n        }\n        // asset check token\n        if (token.type !== 9 /* TokenTypes.LinkedDelimiter */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n        }\n        token = tokenizer.nextToken();\n        // skip brace left\n        if (token.type === 2 /* TokenTypes.BraceLeft */) {\n            token = tokenizer.nextToken();\n        }\n        switch (token.type) {\n            case 10 /* TokenTypes.LinkedKey */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLinkedKey(tokenizer, token.value || '');\n                break;\n            case 4 /* TokenTypes.Named */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseNamed(tokenizer, token.value || '');\n                break;\n            case 5 /* TokenTypes.List */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseList(tokenizer, token.value || '');\n                break;\n            case 6 /* TokenTypes.Literal */:\n                if (token.value == null) {\n                    emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                }\n                linkedNode.key = parseLiteral(tokenizer, token.value || '');\n                break;\n            default: {\n                // empty key\n                emitError(tokenizer, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY, context.lastStartLoc, 0);\n                const nextContext = tokenizer.context();\n                const emptyLinkedKeyNode = startNode(7 /* NodeTypes.LinkedKey */, nextContext.offset, nextContext.startLoc);\n                emptyLinkedKeyNode.value = '';\n                endNode(emptyLinkedKeyNode, nextContext.offset, nextContext.startLoc);\n                linkedNode.key = emptyLinkedKeyNode;\n                endNode(linkedNode, nextContext.offset, nextContext.startLoc);\n                return {\n                    nextConsumeToken: token,\n                    node: linkedNode\n                };\n            }\n        }\n        endNode(linkedNode, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return {\n            node: linkedNode\n        };\n    }\n    function parseMessage(tokenizer) {\n        const context = tokenizer.context();\n        const startOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? tokenizer.currentOffset()\n            : context.offset;\n        const startLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.endLoc\n            : context.startLoc;\n        const node = startNode(2 /* NodeTypes.Message */, startOffset, startLoc);\n        node.items = [];\n        let nextToken = null;\n        do {\n            const token = nextToken || tokenizer.nextToken();\n            nextToken = null;\n            switch (token.type) {\n                case 0 /* TokenTypes.Text */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseText(tokenizer, token.value || ''));\n                    break;\n                case 5 /* TokenTypes.List */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseList(tokenizer, token.value || ''));\n                    break;\n                case 4 /* TokenTypes.Named */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseNamed(tokenizer, token.value || ''));\n                    break;\n                case 6 /* TokenTypes.Literal */:\n                    if (token.value == null) {\n                        emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, getTokenCaption(token));\n                    }\n                    node.items.push(parseLiteral(tokenizer, token.value || ''));\n                    break;\n                case 7 /* TokenTypes.LinkedAlias */: {\n                    const parsed = parseLinked(tokenizer);\n                    node.items.push(parsed.node);\n                    nextToken = parsed.nextConsumeToken || null;\n                    break;\n                }\n            }\n        } while (context.currentType !== 13 /* TokenTypes.EOF */ &&\n            context.currentType !== 1 /* TokenTypes.Pipe */);\n        // adjust message node loc\n        const endOffset = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastOffset\n            : tokenizer.currentOffset();\n        const endLoc = context.currentType === 1 /* TokenTypes.Pipe */\n            ? context.lastEndLoc\n            : tokenizer.currentPosition();\n        endNode(node, endOffset, endLoc);\n        return node;\n    }\n    function parsePlural(tokenizer, offset, loc, msgNode) {\n        const context = tokenizer.context();\n        let hasEmptyMessage = msgNode.items.length === 0;\n        const node = startNode(1 /* NodeTypes.Plural */, offset, loc);\n        node.cases = [];\n        node.cases.push(msgNode);\n        do {\n            const msg = parseMessage(tokenizer);\n            if (!hasEmptyMessage) {\n                hasEmptyMessage = msg.items.length === 0;\n            }\n            node.cases.push(msg);\n        } while (context.currentType !== 13 /* TokenTypes.EOF */);\n        if (hasEmptyMessage) {\n            emitError(tokenizer, CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL, loc, 0);\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    function parseResource(tokenizer) {\n        const context = tokenizer.context();\n        const { offset, startLoc } = context;\n        const msgNode = parseMessage(tokenizer);\n        if (context.currentType === 13 /* TokenTypes.EOF */) {\n            return msgNode;\n        }\n        else {\n            return parsePlural(tokenizer, offset, startLoc, msgNode);\n        }\n    }\n    function parse(source) {\n        const tokenizer = createTokenizer(source, assign({}, options));\n        const context = tokenizer.context();\n        const node = startNode(0 /* NodeTypes.Resource */, context.offset, context.startLoc);\n        if (location && node.loc) {\n            node.loc.source = source;\n        }\n        node.body = parseResource(tokenizer);\n        if (options.onCacheKey) {\n            node.cacheKey = options.onCacheKey(source);\n        }\n        // assert whether achieved to EOF\n        if (context.currentType !== 13 /* TokenTypes.EOF */) {\n            emitError(tokenizer, CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS, context.lastStartLoc, 0, source[context.offset] || '');\n        }\n        endNode(node, tokenizer.currentOffset(), tokenizer.currentPosition());\n        return node;\n    }\n    return { parse };\n}\nfunction getTokenCaption(token) {\n    if (token.type === 13 /* TokenTypes.EOF */) {\n        return 'EOF';\n    }\n    const name = (token.value || '').replace(/\\r?\\n/gu, '\\\\n');\n    return name.length > 10 ? name.slice(0, 9) + '…' : name;\n}\n\nfunction createTransformer(ast, options = {} // eslint-disable-line\n) {\n    const _context = {\n        ast,\n        helpers: new Set()\n    };\n    const context = () => _context;\n    const helper = (name) => {\n        _context.helpers.add(name);\n        return name;\n    };\n    return { context, helper };\n}\nfunction traverseNodes(nodes, transformer) {\n    for (let i = 0; i < nodes.length; i++) {\n        traverseNode(nodes[i], transformer);\n    }\n}\nfunction traverseNode(node, transformer) {\n    // TODO: if we need pre-hook of transform, should be implemented to here\n    switch (node.type) {\n        case 1 /* NodeTypes.Plural */:\n            traverseNodes(node.cases, transformer);\n            transformer.helper(\"plural\" /* HelperNameMap.PLURAL */);\n            break;\n        case 2 /* NodeTypes.Message */:\n            traverseNodes(node.items, transformer);\n            break;\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            traverseNode(linked.key, transformer);\n            transformer.helper(\"linked\" /* HelperNameMap.LINKED */);\n            transformer.helper(\"type\" /* HelperNameMap.TYPE */);\n            break;\n        }\n        case 5 /* NodeTypes.List */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"list\" /* HelperNameMap.LIST */);\n            break;\n        case 4 /* NodeTypes.Named */:\n            transformer.helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */);\n            transformer.helper(\"named\" /* HelperNameMap.NAMED */);\n            break;\n    }\n    // TODO: if we need post-hook of transform, should be implemented to here\n}\n// transform AST\nfunction transform(ast, options = {} // eslint-disable-line\n) {\n    const transformer = createTransformer(ast);\n    transformer.helper(\"normalize\" /* HelperNameMap.NORMALIZE */);\n    // traverse\n    ast.body && traverseNode(ast.body, transformer);\n    // set meta information\n    const context = transformer.context();\n    ast.helpers = Array.from(context.helpers);\n}\n\nfunction optimize(ast) {\n    const body = ast.body;\n    if (body.type === 2 /* NodeTypes.Message */) {\n        optimizeMessageNode(body);\n    }\n    else {\n        body.cases.forEach(c => optimizeMessageNode(c));\n    }\n    return ast;\n}\nfunction optimizeMessageNode(message) {\n    if (message.items.length === 1) {\n        const item = message.items[0];\n        if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n            message.static = item.value;\n            delete item.value; // optimization for size\n        }\n    }\n    else {\n        const values = [];\n        for (let i = 0; i < message.items.length; i++) {\n            const item = message.items[i];\n            if (!(item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */)) {\n                break;\n            }\n            if (item.value == null) {\n                break;\n            }\n            values.push(item.value);\n        }\n        if (values.length === message.items.length) {\n            message.static = join(values);\n            for (let i = 0; i < message.items.length; i++) {\n                const item = message.items[i];\n                if (item.type === 3 /* NodeTypes.Text */ || item.type === 9 /* NodeTypes.Literal */) {\n                    delete item.value; // optimization for size\n                }\n            }\n        }\n    }\n}\n\nconst ERROR_DOMAIN$1 = 'minifier';\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction minify(node) {\n    node.t = node.type;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */: {\n            const resource = node;\n            minify(resource.body);\n            resource.b = resource.body;\n            delete resource.body;\n            break;\n        }\n        case 1 /* NodeTypes.Plural */: {\n            const plural = node;\n            const cases = plural.cases;\n            for (let i = 0; i < cases.length; i++) {\n                minify(cases[i]);\n            }\n            plural.c = cases;\n            delete plural.cases;\n            break;\n        }\n        case 2 /* NodeTypes.Message */: {\n            const message = node;\n            const items = message.items;\n            for (let i = 0; i < items.length; i++) {\n                minify(items[i]);\n            }\n            message.i = items;\n            delete message.items;\n            if (message.static) {\n                message.s = message.static;\n                delete message.static;\n            }\n            break;\n        }\n        case 3 /* NodeTypes.Text */:\n        case 9 /* NodeTypes.Literal */:\n        case 8 /* NodeTypes.LinkedModifier */:\n        case 7 /* NodeTypes.LinkedKey */: {\n            const valueNode = node;\n            if (valueNode.value) {\n                valueNode.v = valueNode.value;\n                delete valueNode.value;\n            }\n            break;\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            minify(linked.key);\n            linked.k = linked.key;\n            delete linked.key;\n            if (linked.modifier) {\n                minify(linked.modifier);\n                linked.m = linked.modifier;\n                delete linked.modifier;\n            }\n            break;\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            list.i = list.index;\n            delete list.index;\n            break;\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            named.k = named.key;\n            delete named.key;\n            break;\n        }\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_MINIFIER_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN$1,\n                    args: [node.type]\n                });\n            }\n    }\n    delete node.type;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference types=\"source-map-js\" />\nconst ERROR_DOMAIN = 'parser';\nfunction createCodeGenerator(ast, options) {\n    const { sourceMap, filename, breakLineCode, needIndent: _needIndent } = options;\n    const location = options.location !== false;\n    const _context = {\n        filename,\n        code: '',\n        column: 1,\n        line: 1,\n        offset: 0,\n        map: undefined,\n        breakLineCode,\n        needIndent: _needIndent,\n        indentLevel: 0\n    };\n    if (location && ast.loc) {\n        _context.source = ast.loc.source;\n    }\n    const context = () => _context;\n    function push(code, node) {\n        _context.code += code;\n    }\n    function _newline(n, withBreakLine = true) {\n        const _breakLineCode = withBreakLine ? breakLineCode : '';\n        push(_needIndent ? _breakLineCode + `  `.repeat(n) : _breakLineCode);\n    }\n    function indent(withNewLine = true) {\n        const level = ++_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function deindent(withNewLine = true) {\n        const level = --_context.indentLevel;\n        withNewLine && _newline(level);\n    }\n    function newline() {\n        _newline(_context.indentLevel);\n    }\n    const helper = (key) => `_${key}`;\n    const needIndent = () => _context.needIndent;\n    return {\n        context,\n        push,\n        indent,\n        deindent,\n        newline,\n        helper,\n        needIndent\n    };\n}\nfunction generateLinkedNode(generator, node) {\n    const { helper } = generator;\n    generator.push(`${helper(\"linked\" /* HelperNameMap.LINKED */)}(`);\n    generateNode(generator, node.key);\n    if (node.modifier) {\n        generator.push(`, `);\n        generateNode(generator, node.modifier);\n        generator.push(`, _type`);\n    }\n    else {\n        generator.push(`, undefined, _type`);\n    }\n    generator.push(`)`);\n}\nfunction generateMessageNode(generator, node) {\n    const { helper, needIndent } = generator;\n    generator.push(`${helper(\"normalize\" /* HelperNameMap.NORMALIZE */)}([`);\n    generator.indent(needIndent());\n    const length = node.items.length;\n    for (let i = 0; i < length; i++) {\n        generateNode(generator, node.items[i]);\n        if (i === length - 1) {\n            break;\n        }\n        generator.push(', ');\n    }\n    generator.deindent(needIndent());\n    generator.push('])');\n}\nfunction generatePluralNode(generator, node) {\n    const { helper, needIndent } = generator;\n    if (node.cases.length > 1) {\n        generator.push(`${helper(\"plural\" /* HelperNameMap.PLURAL */)}([`);\n        generator.indent(needIndent());\n        const length = node.cases.length;\n        for (let i = 0; i < length; i++) {\n            generateNode(generator, node.cases[i]);\n            if (i === length - 1) {\n                break;\n            }\n            generator.push(', ');\n        }\n        generator.deindent(needIndent());\n        generator.push(`])`);\n    }\n}\nfunction generateResource(generator, node) {\n    if (node.body) {\n        generateNode(generator, node.body);\n    }\n    else {\n        generator.push('null');\n    }\n}\nfunction generateNode(generator, node) {\n    const { helper } = generator;\n    switch (node.type) {\n        case 0 /* NodeTypes.Resource */:\n            generateResource(generator, node);\n            break;\n        case 1 /* NodeTypes.Plural */:\n            generatePluralNode(generator, node);\n            break;\n        case 2 /* NodeTypes.Message */:\n            generateMessageNode(generator, node);\n            break;\n        case 6 /* NodeTypes.Linked */:\n            generateLinkedNode(generator, node);\n            break;\n        case 8 /* NodeTypes.LinkedModifier */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 7 /* NodeTypes.LinkedKey */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 5 /* NodeTypes.List */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"list\" /* HelperNameMap.LIST */)}(${node.index}))`, node);\n            break;\n        case 4 /* NodeTypes.Named */:\n            generator.push(`${helper(\"interpolate\" /* HelperNameMap.INTERPOLATE */)}(${helper(\"named\" /* HelperNameMap.NAMED */)}(${JSON.stringify(node.key)}))`, node);\n            break;\n        case 9 /* NodeTypes.Literal */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        case 3 /* NodeTypes.Text */:\n            generator.push(JSON.stringify(node.value), node);\n            break;\n        default:\n            if ((process.env.NODE_ENV !== 'production')) {\n                throw createCompileError(CompileErrorCodes.UNHANDLED_CODEGEN_NODE_TYPE, null, {\n                    domain: ERROR_DOMAIN,\n                    args: [node.type]\n                });\n            }\n    }\n}\n// generate code from AST\nconst generate = (ast, options = {}) => {\n    const mode = isString(options.mode) ? options.mode : 'normal';\n    const filename = isString(options.filename)\n        ? options.filename\n        : 'message.intl';\n    const sourceMap = !!options.sourceMap;\n    // prettier-ignore\n    const breakLineCode = options.breakLineCode != null\n        ? options.breakLineCode\n        : mode === 'arrow'\n            ? ';'\n            : '\\n';\n    const needIndent = options.needIndent ? options.needIndent : mode !== 'arrow';\n    const helpers = ast.helpers || [];\n    const generator = createCodeGenerator(ast, {\n        mode,\n        filename,\n        sourceMap,\n        breakLineCode,\n        needIndent\n    });\n    generator.push(mode === 'normal' ? `function __msg__ (ctx) {` : `(ctx) => {`);\n    generator.indent(needIndent);\n    if (helpers.length > 0) {\n        generator.push(`const { ${join(helpers.map(s => `${s}: _${s}`), ', ')} } = ctx`);\n        generator.newline();\n    }\n    generator.push(`return `);\n    generateNode(generator, ast);\n    generator.deindent(needIndent);\n    generator.push(`}`);\n    delete ast.helpers;\n    const { code, map } = generator.context();\n    return {\n        ast,\n        code,\n        map: map ? map.toJSON() : undefined // eslint-disable-line @typescript-eslint/no-explicit-any\n    };\n};\n\nfunction baseCompile(source, options = {}) {\n    const assignedOptions = assign({}, options);\n    const jit = !!assignedOptions.jit;\n    const enalbeMinify = !!assignedOptions.minify;\n    const enambeOptimize = assignedOptions.optimize == null ? true : assignedOptions.optimize;\n    // parse source codes\n    const parser = createParser(assignedOptions);\n    const ast = parser.parse(source);\n    if (!jit) {\n        // transform ASTs\n        transform(ast, assignedOptions);\n        // generate javascript codes\n        return generate(ast, assignedOptions);\n    }\n    else {\n        // optimize ASTs\n        enambeOptimize && optimize(ast);\n        // minimize ASTs\n        enalbeMinify && minify(ast);\n        // In JIT mode, no ast transform, no code generation.\n        return { ast, code: '' };\n    }\n}\n\nexport { COMPILE_ERROR_CODES_EXTEND_POINT, CompileErrorCodes, ERROR_DOMAIN$2 as ERROR_DOMAIN, LOCATION_STUB, baseCompile, createCompileError, createLocation, createParser, createPosition, defaultOnError, detectHtmlTag, errorMessages };\n","/*!\n  * core-base v11.0.1\n  * (c) 2024 kazuya kawaguchi\n  * Released under the MIT License.\n  */\nimport { getGlobalThis, hasOwn, isNumber, create, isObject, isString, isBoolean, warn, format as format$1, isFunction, isPromise, isArray, isPlainObject, assign, isRegExp, warnOnce, isEmptyObject, isDate, join, toDisplayString, escapeHtml, inBrowser, mark, measure, generateCodeFrame, generateFormatCacheKey } from '@intlify/shared';\nimport { detectHtmlTag, defaultOnError, baseCompile as baseCompile$1, COMPILE_ERROR_CODES_EXTEND_POINT, createCompileError } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\n * This is only called in esm-bundler builds.\n * istanbul-ignore-next\n */\nfunction initFeatureFlags() {\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n    }\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n    }\n}\n\nfunction format(ast) {\n    const msg = (ctx) => formatParts(ctx, ast);\n    return msg;\n}\nfunction formatParts(ctx, ast) {\n    const body = resolveBody(ast);\n    if (body == null) {\n        throw createUnhandleNodeError(0 /* NodeTypes.Resource */);\n    }\n    const type = resolveType(body);\n    if (type === 1 /* NodeTypes.Plural */) {\n        const plural = body;\n        const cases = resolveCases(plural);\n        return ctx.plural(cases.reduce((messages, c) => [\n            ...messages,\n            formatMessageParts(ctx, c)\n        ], []));\n    }\n    else {\n        return formatMessageParts(ctx, body);\n    }\n}\nconst PROPS_BODY = ['b', 'body'];\nfunction resolveBody(node) {\n    return resolveProps(node, PROPS_BODY);\n}\nconst PROPS_CASES = ['c', 'cases'];\nfunction resolveCases(node) {\n    return resolveProps(node, PROPS_CASES, []);\n}\nfunction formatMessageParts(ctx, node) {\n    const static_ = resolveStatic(node);\n    if (static_ != null) {\n        return ctx.type === 'text'\n            ? static_\n            : ctx.normalize([static_]);\n    }\n    else {\n        const messages = resolveItems(node).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n        return ctx.normalize(messages);\n    }\n}\nconst PROPS_STATIC = ['s', 'static'];\nfunction resolveStatic(node) {\n    return resolveProps(node, PROPS_STATIC);\n}\nconst PROPS_ITEMS = ['i', 'items'];\nfunction resolveItems(node) {\n    return resolveProps(node, PROPS_ITEMS, []);\n}\nfunction formatMessagePart(ctx, node) {\n    const type = resolveType(node);\n    switch (type) {\n        case 3 /* NodeTypes.Text */: {\n            return resolveValue$1(node, type);\n        }\n        case 9 /* NodeTypes.Literal */: {\n            return resolveValue$1(node, type);\n        }\n        case 4 /* NodeTypes.Named */: {\n            const named = node;\n            if (hasOwn(named, 'k') && named.k) {\n                return ctx.interpolate(ctx.named(named.k));\n            }\n            if (hasOwn(named, 'key') && named.key) {\n                return ctx.interpolate(ctx.named(named.key));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 5 /* NodeTypes.List */: {\n            const list = node;\n            if (hasOwn(list, 'i') && isNumber(list.i)) {\n                return ctx.interpolate(ctx.list(list.i));\n            }\n            if (hasOwn(list, 'index') && isNumber(list.index)) {\n                return ctx.interpolate(ctx.list(list.index));\n            }\n            throw createUnhandleNodeError(type);\n        }\n        case 6 /* NodeTypes.Linked */: {\n            const linked = node;\n            const modifier = resolveLinkedModifier(linked);\n            const key = resolveLinkedKey(linked);\n            return ctx.linked(formatMessagePart(ctx, key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n        }\n        case 7 /* NodeTypes.LinkedKey */: {\n            return resolveValue$1(node, type);\n        }\n        case 8 /* NodeTypes.LinkedModifier */: {\n            return resolveValue$1(node, type);\n        }\n        default:\n            throw new Error(`unhandled node on format message part: ${type}`);\n    }\n}\nconst PROPS_TYPE = ['t', 'type'];\nfunction resolveType(node) {\n    return resolveProps(node, PROPS_TYPE);\n}\nconst PROPS_VALUE = ['v', 'value'];\nfunction resolveValue$1(node, type) {\n    const resolved = resolveProps(node, PROPS_VALUE);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(type);\n    }\n}\nconst PROPS_MODIFIER = ['m', 'modifier'];\nfunction resolveLinkedModifier(node) {\n    return resolveProps(node, PROPS_MODIFIER);\n}\nconst PROPS_KEY = ['k', 'key'];\nfunction resolveLinkedKey(node) {\n    const resolved = resolveProps(node, PROPS_KEY);\n    if (resolved) {\n        return resolved;\n    }\n    else {\n        throw createUnhandleNodeError(6 /* NodeTypes.Linked */);\n    }\n}\nfunction resolveProps(node, props, defaultValue) {\n    for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (hasOwn(node, prop) && node[prop] != null) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return node[prop];\n        }\n    }\n    return defaultValue;\n}\nfunction createUnhandleNodeError(type) {\n    return new Error(`unhandled node type: ${type}`);\n}\n\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n    if (warnHtmlMessage && detectHtmlTag(source)) {\n        warn(format$1(WARN_MESSAGE, { source }));\n    }\n}\nconst defaultOnCacheKey = (message) => message;\nlet compileCache = create();\nfunction clearCompileCache() {\n    compileCache = create();\n}\nfunction isMessageAST(val) {\n    return (isObject(val) &&\n        resolveType(val) === 0 &&\n        (hasOwn(val, 'b') || hasOwn(val, 'body')));\n}\nfunction baseCompile(message, options = {}) {\n    // error detecting on compile\n    let detectError = false;\n    const onError = options.onError || defaultOnError;\n    options.onError = (err) => {\n        detectError = true;\n        onError(err);\n    };\n    // compile with mesasge-compiler\n    return { ...baseCompile$1(message, options), detectError };\n}\n/* #__NO_SIDE_EFFECTS__ */\nfunction compile(message, context) {\n    if ((!__INTLIFY_DROP_MESSAGE_COMPILER__) &&\n        isString(message)) {\n        // check HTML message\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\n            ? context.warnHtmlMessage\n            : true;\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\n        // check caches\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n        const cacheKey = onCacheKey(message);\n        const cached = compileCache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        // compile with JIT mode\n        const { ast, detectError } = baseCompile(message, {\n            ...context,\n            location: (process.env.NODE_ENV !== 'production'),\n            jit: true\n        });\n        // compose message function from AST\n        const msg = format(ast);\n        // if occurred compile error, don't cache\n        return !detectError\n            ? (compileCache[cacheKey] = msg)\n            : msg;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n            return (() => message);\n        }\n        // AST case (passed from bundler)\n        const cacheKey = message.cacheKey;\n        if (cacheKey) {\n            const cached = compileCache[cacheKey];\n            if (cached) {\n                return cached;\n            }\n            // compose message function from message (AST)\n            return (compileCache[cacheKey] =\n                format(message));\n        }\n        else {\n            return format(message);\n        }\n    }\n}\n\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n    devtools = hook;\n}\nfunction getDevToolsHook() {\n    return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n    // TODO: queue if devtools is undefined\n    devtools &&\n        devtools.emit('i18n:init', {\n            timestamp: Date.now(),\n            i18n,\n            version,\n            meta\n        });\n}\nconst translateDevTools = \n/* #__PURE__*/ createDevToolsHook('function:translate');\nfunction createDevToolsHook(hook) {\n    return (payloads) => devtools && devtools.emit(hook, payloads);\n}\n\nconst CoreErrorCodes = {\n    INVALID_ARGUMENT: COMPILE_ERROR_CODES_EXTEND_POINT, // 17\n    INVALID_DATE_ARGUMENT: 18,\n    INVALID_ISO_DATE_ARGUMENT: 19,\n    NOT_SUPPORT_NON_STRING_MESSAGE: 20,\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: 21,\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: 22,\n    NOT_SUPPORT_LOCALE_TYPE: 23\n};\nconst CORE_ERROR_CODES_EXTEND_POINT = 24;\nfunction createCoreError(code) {\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\n        'Make sure your Date represents a valid date.',\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n    return options.locale != null\n        ? resolveLocale(options.locale)\n        : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n    if (isString(locale)) {\n        return locale;\n    }\n    else {\n        if (isFunction(locale)) {\n            if (locale.resolvedOnce && _resolveLocale != null) {\n                return _resolveLocale;\n            }\n            else if (locale.constructor.name === 'Function') {\n                const resolve = locale();\n                if (isPromise(resolve)) {\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n                }\n                return (_resolveLocale = resolve);\n            }\n            else {\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n            }\n        }\n        else {\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n        }\n    }\n}\n/**\n * Fallback with simple implemenation\n *\n * @remarks\n * A fallback locale function implemented with a simple fallback algorithm.\n *\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithSimple(ctx, fallback, start) {\n    // prettier-ignore\n    return [...new Set([\n            start,\n            ...(isArray(fallback)\n                ? fallback\n                : isObject(fallback)\n                    ? Object.keys(fallback)\n                    : isString(fallback)\n                        ? [fallback]\n                        : [start])\n        ])];\n}\n/**\n * Fallback with locale chain\n *\n * @remarks\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\n *\n * @param ctx - A {@link CoreContext | context}\n * @param fallback - A {@link FallbackLocale | fallback locale}\n * @param start - A starting {@link Locale | locale}\n *\n * @returns Fallback locales\n *\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\n *\n * @VueI18nGeneral\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n    const context = ctx;\n    if (!context.__localeChainCache) {\n        context.__localeChainCache = new Map();\n    }\n    let chain = context.__localeChainCache.get(startLocale);\n    if (!chain) {\n        chain = [];\n        // first block defined by start\n        let block = [start];\n        // while any intervening block found\n        while (isArray(block)) {\n            block = appendBlockToChain(chain, block, fallback);\n        }\n        // prettier-ignore\n        // last block defined by default\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\n            ? fallback\n            : fallback['default']\n                ? fallback['default']\n                : null;\n        // convert defaults to array\n        block = isString(defaults) ? [defaults] : defaults;\n        if (isArray(block)) {\n            appendBlockToChain(chain, block, false);\n        }\n        context.__localeChainCache.set(startLocale, chain);\n    }\n    return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n    let follow = true;\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\n        const locale = block[i];\n        if (isString(locale)) {\n            follow = appendLocaleToChain(chain, block[i], blocks);\n        }\n    }\n    return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n    let follow;\n    const tokens = locale.split('-');\n    do {\n        const target = tokens.join('-');\n        follow = appendItemToChain(chain, target, blocks);\n        tokens.splice(-1, 1);\n    } while (tokens.length && follow === true);\n    return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n    let follow = false;\n    if (!chain.includes(target)) {\n        follow = true;\n        if (target) {\n            follow = target[target.length - 1] !== '!';\n            const locale = target.replace(/!/g, '');\n            chain.push(locale);\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n            ) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                follow = blocks[locale];\n            }\n        }\n    }\n    return follow;\n}\n\nconst pathStateMachine = [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\n        4 /* States.IN_SUB_PATH */,\n        2 /* Actions.INC_SUB_PATH_DEPTH */\n    ],\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\n * Check if an expression is a literal value.\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n    return literalValueRE.test(exp);\n}\n/**\n * Strip quotes from a string\n */\nfunction stripQuotes(str) {\n    const a = str.charCodeAt(0);\n    const b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\n * Determine the type of a character in a keypath.\n */\nfunction getPathCharType(ch) {\n    if (ch === undefined || ch === null) {\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\n    }\n    const code = ch.charCodeAt(0);\n    switch (code) {\n        case 0x5b: // [\n        case 0x5d: // ]\n        case 0x2e: // .\n        case 0x22: // \"\n        case 0x27: // '\n            return ch;\n        case 0x5f: // _\n        case 0x24: // $\n        case 0x2d: // -\n            return \"i\" /* PathCharTypes.IDENT */;\n        case 0x09: // Tab (HT)\n        case 0x0a: // Newline (LF)\n        case 0x0d: // Return (CR)\n        case 0xa0: // No-break space (NBSP)\n        case 0xfeff: // Byte Order Mark (BOM)\n        case 0x2028: // Line Separator (LS)\n        case 0x2029: // Paragraph Separator (PS)\n            return \"w\" /* PathCharTypes.WORKSPACE */;\n    }\n    return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n */\nfunction formatSubPath(path) {\n    const trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n        return false;\n    }\n    return isLiteral(trimmed)\n        ? stripQuotes(trimmed)\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\n * Parse a string path into an array of segments\n */\nfunction parse(path) {\n    const keys = [];\n    let index = -1;\n    let mode = 0 /* States.BEFORE_PATH */;\n    let subPathDepth = 0;\n    let c;\n    let key; // eslint-disable-line\n    let newChar;\n    let type;\n    let transition;\n    let action;\n    let typeMap;\n    const actions = [];\n    actions[0 /* Actions.APPEND */] = () => {\n        if (key === undefined) {\n            key = newChar;\n        }\n        else {\n            key += newChar;\n        }\n    };\n    actions[1 /* Actions.PUSH */] = () => {\n        if (key !== undefined) {\n            keys.push(key);\n            key = undefined;\n        }\n    };\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n        actions[0 /* Actions.APPEND */]();\n        subPathDepth++;\n    };\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n        if (subPathDepth > 0) {\n            subPathDepth--;\n            mode = 4 /* States.IN_SUB_PATH */;\n            actions[0 /* Actions.APPEND */]();\n        }\n        else {\n            subPathDepth = 0;\n            if (key === undefined) {\n                return false;\n            }\n            key = formatSubPath(key);\n            if (key === false) {\n                return false;\n            }\n            else {\n                actions[1 /* Actions.PUSH */]();\n            }\n        }\n    };\n    function maybeUnescapeQuote() {\n        const nextChar = path[index + 1];\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\n            index++;\n            newChar = '\\\\' + nextChar;\n            actions[0 /* Actions.APPEND */]();\n            return true;\n        }\n    }\n    while (mode !== null) {\n        index++;\n        c = path[index];\n        if (c === '\\\\' && maybeUnescapeQuote()) {\n            continue;\n        }\n        type = getPathCharType(c);\n        typeMap = pathStateMachine[mode];\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n        // check parse error\n        if (transition === 8 /* States.ERROR */) {\n            return;\n        }\n        mode = transition[0];\n        if (transition[1] !== undefined) {\n            action = actions[transition[1]];\n            if (action) {\n                newChar = c;\n                if (action() === false) {\n                    return;\n                }\n            }\n        }\n        // check parse finish\n        if (mode === 7 /* States.AFTER_PATH */) {\n            return keys;\n        }\n    }\n}\n// path token cache\nconst cache = new Map();\n/**\n * key-value message resolver\n *\n * @remarks\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveWithKeyValue(obj, path) {\n    return isObject(obj) ? obj[path] : null;\n}\n/**\n * message resolver\n *\n * @remarks\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\n *\n * @param obj - A target object to be resolved with path\n * @param path - A {@link Path | path} to resolve the value of message\n *\n * @returns A resolved {@link PathValue | path value}\n *\n * @VueI18nGeneral\n */\nfunction resolveValue(obj, path) {\n    // check object\n    if (!isObject(obj)) {\n        return null;\n    }\n    // parse path\n    let hit = cache.get(path);\n    if (!hit) {\n        hit = parse(path);\n        if (hit) {\n            cache.set(path, hit);\n        }\n    }\n    // check hit\n    if (!hit) {\n        return null;\n    }\n    // resolve path value\n    const len = hit.length;\n    let last = obj;\n    let i = 0;\n    while (i < len) {\n        const val = last[hit[i]];\n        if (val === undefined) {\n            return null;\n        }\n        if (isFunction(last)) {\n            return null;\n        }\n        last = val;\n        i++;\n    }\n    return last;\n}\n\nconst CoreWarnCodes = {\n    NOT_FOUND_KEY: 1,\n    FALLBACK_TO_TRANSLATE: 2,\n    CANNOT_FORMAT_NUMBER: 3,\n    FALLBACK_TO_NUMBER_FORMAT: 4,\n    CANNOT_FORMAT_DATE: 5,\n    FALLBACK_TO_DATE_FORMAT: 6,\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: 7\n};\nconst CORE_WARN_CODES_EXTEND_POINT = 8;\n/** @internal */\nconst warnMessages = {\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n    return format$1(warnMessages[code], ...args);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Intlify core-base version\n * @internal\n */\nconst VERSION = '11.0.1';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n    return {\n        upper: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toUpperCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toUpperCase()\n                    : val;\n        },\n        lower: (val, type) => {\n            // prettier-ignore\n            return type === 'text' && isString(val)\n                ? val.toLowerCase()\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? val.children.toLowerCase()\n                    : val;\n        },\n        capitalize: (val, type) => {\n            // prettier-ignore\n            return (type === 'text' && isString(val)\n                ? capitalize(val)\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\n                    ? capitalize(val.children)\n                    : val);\n        }\n    };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n    _compiler = compiler;\n}\nlet _resolver;\n/**\n * Register the message resolver\n *\n * @param resolver - A {@link MessageResolver} function\n *\n * @VueI18nGeneral\n */\nfunction registerMessageResolver(resolver) {\n    _resolver = resolver;\n}\nlet _fallbacker;\n/**\n * Register the locale fallbacker\n *\n * @param fallbacker - A {@link LocaleFallbacker} function\n *\n * @VueI18nGeneral\n */\nfunction registerLocaleFallbacker(fallbacker) {\n    _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = (meta) => {\n    _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = (context) => {\n    _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n    // setup options\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n    const version = isString(options.version) ? options.version : VERSION;\n    const locale = isString(options.locale) || isFunction(options.locale)\n        ? options.locale\n        : DEFAULT_LOCALE;\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n    const fallbackLocale = isArray(options.fallbackLocale) ||\n        isPlainObject(options.fallbackLocale) ||\n        isString(options.fallbackLocale) ||\n        options.fallbackLocale === false\n        ? options.fallbackLocale\n        : _locale;\n    const messages = isPlainObject(options.messages)\n        ? options.messages\n        : createResources(_locale);\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\n            ? options.datetimeFormats\n            : createResources(_locale)\n        ;\n    const numberFormats = isPlainObject(options.numberFormats)\n            ? options.numberFormats\n            : createResources(_locale)\n        ;\n    const modifiers = assign(create(), options.modifiers, getDefaultLinkedModifiers());\n    const pluralRules = options.pluralRules || create();\n    const missing = isFunction(options.missing) ? options.missing : null;\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\n        ? options.missingWarn\n        : true;\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\n        ? options.fallbackWarn\n        : true;\n    const fallbackFormat = !!options.fallbackFormat;\n    const unresolving = !!options.unresolving;\n    const postTranslation = isFunction(options.postTranslation)\n        ? options.postTranslation\n        : null;\n    const processor = isPlainObject(options.processor) ? options.processor : null;\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\n        ? options.warnHtmlMessage\n        : true;\n    const escapeParameter = !!options.escapeParameter;\n    const messageCompiler = isFunction(options.messageCompiler)\n        ? options.messageCompiler\n        : _compiler;\n    if ((process.env.NODE_ENV !== 'production') &&\n        !false &&\n        !false &&\n        isFunction(options.messageCompiler)) {\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n    }\n    const messageResolver = isFunction(options.messageResolver)\n        ? options.messageResolver\n        : _resolver || resolveWithKeyValue;\n    const localeFallbacker = isFunction(options.localeFallbacker)\n        ? options.localeFallbacker\n        : _fallbacker || fallbackWithSimple;\n    const fallbackContext = isObject(options.fallbackContext)\n        ? options.fallbackContext\n        : undefined;\n    // setup internal options\n    const internalOptions = options;\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\n            ? internalOptions.__datetimeFormatters\n            : new Map()\n        ;\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\n            ? internalOptions.__numberFormatters\n            : new Map()\n        ;\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n    _cid++;\n    const context = {\n        version,\n        cid: _cid,\n        locale,\n        fallbackLocale,\n        messages,\n        modifiers,\n        pluralRules,\n        missing,\n        missingWarn,\n        fallbackWarn,\n        fallbackFormat,\n        unresolving,\n        postTranslation,\n        processor,\n        warnHtmlMessage,\n        escapeParameter,\n        messageCompiler,\n        messageResolver,\n        localeFallbacker,\n        fallbackContext,\n        onWarn,\n        __meta\n    };\n    {\n        context.datetimeFormats = datetimeFormats;\n        context.numberFormats = numberFormats;\n        context.__datetimeFormatters = __datetimeFormatters;\n        context.__numberFormatters = __numberFormatters;\n    }\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        context.__v_emitter =\n            internalOptions.__v_emitter != null\n                ? internalOptions.__v_emitter\n                : undefined;\n    }\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        initI18nDevTools(context, version, __meta);\n    }\n    return context;\n}\nconst createResources = (locale) => ({ [locale]: create() });\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n    return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n    const { missing, onWarn } = context;\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production')) {\n        const emitter = context.__v_emitter;\n        if (emitter) {\n            emitter.emit('missing', {\n                locale,\n                key,\n                type,\n                groupId: `${type}:${key}`\n            });\n        }\n    }\n    if (missing !== null) {\n        const ret = missing(context, locale, key, type);\n        return isString(ret) ? ret : key;\n    }\n    else {\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\n        }\n        return key;\n    }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n    const context = ctx;\n    context.__localeChainCache = new Map();\n    ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n    if (locale === compareLocale)\n        return false;\n    return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n    const index = locales.indexOf(targetLocale);\n    if (index === -1) {\n        return false;\n    }\n    for (let i = index + 1; i < locales.length; i++) {\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __datetimeFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let datetimeFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'datetime format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        datetimeFormat =\n            datetimeFormats[targetLocale] || {};\n        format = datetimeFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __datetimeFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n        __datetimeFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'formatMatcher',\n    'hour12',\n    'timeZone',\n    'dateStyle',\n    'timeStyle',\n    'calendar',\n    'dayPeriod',\n    'numberingSystem',\n    'hourCycle',\n    'fractionalSecondDigits'\n];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    let value;\n    if (isString(arg1)) {\n        // Only allow ISO strings - other date formats are often supported,\n        // but may cause different results in different browsers.\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n        if (!matches) {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n        // Some browsers can not parse the iso datetime separated by space,\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\n        const dateTime = matches[3]\n            ? matches[3].trim().startsWith('T')\n                ? `${matches[1].trim()}${matches[3].trim()}`\n                : `${matches[1].trim()}T${matches[3].trim()}`\n            : matches[1].trim();\n        value = new Date(dateTime);\n        try {\n            // This will fail if the date is not valid\n            value.toISOString();\n        }\n        catch {\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n        }\n    }\n    else if (isDate(arg1)) {\n        if (isNaN(arg1.getTime())) {\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n        }\n        value = arg1;\n    }\n    else if (isNumber(arg1)) {\n        value = arg1;\n    }\n    else {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__datetimeFormatters.has(id)) {\n            continue;\n        }\n        context.__datetimeFormatters.delete(id);\n    }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\n    const { __numberFormatters } = context;\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n        return MISSING_RESOLVE_VALUE;\n    }\n    const [key, value, options, overrides] = parseNumberArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const part = !!options.part;\n    const locale = getLocale(context, options);\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n    fallbackLocale, locale);\n    if (!isString(key) || key === '') {\n        return new Intl.NumberFormat(locale, overrides).format(value);\n    }\n    // resolve format\n    let numberFormat = {};\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'number format';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        numberFormat =\n            numberFormats[targetLocale] || {};\n        format = numberFormat[key];\n        if (isPlainObject(format))\n            break;\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n        from = to;\n    }\n    // checking format and target locale\n    if (!isPlainObject(format) || !isString(targetLocale)) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    let id = `${targetLocale}__${key}`;\n    if (!isEmptyObject(overrides)) {\n        id = `${id}__${JSON.stringify(overrides)}`;\n    }\n    let formatter = __numberFormatters.get(id);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n        __numberFormatters.set(id, formatter);\n    }\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'currencySign',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    'compactDisplay',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n    'roundingMode',\n    'roundingPriority',\n    'roundingIncrement',\n    'trailingZeroDisplay'\n];\n/** @internal */\nfunction parseNumberArgs(...args) {\n    const [arg1, arg2, arg3, arg4] = args;\n    const options = create();\n    let overrides = create();\n    if (!isNumber(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    const value = arg1;\n    if (isString(arg2)) {\n        options.key = arg2;\n    }\n    else if (isPlainObject(arg2)) {\n        Object.keys(arg2).forEach(key => {\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n                overrides[key] = arg2[key];\n            }\n            else {\n                options[key] = arg2[key];\n            }\n        });\n    }\n    if (isString(arg3)) {\n        options.locale = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        overrides = arg3;\n    }\n    if (isPlainObject(arg4)) {\n        overrides = arg4;\n    }\n    return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n    const context = ctx;\n    for (const key in format) {\n        const id = `${locale}__${key}`;\n        if (!context.__numberFormatters.has(id)) {\n            continue;\n        }\n        context.__numberFormatters.delete(id);\n    }\n}\n\nconst DEFAULT_MODIFIER = (str) => str;\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n    choice = Math.abs(choice);\n    if (choicesLength === 2) {\n        // prettier-ignore\n        return choice\n            ? choice > 1\n                ? 1\n                : 0\n            : 1;\n    }\n    return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n    // prettier-ignore\n    const index = isNumber(options.pluralIndex)\n        ? options.pluralIndex\n        : -1;\n    // prettier-ignore\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\n        ? isNumber(options.named.count)\n            ? options.named.count\n            : isNumber(options.named.n)\n                ? options.named.n\n                : index\n        : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n    if (!props.count) {\n        props.count = pluralIndex;\n    }\n    if (!props.n) {\n        props.n = pluralIndex;\n    }\n}\nfunction createMessageContext(options = {}) {\n    const locale = options.locale;\n    const pluralIndex = getPluralIndex(options);\n    const pluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? options.pluralRules[locale]\n        : pluralDefault;\n    const orgPluralRule = isObject(options.pluralRules) &&\n        isString(locale) &&\n        isFunction(options.pluralRules[locale])\n        ? pluralDefault\n        : undefined;\n    const plural = (messages) => {\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n    };\n    const _list = options.list || [];\n    const list = (index) => _list[index];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const _named = options.named || create();\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n    const named = (key) => _named[key];\n    function message(key, useLinked) {\n        // prettier-ignore\n        const msg = isFunction(options.messages)\n            ? options.messages(key, !!useLinked)\n            : isObject(options.messages)\n                ? options.messages[key]\n                : false;\n        return !msg\n            ? options.parent\n                ? options.parent.message(key) // resolve from parent messages\n                : DEFAULT_MESSAGE\n            : msg;\n    }\n    const _modifier = (name) => options.modifiers\n        ? options.modifiers[name]\n        : DEFAULT_MODIFIER;\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\n        ? options.processor.normalize\n        : DEFAULT_NORMALIZE;\n    const interpolate = isPlainObject(options.processor) &&\n        isFunction(options.processor.interpolate)\n        ? options.processor.interpolate\n        : DEFAULT_INTERPOLATE;\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\n        ? options.processor.type\n        : DEFAULT_MESSAGE_DATA_TYPE;\n    const linked = (key, ...args) => {\n        const [arg1, arg2] = args;\n        let type = 'text';\n        let modifier = '';\n        if (args.length === 1) {\n            if (isObject(arg1)) {\n                modifier = arg1.modifier || modifier;\n                type = arg1.type || type;\n            }\n            else if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n        }\n        else if (args.length === 2) {\n            if (isString(arg1)) {\n                modifier = arg1 || modifier;\n            }\n            if (isString(arg2)) {\n                type = arg2 || type;\n            }\n        }\n        const ret = message(key, true)(ctx);\n        const msg = \n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\n        type === 'vnode' && isArray(ret) && modifier\n            ? ret[0]\n            : ret;\n        return modifier ? _modifier(modifier)(msg, type) : msg;\n    };\n    const ctx = {\n        [\"list\" /* HelperNameMap.LIST */]: list,\n        [\"named\" /* HelperNameMap.NAMED */]: named,\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\n        [\"type\" /* HelperNameMap.TYPE */]: type,\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n        [\"values\" /* HelperNameMap.VALUES */]: assign(create(), _list, _named)\n    };\n    return ctx;\n}\n\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = (val) => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\n    const [key, options] = parseTranslateArgs(...args);\n    const missingWarn = isBoolean(options.missingWarn)\n        ? options.missingWarn\n        : context.missingWarn;\n    const fallbackWarn = isBoolean(options.fallbackWarn)\n        ? options.fallbackWarn\n        : context.fallbackWarn;\n    const escapeParameter = isBoolean(options.escapeParameter)\n        ? options.escapeParameter\n        : context.escapeParameter;\n    const resolvedMessage = !!options.resolvedMessage;\n    // prettier-ignore\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n        ? !isBoolean(options.default)\n            ? options.default\n            : (!messageCompiler ? () => key : key)\n        : fallbackFormat // default by `fallbackFormat` option\n            ? (!messageCompiler ? () => key : key)\n            : null;\n    const enableDefaultMsg = fallbackFormat ||\n        (defaultMsgOrKey != null &&\n            (isString(defaultMsgOrKey) || isFunction(defaultMsgOrKey)));\n    const locale = getLocale(context, options);\n    // escape params\n    escapeParameter && escapeParams(options);\n    // resolve message format\n    // eslint-disable-next-line prefer-const\n    let [formatScope, targetLocale, message] = !resolvedMessage\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\n        : [\n            key,\n            locale,\n            messages[locale] || create()\n        ];\n    // NOTE:\n    //  Fix to work around `ssrTransfrom` bug in Vite.\n    //  https://github.com/vitejs/vite/issues/4306\n    //  To get around this, use temporary variables.\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n    let format = formatScope;\n    // if you use default message, set it as message format!\n    let cacheBaseKey = key;\n    if (!resolvedMessage &&\n        !(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format))) {\n        if (enableDefaultMsg) {\n            format = defaultMsgOrKey;\n            cacheBaseKey = format;\n        }\n    }\n    // checking message format and target locale\n    if (!resolvedMessage &&\n        (!(isString(format) ||\n            isMessageAST(format) ||\n            isMessageFunction(format)) ||\n            !isString(targetLocale))) {\n        return unresolving ? NOT_REOSLVED : key;\n    }\n    // TODO: refactor\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\n        warn(`The message format compilation is not supported in this build. ` +\n            `Because message compiler isn't included. ` +\n            `You need to pre-compilation all message format. ` +\n            `So translate function return '${key}'.`);\n        return key;\n    }\n    // setup compile error detecting\n    let occurred = false;\n    const onError = () => {\n        occurred = true;\n    };\n    // compile message format\n    const msg = !isMessageFunction(format)\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\n        : format;\n    // if occurred compile error, return the message format\n    if (occurred) {\n        return format;\n    }\n    // evaluate message with context\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n    const msgContext = createMessageContext(ctxOptions);\n    const messaged = evaluateMessage(context, msg, msgContext);\n    // if use post translation option, proceed it with handler\n    const ret = postTranslation\n        ? postTranslation(messaged, key)\n        : messaged;\n    // NOTE: experimental !!\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\n        // prettier-ignore\n        const payloads = {\n            timestamp: Date.now(),\n            key: isString(key)\n                ? key\n                : isMessageFunction(format)\n                    ? format.key\n                    : '',\n            locale: targetLocale || (isMessageFunction(format)\n                ? format.locale\n                : ''),\n            format: isString(format)\n                ? format\n                : isMessageFunction(format)\n                    ? format.source\n                    : '',\n            message: ret\n        };\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n        translateDevTools(payloads);\n    }\n    return ret;\n}\nfunction escapeParams(options) {\n    if (isArray(options.list)) {\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n    }\n    else if (isObject(options.named)) {\n        Object.keys(options.named).forEach(key => {\n            if (isString(options.named[key])) {\n                options.named[key] = escapeHtml(options.named[key]);\n            }\n        });\n    }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n    let message = create();\n    let targetLocale;\n    let format = null;\n    let from = locale;\n    let to = null;\n    const type = 'translate';\n    for (let i = 0; i < locales.length; i++) {\n        targetLocale = to = locales[i];\n        if ((process.env.NODE_ENV !== 'production') &&\n            locale !== targetLocale &&\n            !isAlmostSameLocale(locale, targetLocale) &&\n            isTranslateFallbackWarn(fallbackWarn, key)) {\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n                key,\n                target: targetLocale\n            }));\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\n            const emitter = context.__v_emitter;\n            if (emitter) {\n                emitter.emit('fallback', {\n                    type,\n                    key,\n                    from,\n                    to,\n                    groupId: `${type}:${key}`\n                });\n            }\n        }\n        message =\n            messages[targetLocale] || create();\n        // for vue-devtools timeline event\n        let start = null;\n        let startTag;\n        let endTag;\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            start = window.performance.now();\n            startTag = 'intlify-message-resolve-start';\n            endTag = 'intlify-message-resolve-end';\n            mark && mark(startTag);\n        }\n        if ((format = resolveValue(message, key)) === null) {\n            // if null, resolve with object key path\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n        }\n        // for vue-devtools timeline event\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n            const end = window.performance.now();\n            const emitter = context.__v_emitter;\n            if (emitter && start && format) {\n                emitter.emit('message-resolve', {\n                    type: 'message-resolve',\n                    key,\n                    message: format,\n                    time: end - start,\n                    groupId: `${type}:${key}`\n                });\n            }\n            if (startTag && endTag && mark && measure) {\n                mark(endTag);\n                measure('intlify message resolve', startTag, endTag);\n            }\n        }\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n            break;\n        }\n        if (!isImplicitFallback(targetLocale, locales)) {\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\n            key, targetLocale, missingWarn, type);\n            if (missingRet !== key) {\n                format = missingRet;\n            }\n        }\n        from = to;\n    }\n    return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n    const { messageCompiler, warnHtmlMessage } = context;\n    if (isMessageFunction(format)) {\n        const msg = format;\n        msg.locale = msg.locale || targetLocale;\n        msg.key = msg.key || key;\n        return msg;\n    }\n    if (messageCompiler == null) {\n        const msg = (() => format);\n        msg.locale = targetLocale;\n        msg.key = key;\n        return msg;\n    }\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-compilation-start';\n        endTag = 'intlify-message-compilation-end';\n        mark && mark(startTag);\n    }\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-compilation', {\n                type: 'message-compilation',\n                message: format,\n                time: end - start,\n                groupId: `${'translate'}:${key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message compilation', startTag, endTag);\n        }\n    }\n    msg.locale = targetLocale;\n    msg.key = key;\n    msg.source = format;\n    return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        start = window.performance.now();\n        startTag = 'intlify-message-evaluation-start';\n        endTag = 'intlify-message-evaluation-end';\n        mark && mark(startTag);\n    }\n    const messaged = msg(msgCtx);\n    // for vue-devtools timeline event\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\n        const end = window.performance.now();\n        const emitter = context.__v_emitter;\n        if (emitter && start) {\n            emitter.emit('message-evaluation', {\n                type: 'message-evaluation',\n                value: messaged,\n                time: end - start,\n                groupId: `${'translate'}:${msg.key}`\n            });\n        }\n        if (startTag && endTag && mark && measure) {\n            mark(endTag);\n            measure('intlify message evaluation', startTag, endTag);\n        }\n    }\n    return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n    const [arg1, arg2, arg3] = args;\n    const options = create();\n    if (!isString(arg1) &&\n        !isNumber(arg1) &&\n        !isMessageFunction(arg1) &&\n        !isMessageAST(arg1)) {\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n    }\n    // prettier-ignore\n    const key = isNumber(arg1)\n        ? String(arg1)\n        : isMessageFunction(arg1)\n            ? arg1\n            : arg1;\n    if (isNumber(arg2)) {\n        options.plural = arg2;\n    }\n    else if (isString(arg2)) {\n        options.default = arg2;\n    }\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n        options.named = arg2;\n    }\n    else if (isArray(arg2)) {\n        options.list = arg2;\n    }\n    if (isNumber(arg3)) {\n        options.plural = arg3;\n    }\n    else if (isString(arg3)) {\n        options.default = arg3;\n    }\n    else if (isPlainObject(arg3)) {\n        assign(options, arg3);\n    }\n    return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n    return {\n        locale,\n        key,\n        warnHtmlMessage,\n        onError: (err) => {\n            onError && onError(err);\n            if ((process.env.NODE_ENV !== 'production')) {\n                const _source = getSourceForCodeFrame(source);\n                const message = `Message compilation error: ${err.message}`;\n                const codeFrame = err.location &&\n                    _source &&\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n                const emitter = context.__v_emitter;\n                if (emitter && _source) {\n                    emitter.emit('compile-error', {\n                        message: _source,\n                        error: err.message,\n                        start: err.location && err.location.start.offset,\n                        end: err.location && err.location.end.offset,\n                        groupId: `${'translate'}:${key}`\n                    });\n                }\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n            }\n            else {\n                throw err;\n            }\n        },\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\n    };\n}\nfunction getSourceForCodeFrame(source) {\n    if (isString(source)) {\n        return source;\n    }\n    else {\n        if (source.loc && source.loc.source) {\n            return source.loc.source;\n        }\n    }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\n    const resolveMessage = (key, useLinked) => {\n        let val = resolveValue(message, key);\n        // fallback\n        if (val == null && (fallbackContext || useLinked)) {\n            const [, , message] = resolveMessageFormat(fallbackContext || context, // NOTE: if has fallbackContext, fallback to root, else if use linked, fallback to local context\n            key, locale, fallbackLocale, fallbackWarn, missingWarn);\n            val = resolveValue(message, key);\n        }\n        if (isString(val) || isMessageAST(val)) {\n            let occurred = false;\n            const onError = () => {\n                occurred = true;\n            };\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\n            return !occurred\n                ? msg\n                : NOOP_MESSAGE_FUNCTION;\n        }\n        else if (isMessageFunction(val)) {\n            return val;\n        }\n        else {\n            // TODO: should be implemented warning message\n            return NOOP_MESSAGE_FUNCTION;\n        }\n    };\n    const ctxOptions = {\n        locale,\n        modifiers,\n        pluralRules,\n        messages: resolveMessage\n    };\n    if (context.processor) {\n        ctxOptions.processor = context.processor;\n    }\n    if (options.list) {\n        ctxOptions.list = options.list;\n    }\n    if (options.named) {\n        ctxOptions.named = options.named;\n    }\n    if (isNumber(options.plural)) {\n        ctxOptions.pluralIndex = options.plural;\n    }\n    return ctxOptions;\n}\n\n{\n    initFeatureFlags();\n}\n\nexport { CORE_ERROR_CODES_EXTEND_POINT, CORE_WARN_CODES_EXTEND_POINT, CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\n"],"names":["inBrowser","makeSymbol","name","shareable","generateFormatCacheKey","locale","key","source","friendlyJSONstringify","json","isNumber","val","isDate","toTypeString","isRegExp","isEmptyObject","isPlainObject","assign","_create","create","obj","_globalThis","getGlobalThis","escapeHtml","rawText","hasOwnProperty","hasOwn","isArray","isFunction","isString","isBoolean","isObject","isPromise","objectToString","value","toDisplayString","join","items","separator","str","item","index","warn","msg","err","isNotObjectOrIsArray","deepCopy","src","des","stack","src2","des2","createPosition","line","column","offset","createLocation","start","end","CompileErrorCodes","COMPILE_ERROR_CODES_EXTEND_POINT","createCompileError","code","loc","options","domain","messages","args","error","defaultOnError","CHAR_SP","CHAR_CR","CHAR_LF","CHAR_LS","CHAR_PS","createScanner","_buf","_index","_line","_column","_peekOffset","isCRLF","index2","isLF","isPS","isLS","isLineEnd","peekOffset","charAt","currentChar","currentPeek","next","peek","reset","resetPeek","skipToPeek","target","EOF","DOT","LITERAL_DELIMITER","ERROR_DOMAIN$3","createTokenizer","location","_scnr","currentOffset","currentPosition","_initLoc","_initOffset","_context","context","onError","emitError","pos","ctx","getToken","context2","type","token","getEndToken","eat","scnr","ch","peekSpaces","buf","skipSpaces","isIdentifierStart","cc","isNumberStart","isNamedIdentifierStart","currentType","ret","isListIdentifierStart","isLiteralStart","isLinkedDotStart","isLinkedModifierStart","isLinkedDelimiterStart","isLinkedReferStart","fn","isTextStart","isPluralStart","hasSpace","prev","takeChar","isIdentifier","takeIdentifierChar","isNamedIdentifier","takeNamedIdentifierChar","isDigit","takeDigit","isHexDigit","takeHexDigit","getDigits","num","readText","readNamedIdentifier","readListIdentifier","isLiteral","readLiteral","literal","readEscapeSequence","current","readUnicodeEscapeSequence","unicode","digits","sequence","i","isInvalidIdentifier","readInvalidIdentifier","identifiers","readLinkedModifier","readLinkedRefer","readPlural","plural","readTokenInPlaceholder","readTokenInLinked","validNamedIdentifier","validListIdentifier","validLiteral","readToken","nextToken","startLoc","endLoc","ERROR_DOMAIN$2","KNOWN_ESCAPES","fromEscapeSequence","match","codePoint4","codePoint6","codePoint","createParser","tokenzer","startNode","node","endNode","parseText","tokenizer","parseList","parseNamed","parseLiteral","parseLinkedModifier","getTokenCaption","parseLinkedKey","parseLinked","linkedNode","parsed","nextContext","emptyLinkedKeyNode","parseMessage","startOffset","endOffset","parsePlural","msgNode","hasEmptyMessage","parseResource","parse","createTransformer","ast","traverseNodes","nodes","transformer","traverseNode","transform","optimize","body","optimizeMessageNode","c","message","values","minify","resource","cases","valueNode","linked","list","named","createCodeGenerator","sourceMap","filename","breakLineCode","_needIndent","push","_newline","n","withBreakLine","_breakLineCode","indent","withNewLine","level","deindent","newline","generateLinkedNode","generator","helper","generateNode","generateMessageNode","needIndent","length","generatePluralNode","generateResource","generate","mode","helpers","s","map","baseCompile","assignedOptions","jit","enalbeMinify","enambeOptimize","initFeatureFlags","format","formatParts","resolveBody","createUnhandleNodeError","resolveType","resolveCases","formatMessageParts","PROPS_BODY","resolveProps","PROPS_CASES","static_","resolveStatic","resolveItems","acm","formatMessagePart","PROPS_STATIC","PROPS_ITEMS","resolveValue$1","modifier","resolveLinkedModifier","resolveLinkedKey","PROPS_TYPE","PROPS_VALUE","resolved","PROPS_MODIFIER","PROPS_KEY","props","defaultValue","prop","defaultOnCacheKey","compileCache","isMessageAST","detectError","baseCompile$1","compile","cacheKey","cached","devtools","setDevToolsHook","hook","initI18nDevTools","i18n","version","meta","translateDevTools","createDevToolsHook","payloads","CoreErrorCodes","CORE_ERROR_CODES_EXTEND_POINT","createCoreError","getLocale","resolveLocale","_resolveLocale","resolve","fallbackWithSimple","fallback","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","chain","block","appendBlockToChain","defaults","blocks","follow","appendLocaleToChain","tokens","appendItemToChain","pathStateMachine","literalValueRE","exp","stripQuotes","a","b","getPathCharType","formatSubPath","path","trimmed","keys","subPathDepth","newChar","transition","action","typeMap","actions","maybeUnescapeQuote","nextChar","cache","resolveWithKeyValue","resolveValue","hit","len","last","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","getDefaultLinkedModifiers","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","onWarn","_locale","fallbackLocale","createResources","datetimeFormats","numberFormats","modifiers","pluralRules","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","processor","warnHtmlMessage","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","handleMissing","updateFallbackLocale","isAlmostSameLocale","compareLocale","isImplicitFallback","targetLocale","locales","datetime","overrides","parseDateTimeArgs","part","datetimeFormat","format2","id","formatter","DATETIME_FORMAT_OPTIONS_KEYS","arg1","arg2","arg3","arg4","matches","dateTime","clearDateTimeFormat","number","parseNumberArgs","numberFormat","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat","DEFAULT_MODIFIER","DEFAULT_MESSAGE","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","getPluralIndex","normalizeNamed","pluralIndex","createMessageContext","pluralRule","orgPluralRule","_list","_named","useLinked","_modifier","normalize","interpolate","type2","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","occurred","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","resolveValue2","missingRet","msg2","getCompileContext","msgCtx","source2","message2"],"mappings":"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","x_google_ignoreList":[0,1,2]}