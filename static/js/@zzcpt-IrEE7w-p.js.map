{"version":3,"file":"@zzcpt-IrEE7w-p.js","sources":["../../../node_modules/@zzcpt/zztool/lib/utils/arrayTrim.js","../../../node_modules/@zzcpt/zztool/lib/utils/chunkArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/chunkArrayItem.js","../../../node_modules/@zzcpt/zztool/lib/utils/getFirstChar.js","../../../node_modules/@zzcpt/zztool/lib/utils/public.js","../../../node_modules/@zzcpt/zztool/lib/utils/toString.js","../../../node_modules/@zzcpt/zztool/lib/utils/toArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataChangeIndex.js","../../../node_modules/@zzcpt/zztool/lib/utils/getType.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataEmpty.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataEqual.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataFind.js","../../../node_modules/@zzcpt/zztool/lib/utils/dataMerge.js","../../../node_modules/@zzcpt/zztool/lib/utils/debounce.js","../../../node_modules/@zzcpt/zztool/lib/utils/deepClone.js","../../../node_modules/@zzcpt/zztool/lib/utils/getDateInfo.js","../../../node_modules/@zzcpt/zztool/lib/utils/getDateType.js","../../../node_modules/@zzcpt/zztool/lib/utils/getDate.js","../../../node_modules/@zzcpt/zztool/lib/utils/getTimeStamp.js","../../../node_modules/@zzcpt/zztool/lib/utils/getBetweenDate.js","../../../node_modules/@zzcpt/zztool/lib/utils/getChar.js","../../../node_modules/@zzcpt/zztool/lib/utils/getLastChar.js","../../../node_modules/@zzcpt/zztool/lib/utils/getMonthDays.js","../../../node_modules/@zzcpt/zztool/lib/utils/getPercentage.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandom.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomColor.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomRGBA.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRandomRGBColor.js","../../../node_modules/@zzcpt/zztool/lib/utils/getRecentDate.js","../../../node_modules/@zzcpt/zztool/lib/utils/getSameIndexValue.js","../../../node_modules/@zzcpt/zztool/lib/utils/getTimeStep.js","../../../node_modules/@zzcpt/zztool/lib/utils/getUrlParam.js","../../../node_modules/@zzcpt/zztool/lib/utils/getValue.js","../../../node_modules/@zzcpt/zztool/lib/utils/getWeekDay.js","../../../node_modules/@zzcpt/zztool/lib/utils/getWeekTime.js","../../../node_modules/@zzcpt/zztool/lib/utils/getYearWeeks.js","../../../node_modules/@zzcpt/zztool/lib/utils/groupBy.js","../../../node_modules/@zzcpt/zztool/lib/utils/moneyFormat.js","../../../node_modules/@zzcpt/zztool/lib/utils/paramformat.js","../../../node_modules/@zzcpt/zztool/lib/utils/regEmail.js","../../../node_modules/@zzcpt/zztool/lib/utils/regIdcard.js","../../../node_modules/@zzcpt/zztool/lib/utils/regIsHas.js","../../../node_modules/@zzcpt/zztool/lib/utils/regPhone.js","../../../node_modules/@zzcpt/zztool/lib/utils/replaceAll.js","../../../node_modules/@zzcpt/zztool/lib/utils/shuffleArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/sleep.js","../../../node_modules/@zzcpt/zztool/lib/utils/strReplace.js","../../../node_modules/@zzcpt/zztool/lib/utils/throttle.js","../../../node_modules/@zzcpt/zztool/lib/utils/toTree.js","../../../node_modules/@zzcpt/zztool/lib/utils/uniqueArray.js","../../../node_modules/@zzcpt/zztool/lib/utils/weekInMonthCount.js","../../../node_modules/@zzcpt/zztool/lib/index.js"],"sourcesContent":["/**\n * 数组去空\n * @param data 数组\n */\nexport function arrayTrim(data) {\n    if (!Array.isArray(data))\n        return data;\n    return data.filter((item) => item);\n}\n","/**\n * 数组分块\n * 将数组分成size块\n * @param data 数组\n * @param size 大小\n */\nexport function chunkArray(data, size) {\n    if (!Array.isArray(data) || data.length === 0 || size <= 0 || size > data.length) {\n        throw new Error(\"Invalid input data or size.\");\n    }\n    const result = [];\n    const lng = Math.ceil(data.length / size);\n    for (let i = 0; i < size; i++) {\n        result.push(data.slice(i * lng, (i + 1) * lng));\n    }\n    return result;\n}\n","/**\n * 数组分块\n * 将数组分成每块为size大小\n * @param arr 数组\n * @param size 大小\n */\nexport function chunkArrayItem(arr, size) {\n    if (!Array.isArray(arr) || arr.length === 0 || size <= 0 || size > arr.length) {\n        throw new Error(\"Invalid input data or size.\");\n    }\n    const result = [];\n    for (let i = 0; i < arr.length; i += size) {\n        result.push(arr.slice(i, i + size));\n    }\n    return result;\n}\n","/**\n * 获取第一个字符\n * @param str 字符串\n * @returns 第一个字符\n */\nexport function getFirstChar(str) {\n    if (typeof str !== 'string' || !str || str.length === 0)\n        return '';\n    return str.charAt(0);\n}\n","/**\n * 抛出错误\n * @param msg 错误信息\n */\nexport function error(msg) {\n    throw new Error(msg);\n}\n/**\n * 判断是否为字符串\n * @param str 字符串\n */\nexport function isString(str) {\n    if (typeof str !== \"string\") {\n        error(\"参数类型错误，必须为字符串\");\n    }\n}\n","import { getFirstChar } from './getFirstChar';\nimport { error } from './public';\n/**\n * 转字符串\n * @param obj 数据\n * @returns 字符串\n */\nexport function toString(obj) {\n    if (!obj)\n        error(\"该变量没有值\");\n    const chars = JSON.stringify(obj);\n    if (getFirstChar(chars) === \"\\\\\") {\n        return chars.replace(/\\\\/g, \"\");\n    }\n    return chars;\n}\n","import { getFirstChar } from \"./getFirstChar\";\nimport { toString } from \"./toString\";\n/**\n * 转数组\n * @param obj 数据\n * @param index 分隔符\n * @returns 数组\n */\nexport function toArray(obj, index = \"\") {\n    if (!obj)\n        return [];\n    if (Array.isArray(obj))\n        return [...obj];\n    const chars = typeof obj === \"string\" ? obj : toString(obj);\n    const firstChar = getFirstChar(chars);\n    try {\n        if (firstChar === \"{\" || firstChar === \"[\")\n            return JSON.parse(chars);\n        if (chars.includes(\",\"))\n            return chars.split(\",\");\n        if (chars.includes(\" \"))\n            return chars.split(\" \");\n        return chars.split(index);\n    }\n    catch (e) {\n        return chars;\n    }\n}\n","import { toArray } from \"./toArray\";\n/**\n * 修改对象中的下标\n * index和newIndex必须是字符串，多个下标用逗号分隔\n * @param {*} data\n * @param {*} index\n * @param {*} newIndex\n * @returns {object}\n */\nexport function dataChangeIndex(data, index, newIndex) {\n    if (typeof data !== \"object\" || !data || !index || !newIndex) {\n        throw new Error(\"Invalid input data or index or newIndex.\");\n    }\n    const indexArr = toArray(index, \",\");\n    const newIndexArr = toArray(newIndex, \",\");\n    if (indexArr.length !== newIndexArr.length) {\n        throw new Error(\"下表必须和新下标长度一致\");\n    }\n    const newData = JSON.parse(JSON.stringify(data));\n    indexArr.forEach((_, i) => {\n        hfn(newData, indexArr[i], newIndexArr[i]);\n    });\n    function hfn(obj, oldKey, newKey) {\n        if (typeof obj !== \"object\" || obj === null)\n            return;\n        Object.keys(obj).forEach((key) => {\n            if (key === oldKey) {\n                // 检查新键是否已经存在\n                if (obj.hasOwnProperty(newKey)) {\n                    throw new Error(`Key \"${newKey}\" already exists, cannot rename \"${oldKey}\"`);\n                }\n                obj[newKey] = obj[key];\n                delete obj[oldKey];\n            }\n            // 递归处理子对象\n            if (typeof obj[key] === \"object\") {\n                hfn(obj[key], oldKey, newKey);\n            }\n            // 处理数组中的对象\n            if (Array.isArray(obj[key])) {\n                obj[key] = obj[key].map((item) => typeof item === \"object\" ? hfn(item, oldKey, newKey) : item);\n            }\n        });\n    }\n    return newData;\n}\n","/**\n * 获取类型\n * @param data\n * @returns 类型\n */\nexport function getType(data) {\n    return Object.prototype.toString.call(data).slice(8, -1).toLowerCase();\n}\n","import { getType } from \"./getType\";\n/**\n * 判断对象中是否有空值\n * @param {Object} obj - 需要检查的对象\n * @param {boolean} returnKeys - 是否返回空值的路径（默认返回 true/false）\n * @param {string} parentKey - 父级 key（用于递归拼接路径）\n * @returns {boolean | string[]} - 存在空值返回 `true`，否则返回 `false`，或返回所有空值路径\n */\nexport function dataEmpty(obj, returnKeys = false, parentKey = \"\") {\n    if (!obj || typeof obj !== \"object\") {\n        throw new Error(\"Invalid argument: obj must be an object\");\n    }\n    const emptyKeys = [];\n    function checkEmpty(value) {\n        if (getType(value) == 'number') {\n            return isNaN(value); // 只判断 NaN，0 不算空值\n        }\n        return (value === \"\" ||\n            value === null ||\n            value === undefined ||\n            (typeof value === \"object\" &&\n                value !== null &&\n                (Array.isArray(value)\n                    ? value.length === 0\n                    : Object.keys(value).length === 0)));\n    }\n    Object.keys(obj).forEach((key) => {\n        const fullKey = parentKey ? `${parentKey}.${key}` : key;\n        const value = obj[key];\n        const isEmpty = checkEmpty(value);\n        if (typeof value === \"object\" && !isEmpty) {\n            const nestedResult = dataEmpty(value, true, fullKey);\n            if (Array.isArray(nestedResult)) {\n                emptyKeys.push(...nestedResult);\n            }\n        }\n        else if (isEmpty) {\n            emptyKeys.push(fullKey);\n        }\n    });\n    return returnKeys ? emptyKeys : emptyKeys.length > 0;\n}\n","/**\n * 深度比较两个对象或数组，返回是否相等或不一致的 key\n * @param {Object|Array} obj1 - 第一个对象/数组\n * @param {Object|Array} obj2 - 第二个对象/数组\n * @param {Object} options - 配置项\n * @param {boolean} options.returnKeys - 是否返回不一致的 key（默认 false）\n * @param {boolean} options.arrayDiff - 是否检查数组内差异（默认 true）\n * @returns {boolean | string[]} - 相等返回 false，不相等返回 true 或不同 key\n */\nexport function dataEqual(obj1, obj2, options = {}) {\n    if (typeof obj1 !== \"object\" || typeof obj2 !== \"object\") {\n        throw new Error(\"Both arguments must be objects or arrays.\");\n    }\n    const defaultOptions = { returnKeys: false, arrayDiff: true };\n    const { returnKeys } = Object.assign(defaultOptions, options);\n    const differingKeys = [];\n    function isObject(value) {\n        return value && typeof value === \"object\" && !Array.isArray(value);\n    }\n    const deepCompare = (value1, value2, key) => {\n        if (isObject(value1) && isObject(value2)) {\n            const data = dataEqual(value1, value2, options);\n            if (Array.isArray(data)) {\n                data.forEach((k) => differingKeys.push(`${key}.${k}`));\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            // 深对比\n            value1.forEach((v, i) => {\n                if (typeof v == \"object\" && typeof value2[i] == \"object\") {\n                    const data = dataEqual(v, value2[i], options);\n                    if (Array.isArray(data)) {\n                        data.forEach((k) => differingKeys.push(`${key}.${i}.${k}`));\n                    }\n                }\n                else if (v !== value2[i]) {\n                    differingKeys.push(`${key}.${i}`);\n                }\n            });\n        }\n        else if (value1 !== value2) {\n            differingKeys.push(key);\n        }\n    };\n    for (let key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            deepCompare(obj1[key], obj2[key], key);\n        }\n    }\n    return returnKeys ? differingKeys : differingKeys.length > 0;\n}\n","/**\n * 根据某个字段找对应的数组或对象，如果有两个相同的数据会优先返回第一个\n * @param {*} data\n * @param {*} key\n * @param {*} value\n */\nexport function dataFind(data, key, value) {\n    if (!data || !key || !value) {\n        throw new Error('Invalid argument');\n    }\n    ;\n    const find = (data) => {\n        for (const itemkey in data) {\n            if (itemkey === key && data[itemkey] === value) {\n                return data;\n            }\n            else if (Array.isArray(data[itemkey]) ||\n                typeof data[itemkey] === \"object\") {\n                const result = find(data[itemkey]);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return null;\n    };\n    return find(data);\n}\n","/**\n * 合并数据，取交集/并集/差集/补集\n * @param {*} data1\n * @param {*} data2\n * @param {*} type 1：并集，2：交集，3：差集，4：补集\n * 并集：合并去重\n * 交集：两个数组都有的值\n * 差集：data1中有，data2中没有的值\n * 补集：两个数组中各自没有的值\n */\nexport function dataMerge(data1, data2, type = 1) {\n    if (!Array.isArray(data1) || !Array.isArray(data2))\n        return [];\n    switch (type) {\n        case 1:\n            return Array.from(new Set([...data1, ...data2]));\n        case 2:\n            return data1.filter(v => data2.includes(v));\n        case 3:\n            return data1.filter(v => !data2.includes(v));\n        case 4:\n            return [...data1.filter(v => !data2.includes(v)), ...data2.filter(v => !data1.includes(v))];\n        default:\n            return [];\n    }\n}\n","/**\n * 防抖\n * @param callback 回调函数\n * @param wait 等待时间\n */\nexport const debounce = (function () {\n    let timer = null;\n    return (callback, wait = 800) => {\n        timer && clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n})();\n","import { error } from \"./public\";\n/**\n * 深克隆\n * @param {*} obj\n * @returns\n */\nexport function deepClone(obj) {\n    if (obj === null || obj === undefined)\n        return obj;\n    if (typeof obj !== \"object\")\n        return obj;\n    if (obj instanceof Date)\n        return new Date(obj.getTime());\n    if (Array.isArray(obj)) {\n        const arrCopy = [];\n        obj.forEach((item, index) => {\n            arrCopy[index] = deepClone(item);\n        });\n        return arrCopy;\n    }\n    if (obj instanceof Object) {\n        const objCopy = {};\n        Object.keys(obj).forEach((key) => {\n            objCopy[key] = deepClone(obj[key]);\n        });\n        return objCopy;\n    }\n    error(\"Unsupported data type\");\n}\n","/**\n * 获取日期信息\n * @param str 日期字符串或 Date 对象，可为空\n * @returns {year,month,day,hour,minute,second}\n */\nexport function getDateInfo(str) {\n    let formattedStr = str;\n    // 兼容ios\n    if (typeof str === \"string\" && str.includes(\"-\")) {\n        formattedStr = str.replace(/-/g, \"/\");\n    }\n    const date = formattedStr ? new Date(formattedStr) : new Date();\n    if (isNaN(date.getTime())) {\n        throw new Error(\"Invalid date format\");\n    }\n    const pad = (num) => num.toString().padStart(2, \"0\");\n    return {\n        year: date.getFullYear().toString(),\n        month: pad(date.getMonth() + 1),\n        day: pad(date.getDate()),\n        hour: pad(date.getHours()),\n        minute: pad(date.getMinutes()),\n        second: pad(date.getSeconds()),\n    };\n}\n","import { getDateInfo } from \"./getDateInfo\";\n/**\n * 获取日期类型\n * @param date\n * @param type\n * @returns\n */\nexport function getDateType(date, type = \"Y/M/D h:m:s\") {\n    const { year, month, day, hour, minute, second } = typeof date === \"object\" ? date : getDateInfo(date) || {};\n    return type\n        .replace(\"Y\", year !== null && year !== void 0 ? year : \"--\")\n        .replace(\"M\", month !== null && month !== void 0 ? month : \"--\")\n        .replace(\"D\", day !== null && day !== void 0 ? day : \"--\")\n        .replace(\"h\", hour !== null && hour !== void 0 ? hour : \"--\")\n        .replace(\"m\", minute !== null && minute !== void 0 ? minute : \"--\")\n        .replace(\"s\", second !== null && second !== void 0 ? second : \"--\");\n}\n","import { getDateInfo } from \"./getDateInfo\";\nimport { getDateType } from \"./getDateType\";\n/**\n * 获取日期\n * 如果只有一个参数，str会被当为type传递\n * @param str\n * @param type\n * @returns\n */\nexport function getDate(str = \"\", type = \"Y/M/D h:m:s\") {\n    if (arguments.length === 0) {\n        return getDateType(getDateInfo(new Date()), \"Y/M/D h:m:s\");\n    }\n    if (arguments.length === 1) {\n        return getDateType(getDateInfo(new Date()), str);\n    }\n    return getDateType(getDateInfo(str), type);\n}\n","/**\n * 获取时间戳\n * @param {*} date\n * @param {*} mill 是否返回毫秒级时间戳\n * @returns\n */\nexport function getTimeStamp(date = new Date(), mill = true) {\n    const timestamp = new Date(date).getTime();\n    return isNaN(timestamp) ? 0 : mill ? timestamp : Math.floor(timestamp / 1000);\n}\n","import { getDate } from \"./getDate\";\nimport { getTimeStamp } from \"./getTimeStamp\";\n/**\n * 获取两个日期之间的日期\n * @param {*} date\n * @param {*} date1\n * @param {*} days\n * @returns {Array}\n */\nexport function getBetweenDate(date, date1, days = false) {\n    const oneDay = 86400000;\n    const dateTime = getTimeStamp(date);\n    const dateTime1 = getTimeStamp(date1);\n    if (isNaN(dateTime) || isNaN(dateTime1))\n        return [];\n    const diffDays = Math.abs(dateTime - dateTime1) / oneDay;\n    if (days)\n        return diffDays;\n    return Array.from({ length: diffDays }, (_, i) => {\n        const time = dateTime > dateTime1 ? dateTime1 + i * oneDay : dateTime + i * oneDay;\n        return getDate(new Date(time), \"Y-M-D\");\n    });\n}\n","/**\n * 获取字符\n * @param str 字符串\n * @param start 开始位置\n * @param end 结束位置\n * @returns 字符\n */\nexport function getChar(str, start, end) {\n    if (typeof str !== 'string' || !str || str.length === 0 || start < 0 || end > str.length || start >= end)\n        return \"\";\n    const char = str.substring(start, end);\n    return char ? char : \"\";\n}\n","/**\n * 获取最后一个字符\n * @param str 字符串\n * @returns 最后一个字符\n */\nexport function getLastChar(str) {\n    if (typeof str !== 'string' || !str || str.length === 0)\n        return '';\n    return str.substring(str.length - 1, str.length);\n}\n","/**\n * 获取月份天数\n * @param {*} date\n * @returns\n */\nexport function getMonthDays(year = new Date().getFullYear(), month = new Date().getMonth() + 1) {\n    if (!Number.isInteger(year) || !Number.isInteger(month) || month < 1 || month > 12) {\n        throw new Error(\"无效的年份或月份\");\n    }\n    return new Date(year, month, 0).getDate();\n}\n","/**\n * 计算百分比\n * @param {*} part\n * @param {*} total\n * @param {*} decimalPlaces\n * @returns\n */\nexport function getPercentage(part, total, decimalPlaces = 2) {\n    if (total === 0)\n        return \"0.00%\";\n    if (typeof part !== \"number\" || typeof total !== \"number\" || typeof decimalPlaces !== \"number\") {\n        throw new Error(\"所有参数必须为数字\");\n    }\n    return ((part / total) * 100).toFixed(decimalPlaces) + \"%\";\n}\n","/**\n * 获取随机数\n * @param min 最小值\n * @param max 最大值\n */\nexport function getRandom(min, max) {\n    if (!Number.isFinite(min) || !Number.isFinite(max) || min > max) {\n        throw new Error(\"参数错误，min 应小于等于 max，且都必须为有限数字\");\n    }\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import { getRandom } from './getRandom';\n/**\n * 获取随机数组\n * @param length 长度\n * @param min 最小值\n * @param max 最大值\n * @returns 生成的随机数组\n */\nexport function getRandomArray(length, min, max) {\n    if (!Number.isInteger(length) || length < 0)\n        throw new Error(\"length 必须是非负整数\");\n    if (!Number.isFinite(min) || !Number.isFinite(max) || min > max)\n        throw new Error(\"min 和 max 必须是有限数字，且 min ≤ max\");\n    return Array.from({ length }, () => getRandom(min, max));\n}\n","/**\n * 获取随机颜色\n */\nexport function getRandomColor() {\n    return `#${Math.floor(Math.random() * 0xffffff).toString(16)}`;\n}\n","import { getRandom } from \"./getRandom\";\n/**\n * 获取随机rgba颜色\n */\nexport function getRandomRGBA() {\n    return `rgba(${getRandom(0, 255)},${getRandom(0, 255)},${getRandom(0, 255)},${getRandom(0, 100) / 100})`;\n}\n","import { getRandom } from './getRandom';\n/**\n * 获取随机rgb颜色\n */\nexport function getRandomRGBColor() {\n    return `rgb(${getRandom(0, 255)},${getRandom(0, 255)},${getRandom(0, 255)})`;\n}\n","import { getDateType } from \"./getDateType\";\nimport { getDateInfo } from \"./getDateInfo\";\n/**\n * 获取某日期的近期天数\n * @param {Date | string | number} date 日期\n * @param {1 | 2 | 3 | 4} step 步长 1=3 2=7 3=15 4=30\n * @param {\"before\" | \"after\"} type before | after\n * @param {string} format 格式化格式，默认 \"Y-M-D\"\n * @param {Record<number,number>} option 步长对应天数\n * @returns {string[]} 日期数组\n */\nexport function getRecentDate(date = new Date(), step = 1, type = \"before\", format = \"Y-M-D\", option = { 1: 3, 2: 7, 3: 15, 4: 30 }) {\n    const oneDay = 86400000;\n    let now = new Date(date).getTime();\n    if (isNaN(now))\n        return [];\n    const stepDays = option[step] * oneDay;\n    const endDate = type === \"before\" ? now - stepDays : now + stepDays;\n    const dateArr = [];\n    while ((type === 'before' && now > endDate) || (type === 'after' && now < endDate)) {\n        dateArr.push(getDateType(getDateInfo(now), format));\n        now += type === \"before\" ? -oneDay : oneDay;\n    }\n    return type === \"before\" ? dateArr.reverse() : dateArr;\n}\n","/**\n * 获取对应索引的value\n * @param obj 对象\n * @param index 索引\n * @param parentKey 父级key\n * @returns\n */\nexport function getSameIndexValue(obj, index, parentKey = \"\") {\n    if (typeof obj !== \"object\" || obj === null)\n        throw new Error(\"obj 必须是非 null 对象\");\n    if (typeof index !== \"string\")\n        throw new Error(\"index 必须是字符串\");\n    if (typeof parentKey !== \"string\")\n        throw new Error(\"parentKey 必须是字符串\");\n    const arr = [];\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const fullKey = parentKey ? `${parentKey}.${key}` : key;\n            const value = obj[key];\n            if (typeof value === \"object\") {\n                arr.push(...getSameIndexValue(value, index, fullKey));\n            }\n            else if (key == index) {\n                arr.push({\n                    key: fullKey,\n                    value,\n                });\n            }\n        }\n    }\n    return arr;\n}\n","/**\n * 获取时间段\n * @param {*} start 开始时间\n * @param {*} end 结束时间\n * @param {*} step 步长\n * @param {*} type hh:mm:ss hh:mm\n * @returns\n */\nexport function getTimeStep(start, end, step = \"01:00\", type = \"hh:mm\") {\n    // 验证时间格式是否正确\n    const isValidTime = (time) => /^(\\d{1,2}):(\\d{2})(?::(\\d{2}))?$/.test(time);\n    if (![start, end, step].every(isValidTime)) {\n        throw new Error(\"Invalid time format. Expected 'hh:mm' or 'hh:mm:ss'\");\n    }\n    const toSeconds = (time) => time\n        .split(\":\")\n        .map(Number)\n        .reduce((a, v, i) => a + v * [3600, 60, 1][i], 0);\n    const format = (time) => [Math.floor(time / 3600), Math.floor((time % 3600) / 60), time % 60]\n        .map((v) => String(v).padStart(2, \"0\"))\n        .join(\":\");\n    const startTime = toSeconds(start);\n    const endTime = toSeconds(end);\n    const stepTime = toSeconds(step);\n    if (startTime > endTime) {\n        throw new Error(\"Start time cannot be greater than end time.\");\n    }\n    const result = [];\n    for (let time = startTime; time <= endTime; time += stepTime) {\n        result.push(type === \"hh:mm:ss\" ? format(time) : format(time).slice(0, 5));\n    }\n    return result;\n}\n","/**\n * 获取url参数\n * @param url url\n * @returns 参数\n */\nexport function getUrlParam(url = \"\") {\n    if (!url) {\n        url = window.location.href;\n    }\n    return (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce((a, v) => ((a[v.slice(0, v.indexOf(\"=\"))] = v.slice(v.indexOf(\"=\") + 1)), a), {});\n}\n","/**\n * 获取索引值\n * 仅适用于对象嵌套，支持以下形式：\n * - 'xxx.xxx.xxx' 形式\n * - 'xxx[0].yyy' 形式\n * - [xxx, xxx, xxx] 形式\n * @param obj 目标对象\n * @param path 访问路径\n * @returns 目标值或空字符串\n */\nexport function getValue(obj, path) {\n    if (typeof path === \"string\") {\n        path = path.replace(/\\[(\\d+)\\]/g, \".$1\").split(\".\");\n    }\n    if (!Array.isArray(path) || path.length === 0) {\n        return \"\";\n    }\n    return path.reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : \"\"), obj);\n}\n","/**\n * 获取日期是星期几\n * @param {*} date\n * @returns\n */\nexport function getWeekDay(date = new Date()) {\n    date = date instanceof Date ? date : new Date(date);\n    const weekDays = [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"];\n    return weekDays[new Date(date).getDay()];\n}\n","/**\n * 获取当前周的日期列表\n * @param date 可选，指定日期，默认当前日期\n * @returns 当前周的所有日期（从周一开始）\n */\nexport function getWeekTime(date = new Date()) {\n    date = date instanceof Date ? date : new Date(date);\n    if (isNaN(date.getTime()))\n        return [];\n    const now = new Date(date);\n    const dayOfWeek = now.getDay() || 7;\n    const startOfWeek = new Date(now);\n    startOfWeek.setDate(now.getDate() - dayOfWeek + 1);\n    return Array.from({ length: 7 }, (_, i) => {\n        const day = new Date(startOfWeek);\n        day.setDate(startOfWeek.getDate() + i);\n        return day.toISOString().split(\"T\")[0];\n    });\n}\n","/**\n * 获取某年中有几周\n * @param {*} year\n * @returns\n */\nexport function getYearWeeks(year = new Date().getFullYear()) {\n    let first = new Date(year, 0, 1).getDay();\n    if (first == 1) {\n        first = 0;\n    }\n    else if (first == 0) {\n        first = 1;\n    }\n    else {\n        first = 8 - first;\n    }\n    if ((year % 4 == 0 && year % 100 != 0) ||\n        (year % 100 == 0 && year % 400 == 0)) {\n        var allyears = 366;\n    }\n    else {\n        var allyears = 365;\n    }\n    let week = Math.ceil((allyears - first) / 7) + (first !== 0 ? 1 : 0);\n    return week;\n}\n","/**\n * 数据分组\n * @param {*} data\n * @param {*} key\n */\nexport function groupBy(data, key) {\n    if (!data || !key || !Array.isArray(data) || typeof key !== \"string\" || !data.length || !data[0].hasOwnProperty(key)) {\n        return data;\n    }\n    return data.reduce((acc, item) => {\n        (acc[item[key]] = acc[item[key]] || []).push(item);\n        return acc;\n    }, {});\n}\n","/**\n * 金额格式化\n * @param money 金额\n * @param char 分隔符\n * @param first 首字符\n */\nexport function moneyFormat(money, char = \",\", first = \"\") {\n    if (isNaN(Number(money)))\n        return \"0\";\n    let [intPart, decimalPart] = money.toString().split(\".\");\n    intPart = intPart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, char);\n    return first + (decimalPart ? `${intPart}.${decimalPart}` : intPart);\n}\n","/**\n * 参数格式化\n * @param obj 参数\n * @param type 类型\n * @returns 格式化后的参数\n */\nexport function paramformat(obj, type = \"url\") {\n    var _a;\n    if (!obj || typeof obj !== \"object\")\n        return \"\";\n    if (type === \"url\") {\n        return Object.keys(obj)\n            .map((key) => { var _a; return `${encodeURIComponent(key)}=${encodeURIComponent((_a = obj[key]) !== null && _a !== void 0 ? _a : \"\")}`; })\n            .join(\"&\");\n    }\n    if (type === \"json\") {\n        return JSON.stringify(obj);\n    }\n    if (type === \"formData\") {\n        const formData = new FormData();\n        for (const key in obj) {\n            formData.append(key, (_a = obj[key]) !== null && _a !== void 0 ? _a : \"\");\n        }\n        return formData;\n    }\n}\n","/**\n * 判断是否为邮箱\n * @param str 字符串\n * @returns 是否为邮箱\n */\nexport function regEmail(str) {\n    return /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(str);\n}\n","/**\n * 判断是否为身份证\n * @param str 字符串\n * @returns 是否为身份证\n */\nexport function regIdcard(str) {\n    if (!/^\\d{17}(\\d|X)$/i.test(str))\n        return false;\n    const provinceCodes = new Set([\n        \"11\", \"12\", \"13\", \"14\", \"15\", \"21\", \"22\", \"23\", \"31\", \"32\", \"33\", \"34\", \"35\", \"36\", \"37\",\n        \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"50\", \"51\", \"52\", \"53\", \"54\", \"61\", \"62\", \"63\", \"64\", \"65\",\n        \"71\", \"81\", \"82\", \"91\"\n    ]);\n    if (!provinceCodes.has(str.substring(0, 2)))\n        return false;\n    const birthday = str.substring(6, 14);\n    const year = birthday.substring(0, 4);\n    const month = birthday.substring(4, 6);\n    const day = birthday.substring(6, 14);\n    const birthDate = new Date(year + \"/\" + month + \"/\" + day);\n    if (birthDate.getFullYear() !== parseInt(year) ||\n        birthDate.getMonth() + 1 !== parseInt(month) ||\n        birthDate.getDate() !== parseInt(day)) {\n        return false;\n    }\n    const weights = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n    const checkCodes = [\"1\", \"0\", \"X\", \"9\", \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\"];\n    let sum = 0;\n    for (let i = 0; i < 17; i++) {\n        sum += Number(str[i]) * weights[i];\n    }\n    const calculatedCheckCode = checkCodes[sum % 11];\n    if (str[17].toUpperCase() !== calculatedCheckCode) {\n        return false;\n    }\n    return true;\n}\n","/**\n * 判断是否包含某字符\n * @param str 字符串\n * @param char 字符\n * @returns 是否包含\n */\nexport function regIsHas(str, char) {\n    if (!str || !char)\n        return false;\n    return str.includes(char);\n}\n","/**\n * 判断是否为手机号\n * @param str 字符串\n * @returns 是否为手机号\n */\nexport function regPhone(str) {\n    return typeof str === 'string' && /^1[3456789]\\d{9}$/.test(str);\n}\n","export function replaceAll(str, target, replacement) {\n    return str.replace(new RegExp(target, \"g\"), replacement);\n}\n","/**\n * 随机打乱数组\n * @param array 数组\n */\nexport function shuffleArray(array) {\n    if (!Array.isArray(array) || array.length <= 1)\n        return array;\n    let arr = array.slice();\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n","/**\n * 延迟函数\n */\nexport function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/**\n * 字符串替换\n * @param str 字符串\n * @param start 开始位置\n * @param end 结束位置\n * @param icon 替换字符\n * @returns 替换后的字符串\n */\nexport function strReplace(str, start, end, icon = '*') {\n    if (typeof str !== 'string' || str.length === 0 || start < 0 || end > str.length || start >= end)\n        return str;\n    return str.slice(0, start) + icon.repeat(end - start) + str.slice(end);\n}\n","/**\n * 节流\n * @param callback 回调函数\n * @param wait 等待时间\n */\nexport const throttle = (function () {\n    let last = 0;\n    return (callback, wait = 800) => {\n        let now = +new Date();\n        if (now - last > wait) {\n            callback();\n            last = now;\n        }\n    };\n})();\n","/**\n * 转树形结构\n * @param {*} data\n * @param {*} pid   父级id\n */\nexport function toTree(data, pid) {\n    let tree = [];\n    let lookup = {};\n    data.forEach((item) => {\n        lookup[item.id] = Object.assign(Object.assign({}, item), { children: [] });\n    });\n    data.forEach((item) => {\n        if (item[pid] === null) {\n            tree.push(lookup[item.id]);\n        }\n        else {\n            lookup[item[pid]].children.push(lookup[item.id]);\n        }\n    });\n    return tree;\n}\n","/**\n * 数组去重\n * @param data 数组\n */\nexport function uniqueArray(data) {\n    if (!Array.isArray(data))\n        return data;\n    return [...new Set(data)];\n}\n","/**\n * 获取本月有几周\n * @returns\n */\nexport function weekInMonthCount() {\n    //设置时间为本月的1号\n    let date = new Date(new Date().setDate(1) || new Date().setDate(1));\n    let firstWeekDate;\n    if (date.getDay() === 0) {\n        firstWeekDate = 6;\n    }\n    else {\n        firstWeekDate = date.getDay() - 1;\n    }\n    date.setMonth(date.getMonth() + 1);\n    date.setDate(0);\n    let monthHasDays = date.getDate() + firstWeekDate;\n    return Math.ceil(monthHasDays / 7);\n}\n","/**\n * ZZTOOL工具类\n */\n\"use strict\";\nconst version = \"2.0.6\";\nconsole.log(\"%czztool%c\" + `V${version}`, \"background: #000000; color: #FFD700; border-radius: 3px 0 0 3px;padding:2px 5px\", \"background: #FFD700; color: #000000; border-radius: 0 3px 3px 0;padding:2px 5px\");\nexport { arrayTrim } from \"./utils/arrayTrim\";\nexport { chunkArray } from \"./utils/chunkArray\";\nexport { chunkArrayItem } from \"./utils/chunkArrayItem\";\nexport { dataChangeIndex } from \"./utils/dataChangeIndex\";\nexport { dataEmpty } from \"./utils/dataEmpty\";\nexport { dataEqual } from \"./utils/dataEqual\";\nexport { dataFind } from \"./utils/dataFind\";\nexport { dataMerge } from \"./utils/dataMerge\";\nexport { debounce } from \"./utils/debounce\";\nexport { deepClone } from \"./utils/deepClone\";\nexport { getBetweenDate } from \"./utils/getBetweenDate\";\nexport { getChar } from \"./utils/getChar\";\nexport { getDate } from \"./utils/getDate\";\nexport { getDateInfo } from \"./utils/getDateInfo\";\nexport { getDateType } from \"./utils/getDateType\";\nexport { getFirstChar } from \"./utils/getFirstChar\";\nexport { getLastChar } from \"./utils/getLastChar\";\nexport { getMonthDays } from \"./utils/getMonthDays\";\nexport { getPercentage } from \"./utils/getPercentage\";\nexport { getRandom } from \"./utils/getRandom\";\nexport { getRandomArray } from \"./utils/getRandomArray\";\nexport { getRandomColor } from \"./utils/getRandomColor\";\nexport { getRandomRGBA } from \"./utils/getRandomRGBA\";\nexport { getRandomRGBColor } from \"./utils/getRandomRGBColor\";\nexport { getRecentDate } from \"./utils/getRecentDate\";\nexport { getSameIndexValue } from \"./utils/getSameIndexValue\";\nexport { getTimeStamp } from \"./utils/getTimeStamp\";\nexport { getTimeStep } from \"./utils/getTimeStep\";\nexport { getType } from \"./utils/getType\";\nexport { getUrlParam } from \"./utils/getUrlParam\";\nexport { getValue } from \"./utils/getValue\";\nexport { getWeekDay } from \"./utils/getWeekDay\";\nexport { getWeekTime } from \"./utils/getWeekTime\";\nexport { getYearWeeks } from \"./utils/getYearWeeks\";\nexport { groupBy } from \"./utils/groupBy\";\nexport { moneyFormat } from \"./utils/moneyFormat\";\nexport { paramformat } from \"./utils/paramformat\";\nexport { regEmail } from \"./utils/regEmail\";\nexport { regIdcard } from \"./utils/regIdcard\";\nexport { regIsHas } from \"./utils/regIsHas\";\nexport { regPhone } from \"./utils/regPhone\";\nexport { replaceAll } from \"./utils/replaceAll\";\nexport { shuffleArray } from \"./utils/shuffleArray\";\nexport { sleep } from \"./utils/sleep\";\nexport { strReplace } from \"./utils/strReplace\";\nexport { throttle } from \"./utils/throttle\";\nexport { toArray } from \"./utils/toArray\";\nexport { toString } from \"./utils/toString\";\nexport { toTree } from \"./utils/toTree\";\nexport { uniqueArray } from \"./utils/uniqueArray\";\nexport { weekInMonthCount } from \"./utils/weekInMonthCount\";\n"],"names":["arrayTrim","data","item","chunkArray","size","result","lng","i","chunkArrayItem","arr","getFirstChar","str","error","msg","toString","obj","chars","toArray","index","firstChar","dataChangeIndex","newIndex","indexArr","newIndexArr","newData","_","hfn","oldKey","newKey","key","getType","dataEmpty","returnKeys","parentKey","emptyKeys","checkEmpty","value","fullKey","isEmpty","nestedResult","dataEqual","obj1","obj2","options","defaultOptions","differingKeys","isObject","deepCompare","value1","value2","k","v","dataFind","find","itemkey","dataMerge","data1","data2","type","debounce","timer","callback","wait","deepClone","arrCopy","objCopy","getDateInfo","formattedStr","date","pad","num","getDateType","year","month","day","hour","minute","second","getDate","getTimeStamp","mill","timestamp","getBetweenDate","date1","days","dateTime","dateTime1","diffDays","time","getChar","start","end","char","getLastChar","getMonthDays","getPercentage","part","total","decimalPlaces","getRandom","min","max","getRandomArray","length","getRandomColor","getRandomRGBA","getRandomRGBColor","getRecentDate","step","format","option","now","stepDays","endDate","dateArr","getSameIndexValue","getTimeStep","isValidTime","toSeconds","a","startTime","endTime","stepTime","getUrlParam","url","getValue","path","acc","getWeekDay","getWeekTime","dayOfWeek","startOfWeek","getYearWeeks","first","allyears","groupBy","moneyFormat","money","intPart","decimalPart","paramformat","_a","formData","regEmail","regIdcard","birthday","birthDate","weights","checkCodes","sum","calculatedCheckCode","regIsHas","regPhone","replaceAll","target","replacement","shuffleArray","array","j","sleep","ms","resolve","strReplace","icon","throttle","last","toTree","pid","tree","lookup","uniqueArray","weekInMonthCount","firstWeekDate","monthHasDays","version"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52]}